{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/account/account.component.ts","./src/app/account/account.component.html","./src/app/add/add.component.ts","./src/app/add/add.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth.guard.ts","./src/app/auth.service.ts","./src/app/error/error.component.ts","./src/app/error/error.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/token.interceptor.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../auth.service';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css']\n})\nexport class AccountComponent implements OnInit {\n\n  constructor(\n    private auth: AuthService\n  ) { }\n\n\n\n  username = 'пользователь'\n  ngOnInit(): void {\n    if (this.auth.isAuthenticated()) {\n      this.username = this.auth.getName().split(' ')[0]\n    }\n  }\n\n}\n","<div class=\"block-one\">\n  <div fxFlex=\"20\" fxHide.lt-md=\"true\" fxFlex.lt-lg=\"30\" fxLayout=\"column\">\n  </div>\n  <div fxFlex=\"60\" fxFlex.lt-md=\"100\" fxFlex.lt-lg=\"55\" class=\"account-content-block\">\n    <div class=\"content-header\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n      <div>\n        <img src=\"assets/images/user.png\" style=\"width: 120px; height: 120px\">\n      </div>\n      <div style=\"text-align: center; padding-top: 15px\">\n        <span class=\"text-main header\">Добро пожаловать, {{username | titlecase}}</span>\n      </div>\n    </div>\n    <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutAlign=\"space-around center\">\n      <mat-card >\n        <div fxLayout=\"row\">\n          <div fxFlex=\"70\" >\n            <div class=\"card-header\">\n              Текущие заявки: {{0}}\n            </div>\n            <div class=\"card-subtile\">\n              Узнайте о состоянии своих текущих заявок, их оплате\n            </div>\n          </div>\n          <div fxFlex=\"30\" fxLayoutAlign=\"end center\">\n            <img class=\"card-image\" src=\"assets/images/applications-state.png\">\n          </div>\n        </div>\n        <div style=\"height: 20px\"></div>\n<!--        <mat-card-header style=\"padding-top: 15px\">-->\n<!--          <mat-card-title class=\"card-header\">Текущие заявки: {{0}}</mat-card-title>-->\n<!--          <mat-card-subtitle class=\"card-subtile\"  style=\"padding-top: 10px\">-->\n<!--            Узнайте о состоянии своих текущих заявок, их оплате-->\n<!--          </mat-card-subtitle>-->\n<!--          <div style=\"margin-bottom: 15px\">-->\n<!--            -->\n<!--          </div>-->\n<!--        </mat-card-header>-->\n        <mat-divider></mat-divider>\n        <mat-card-footer style=\"\" class=\"card-footer\" >\n          <div fxLayoutAlign=\"start center\" fxFlexFill [routerLink]=\"['/applications']\" class=\"button alternative-button card-link\">\n            Узнать о состоянии\n          </div>\n        </mat-card-footer>\n\n      </mat-card>\n      <mat-card>\n        <div fxLayout=\"row\">\n          <div fxFlex=\"70\" >\n            <div class=\"card-header\">\n              Новая заявка\n            </div>\n            <div class=\"card-subtile\">\n              Подайте новую заявку на товарный знак и укажите все необходимые данные\n            </div>\n          </div>\n          <div fxFlex=\"30\" fxLayoutAlign=\"end center\">\n            <img class=\"card-image\" src=\"assets/images/add-application.png\">\n          </div>\n        </div>\n<!--        <mat-card-header style=\"padding-top: 15px\">-->\n<!--          <mat-card-title class=\"card-header\">Новая заявка</mat-card-title>-->\n<!--          <mat-card-subtitle class=\"card-subtile\" style=\"padding-top: 10px\">-->\n<!--            Подайте новую заявку на товарный знак и укажите все необходимые данные-->\n<!--          </mat-card-subtitle>-->\n<!--          <div style=\"margin-bottom: 15px\">-->\n<!--            <img class=\"card-image\" src=\"assets/images/add-application.png\">-->\n<!--          </div>-->\n<!--        </mat-card-header>-->\n        <mat-divider></mat-divider>\n        <mat-card-footer class=\"card-footer\" >\n          <div fxLayoutAlign=\"start center\" fxFlexFill [routerLink]=\"['/add']\" class=\"button alternative-button card-link\">\n            Подать заявку\n          </div>\n        </mat-card-footer>\n      </mat-card>\n    </div>\n  </div>\n  <div class=\"account-empty-block\" fxFlex=\"20\" fxHide.lt-md=\"true\" fxFlex.lt-lg=\"15\" >\n\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.css']\n})\nexport class AddComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  selectType() {\n\n  }\n}\n","<div class=\"block-one\"  style=\"background: burlywood\">\n  <form style=\"background: indianred\">\n      <mat-horizontal-stepper style=\"height: calc(100vh - 100px); width: auto\" [linear]=\"true\">\n        <!--  Icon overrides      -->\n\n        <!--  /Icon overrides      -->\n        <mat-step state=\"name\">\n          <ng-template matStepLabel class=\"text-main\">\n            Название\n          </ng-template>\n          <ng-template matStepperIcon=\"number\">\n            <mat-icon>insert_drive_file</mat-icon>\n          </ng-template>\n          <div class=\"text-main header\" style=\"padding-top: 25px; padding-bottom: 25px; text-align: center; \">\n            Введите название товарного знака\n          </div>\n          <div style=\"padding-top: 25px; padding-bottom: 25px;\" fxLayoutAlign=\"center center\">\n            <mat-form-field appearance=\"outline\" style=\"width: 350px\">\n              <mat-label>Название</mat-label>\n              <input matInput placeholder=\"Название товарного знака\" required >\n            </mat-form-field>\n          </div>\n          <div fxLayoutAlign=\"end end\">\n            <button mat-raised-button matStepperNext class=\"button primary-button\" type=\"button\">Далее</button>\n          </div>\n        </mat-step>\n        <mat-step state=\"type\">\n          <ng-template matStepLabel>Тип</ng-template>\n          <ng-template matStepperIcon=\"number\">\n            <mat-icon>vibration</mat-icon>\n          </ng-template>\n          <div class=\"text-main header\" style=\"padding-top: 25px; padding-bottom: 25px; text-align: center; \">\n            Выберите тип товарного знака\n          </div>\n          <div fxLayoutAlign=\"center center\">\n            <mat-radio-group  fxLayout=\"row\" fxLayout.lt-md=\"column\">\n              <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n                <div fxHide.lt-md=\"true\" class=\"selector\" (click)=\"radioWord.checked = true\">\n                  <mat-card fxLayout=\"column\" (click)=\"selectType()\" >\n                    <div>\n                      <img src=\"assets/images/sign-os.png\" style=\"width: 200px; height: 200px\">\n                    </div>\n                    <div class=\"text-main card-label\">Словесный</div>\n                  </mat-card>\n                </div>\n                <mat-radio-button #radioWord value=\"word\">\n                  <div style=\"width: 350px\" fxHide=\"true\" fxShow.lt-md=\"true\" >\n                    <mat-card fxLayout=\"row\" (click)=\"selectType()\" >\n                      <div>\n                        <img src=\"assets/images/sign-os-mini.png\" style=\"width: 80px; height: 80px\">\n                      </div>\n                      <div style=\"padding-left: 15px\" fxLayoutAlign=\"center center\" class=\"text-main card-label\">\n                        Словесный\n                      </div>\n                    </mat-card>\n                  </div>\n                </mat-radio-button>\n              </div>\n              <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n                <div fxHide.lt-md=\"true\" class=\"selector\" (click)=\"radioImage.checked = true\">\n                  <mat-card fxLayout=\"column\" (click)=\"selectType()\" >\n                    <div>\n                      <img src=\"assets/images/sign.png\" style=\"width: 200px; height: 200px\">\n                    </div>\n                    <div class=\"text-main card-label\">Изобразительный</div>\n                  </mat-card>\n                </div>\n                <mat-radio-button #radioImage value=\"image\">\n                  <div style=\"width: 350px\" fxHide=\"true\" fxShow.lt-md=\"true\">\n                    <mat-card fxLayout=\"row\" (click)=\"selectType()\" >\n                      <div>\n                        <img src=\"assets/images/sign-mini.png\" style=\"width: 80px; height: 80px\">\n                      </div>\n                      <div style=\"padding-left: 15px\" fxLayoutAlign=\"center center\" class=\"text-main card-label\">\n                        Изобразительный\n                      </div>\n                    </mat-card>\n                  </div>\n                </mat-radio-button>\n              </div>\n              <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n                <div fxHide.lt-md=\"true\" class=\"selector\" (click)=\"radioComplex.checked = true\">\n                  <mat-card  fxLayout=\"column\" (click)=\"selectType()\" >\n                    <div>\n                      <img src=\"assets/images/sign-comb.png\" style=\"width: 200px; height: 200px\">\n                    </div>\n                    <div class=\"text-main card-label\">Комбинированный</div>\n                  </mat-card>\n                </div>\n                <mat-radio-button #radioComplex value=\"complex\">\n                  <div style=\"width: 350px\" fxHide=\"true\" fxShow.lt-md=\"true\" >\n                    <mat-card fxLayout=\"row\" (click)=\"selectType()\" >\n                      <div>\n                        <img src=\"assets/images/sign-comb-mini.png\" style=\"width: 80px; height: 80px\">\n                      </div>\n                      <div style=\"padding-left: 15px\" fxLayoutAlign=\"center center\" class=\"text-main card-label\">\n                        Комбинированный\n                      </div>\n                    </mat-card>\n                  </div>\n                </mat-radio-button>\n              </div>\n            </mat-radio-group>\n          </div>\n          <div class=\"selector\" >\n          </div>\n          <div style=\"padding-top: 25px\" fxLayout=\"row\" fxLayoutAlign=\"end end\">\n            <button mat-button matStepperPrevious class=\"button alternative-button\" type=\"button\">Назад</button>\n            <button mat-raised-button matStepperNext class=\"button primary-button\" type=\"button\">Далее</button>\n          </div>\n        </mat-step>\n        <mat-step state=\"logo\">\n          <ng-template matStepLabel>Логотип</ng-template>\n          <div class=\"text-main header\" style=\"padding-top: 25px; padding-bottom: 25px; text-align: center; \">\n            Загрузите логотип\n          </div>\n          <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n            <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n              <div >\n                Загрузите изображение логотипа, если оно есть\n              </div>\n              <div><button mat-flat-button class=\"button primary-button\">Загрузить</button></div>\n            </div>\n            <div>\n              <h2>Введитеописание логотипа, если оно есть</h2>\n              <mat-form-field appearance=\"outline\" style=\"width: 350px\">\n                <mat-label>Описание</mat-label>\n                <input matInput placeholder=\"Описание логотипа\" required >\n              </mat-form-field>\n            </div>\n          </div>\n          <div fxLayout=\"row\" fxLayoutAlign=\"end end\">\n            <button mat-button matStepperPrevious class=\"button alternative-button\" type=\"button\">Назад</button>\n            <button mat-raised-button matStepperNext class=\"button primary-button\" type=\"button\">Далее</button>\n          </div>\n      </mat-step>\n        <mat-step state=\"colors\">\n          <ng-template matStepLabel>Дополнительно</ng-template>\n          <div style=\"text-align: center\">\n            <h1>Укажите цвета и неохраняемые элементы</h1>\n          </div>\n          <div>\n            <h2>Заявляемые цвета</h2>\n            <mat-form-field appearance=\"outline\" style=\"width: 350px\">\n              <mat-label>Цвета</mat-label>\n              <input matInput placeholder=\"Цвета\" required >\n            </mat-form-field>\n          </div>\n          <div>\n            <h2>Неохраняемые элементы</h2>\n            <mat-form-field appearance=\"outline\" style=\"width: 350px\">\n              <mat-label>Неохраняемые элементы</mat-label>\n              <input matInput placeholder=\"Неохраняемые элементы\" required >\n            </mat-form-field>\n          </div>\n          <div fxLayout=\"row\" fxLayoutAlign=\"end end\">\n            <button mat-button matStepperPrevious color=\"primary\" type=\"button\">Назад</button>\n            <button mat-raised-button matStepperNext color=\"primary\" type=\"button\">Далее</button>\n          </div>\n        </mat-step>\n        <mat-step state=\"classes\">\n          <ng-template matStepLabel>Классы</ng-template>\n          <div style=\"text-align: center\">\n            <h1>Укажите сферу деятельности</h1>\n          </div>\n          <div fxLayout=\"row\" fxLayoutAlign=\"end end\">\n            <button mat-button matStepperPrevious color=\"primary\" type=\"button\">Назад</button>\n            <button mat-raised-button matStepperNext color=\"primary\" type=\"button\">Далее</button>\n          </div>\n        </mat-step>\n        <mat-step state=\"applicant\">\n          <ng-template matStepLabel>Заявитель</ng-template>\n          <div style=\"text-align: center\">\n            <h1>Укажите данные о заявителе</h1>\n          </div>\n          <div fxLayout=\"row\" fxLayoutAlign=\"end end\">\n            <button mat-button matStepperPrevious color=\"primary\" type=\"button\">Назад</button>\n            <button mat-raised-button matStepperNext color=\"primary\" type=\"button\">Далее</button>\n          </div>\n        </mat-step>\n        <mat-step state=\"options\">\n          <ng-template matStepLabel>Опции</ng-template>\n          <div style=\"text-align: center\">\n            <h1>Выберите способ подачи документа</h1>\n          </div>\n          <div fxLayout=\"row\" fxLayoutAlign=\"end end\">\n            <button mat-button matStepperPrevious color=\"primary\" type=\"button\">Назад</button>\n            <button mat-raised-button matStepperNext color=\"primary\" type=\"button\">Далее</button>\n          </div>\n        </mat-step>\n        <mat-step state=\"done\">\n          <ng-template matStepLabel>Готово</ng-template>\n          <div style=\"text-align: center\">\n            <h1>Все готово!</h1>\n          </div>\n          <div fxLayout=\"row\" fxLayoutAlign=\"end end\">\n            <button mat-button matStepperPrevious color=\"primary\" type=\"button\">Назад</button>\n            <button mat-raised-button matStepperNext color=\"primary\" type=\"submit\">Оплатить</button>\n          </div>\n        </mat-step>\n      </mat-horizontal-stepper>\n\n  </form>\n</div>\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {HomeComponent} from './home/home.component';\r\nimport {RegisterComponent} from './register/register.component';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {AccountComponent} from './account/account.component';\r\nimport {ErrorComponent} from './error/error.component';\r\nimport {AddComponent} from './add/add.component';\r\nimport {AuthGuard} from './auth.guard';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  { path: 'register', component: RegisterComponent},\r\n  { path: 'login', component: LoginComponent},\r\n  { path: 'account', component: AccountComponent, canActivate: [AuthGuard]},\r\n  { path:  'error', component: ErrorComponent},\r\n  { path:  'add', component: AddComponent, canActivate: [AuthGuard]}\r\n]\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule {\r\n\r\n}\r\n","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {AuthService} from './auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  constructor(\n    public router: Router,\n    public auth: AuthService\n    ) {\n  }\n  title = 'self-register-mark-II';\n  opened =  false;\n  public username = 'user'\n\n  ngOnInit(): void {\n    const potentialToken = localStorage.getItem('auth-token')\n    const potentialName = localStorage.getItem('username')\n    if (potentialToken !== null) {\n      this.auth.setToken(potentialToken)\n      this.auth.setName(potentialName)\n      this.username = potentialName.split(' ')[0]\n    }\n  }\n\n  goToLogin() {\n    this.router.navigate(['/login'])\n  }\n\n  logout() {\n    this.auth.logout()\n    this.router.navigate(['/'])\n  }\n}\n","<div (window:resize)=\"sidenav.close()\">\n  <mat-toolbar style=\"position: fixed; z-index: 999\" fxLayout=\"row\">\n    <div fxLayout=\"row\" fxFlex=\"10\">\n      <button style=\"height: 40px; width: 40px\" mat-icon-button (click)=\"sidenav.toggle()\" fxHide=\"true\" fxShow.lt-md=\"true\" >\n        <mat-icon>menu</mat-icon>\n      </button>\n      <div class=\"nav-block\" [routerLink]=\"['/']\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n        <img src=\"assets/images/logo.png\" style=\"width: 45px; height: 45px\" *ngIf=\"router.url != '/login'\">\n        <span class=\"text-main nav-item\">Selfreg</span>\n      </div>\n    </div>\n    <div fxFlex=\"70\" style=\"margin-left: 25px\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxShow=\"true\" fxHide.lt-md=\"true\">\n      <div class=\"nav-block\" [routerLink]=\"['/about']\"><span class=\"text-main nav-item\">О нас</span></div>\n      <div class=\"nav-block\" [routerLink]=\"['/contacts']\"><span class=\"text-main nav-item\">Контакты</span></div>\n    </div>\n    <div\n      *ngIf=\"!['/login?authError=true', '/login?expired=true', '/login?registered=true', '/login'].includes(router.url)\"\n      fxLayout=\"row\" fxLayoutAlign=\"end center\" fxFlex=\"20\" fxFlex.lt-md=\"80\">\n      <button [routerLink]=\"['/register']\" class=\"button\" mat-button fxHide.xs=\"true\" *ngIf=\"!auth.isAuthenticated()\">Регистрация</button>\n      <button  mat-raised-button class=\"button primary-button\" *ngIf=\"!auth.isAuthenticated()\" (click)=\"goToLogin()\">Войти</button>\n      <button [routerLink]=\"['/account']\" class=\"button\" mat-button fxHide.xs=\"true\" *ngIf=\"auth.isAuthenticated()\">{{(auth.getName() ? auth.getName().split(' ')[0] : 'user') | titlecase}}</button>\n      <button mat-raised-button class=\"button primary-button\" *ngIf=\"auth.isAuthenticated()\" (click)=\"logout()\">Выйти</button>\n    </div>\n  </mat-toolbar>\n  <mat-sidenav-container style=\"top: 55px\" autosize>\n    <mat-sidenav [autoFocus]=\"false\" #sidenav fxLayout=\"column\" style=\"width: 100%\">\n      <div fxLayout=\"column\" fxHide=\"true\" fxShow.lt-md=\"true\">\n        <div *ngIf=\"auth.isAuthenticated()\">\n          <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n            <img class=\"side-image\" src=\"assets/images/user.png\">\n          </div>\n          <div class=\"text-main header\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n            {{username}}\n          </div>\n          <div  fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\n            <div [routerLink]=\"['/account']\" fxLayout=\"column\" fxLayoutAlign=\"end center\" class=\"side-block\">\n              <img src=\"assets/images/homepage.png\" class=\"side-block-image\">\n              <div class=\"text-main side-item\">Главная</div>\n            </div>\n            <div [routerLink]=\"['/applications']\"  fxLayout=\"column\" fxLayoutAlign=\"end center\" class=\"side-block\">\n              <img src=\"assets/images/document.png\" class=\"side-block-image\">\n              <div class=\"text-main side-item\">Заявки</div>\n            </div>\n          </div>\n          <div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\n            <div [routerLink]=\"['/personal']\"  fxLayout=\"column\" fxLayoutAlign=\"end center\" class=\"side-block\">\n              <img src=\"assets/images/id-card.png\" class=\"side-block-image\">\n              <div class=\"text-main side-item\">Личные данные</div>\n            </div>\n            <div [routerLink]=\"['/security']\" fxLayout=\"column\" fxLayoutAlign=\"end center\" class=\"side-block\">\n              <img src=\"assets/images/shield.png\" class=\"side-block-image\">\n              <div class=\"text-main side-item\">Безопасность</div>\n            </div>\n          </div>\n        </div>\n        <div>\n          <div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\n            <div [routerLink]=\"['/about']\"  fxLayout=\"column\" fxLayoutAlign=\"end center\" class=\"side-block\">\n              <img src=\"assets/images/signs.png\" class=\"side-block-image\">\n              <div class=\"text-main side-item\">О нас</div>\n            </div>\n            <div [routerLink]=\"['/contacts']\" fxLayout=\"column\" fxLayoutAlign=\"end center\" class=\"side-block\">\n              <img src=\"assets/images/contacts.png\" class=\"side-block-image\">\n              <div class=\"text-main side-item\">Контакты</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </mat-sidenav>\n    <mat-sidenav-content fxFlexFill>\n      <div\n        *ngIf=\"['/account', '/applications', '/personal', '/security'].includes(router.url)\"\n        fxHide.lt-md=\"true\"\n        class=\"content-navigator\" fxLayout=\"column\">\n        <div [routerLink]=\"['/account']\" fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"content-navigator-item active-link\">\n          <mat-icon>perm_identity</mat-icon>\n          <span class=\"text-main nav-text\">Главная</span>\n        </div>\n        <div [routerLink]=\"['/applications']\" fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"content-navigator-item\">\n          <mat-icon>library_books</mat-icon>\n          <span class=\"text-main nav-text\">Заявки</span>\n        </div>\n        <div [routerLink]=\"['/personal']\" fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"content-navigator-item\">\n          <mat-icon>account_box</mat-icon>\n          <span class=\"text-main nav-text\">Личные данные</span>\n        </div>\n        <div [routerLink]=\"['/security']\" fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"content-navigator-item\">\n          <mat-icon>security</mat-icon>\n          <span class=\"text-main nav-text\">Безопасность</span>\n        </div>\n      </div>\n      <router-outlet></router-outlet>\n      <app-footer></app-footer>\n    </mat-sidenav-content>\n  </mat-sidenav-container>\n</div>\n\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AccountComponent } from './account/account.component';\nimport { HomeComponent } from './home/home.component';\nimport {AppRoutingModule} from './app-routing.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatIconModule} from '@angular/material/icon';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport { ErrorComponent } from './error/error.component';\nimport {MatInputModule} from '@angular/material/input';\nimport { FooterComponent } from './footer/footer.component';\nimport {MatDividerModule} from '@angular/material/divider';\nimport { AddComponent } from './add/add.component';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {TokenInterceptor} from './token.interceptor';\nimport {MatRadioModule, MAT_RADIO_DEFAULT_OPTIONS} from '@angular/material/radio';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    AccountComponent,\n    HomeComponent,\n    ErrorComponent,\n    FooterComponent,\n    AddComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatIconModule,\n    FlexLayoutModule,\n    MatSidenavModule,\n    MatInputModule,\n    MatDividerModule,\n    MatStepperModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MatRadioModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      multi: true,\n      useClass: TokenInterceptor\n    },\n    {\n      provide: MAT_RADIO_DEFAULT_OPTIONS,\n      useValue: { color: 'primary' },\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {ActivatedRouteSnapshot, CanActivate, CanActivateChild, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {Observable, of} from 'rxjs';\r\nimport {Injectable} from '@angular/core';\r\nimport {AuthService} from './auth.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AuthGuard implements CanActivate, CanActivateChild {\r\n\r\n  constructor(\r\n    private auth: AuthService,\r\n    private router: Router) {\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n    if (this.auth.isAuthenticated()) {\r\n      return of(true)\r\n    }\r\n    else {\r\n      this.router.navigate(['/login'])\r\n      return of(false)\r\n    }\r\n  }\r\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n    return this.canActivate(route, state)\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {NewUser, User} from './interfaces';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {tap} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  private token = null;\r\n  private userName = null;\r\n\r\n  constructor(private http: HttpClient ) {\r\n  }\r\n  register(user: NewUser): Observable<NewUser> {\r\n    return this.http.post<NewUser>('/api/auth/register', user);\r\n  }\r\n\r\n  login(user: User): Observable<{token: string, name: string}> {\r\n    return this.http.post<{token: string, name: string}>('/api/auth/login', user)\r\n      .pipe(\r\n        tap(({token, name}) => {\r\n          console.log(token, name);\r\n          localStorage.setItem('auth-token', token);\r\n          localStorage.setItem('username', name);\r\n          this.setToken(token);\r\n          console.log('смотрим раз', name)\r\n          this.setName(name);\r\n          console.log('смотрим три', this.userName)\r\n        })\r\n      );\r\n  }\r\n\r\n  setToken(token: string) {\r\n    this.token = token;\r\n  }\r\n  getToken(): string {\r\n    return this.token;\r\n  }\r\n  setName(name: string) {\r\n    console.log('смотрим два', name)\r\n    this.userName = name;\r\n  }\r\n  getName(): string {\r\n    return this.userName;\r\n  }\r\n  isAuthenticated(): boolean {\r\n    return !!this.token;\r\n  }\r\n  logout() {\r\n    this.setToken(null);\r\n    this.setName(null);\r\n    localStorage.clear();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div style=\"height: 100%\" div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n  <div class=\"error\"  fxLayoutAlign=\"center\">\n    <img src=\"assets/images/emoji.svg\">\n  </div>\n  <div class=\"error\"  fxLayoutAlign=\"center\">\n    <h1>Ой... а такой страницы нет</h1>\n  </div>\n  <div class=\"error\"  fxLayoutAlign=\"center\">\n    <button mat-raised-button color=\"warn\">Вернуться на главную</button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-divider style=\"margin: 25px\"></mat-divider>\n<div  fxLayout=\"row\" fxLayout.xs=\"column\" style=\"margin-right: 25px; margin-left: 25px; margin-bottom: 25px\">\n  <div fxFlex=\"50\" fxLayoutAlign=\"start\" fxLayoutAlign.xs=\"center\">\n    <div fxLayout=\"row\" fxFlexAlign=\"center center\">\n      <small>© Created by .digital</small>\n    </div>\n  </div>\n  <div fxFlex=\"50\" fxLayoutAlign=\"center\">\n    <div fxLayout=\"row\" fxFlexAlign=\"center center\">\n      <img src=\"assets/images/inst.png\" style=\"width: 25px; height: 25px\">\n    </div>\n  </div>\n  <div fxFlex=\"50\" fxLayoutAlign=\"end\" fxLayoutAlign.xs=\"center\" >\n    <div fxLayout=\"row\" fxFlexAlign=\"center center\">\n\n    </div>\n  </div>\n<!--  <div fxFlex=\"50\"  style=\"margin: auto;position: center\" fxLayout=\"row\" fxFlexAlign=\"center center\">-->\n<!--    Created by .digital-->\n<!--  </div>-->\n<!--  <div fxFlex=\"50\"  fxLayout=\"row\" fxFlexAlign=\"center center\">-->\n<!--    <img src=\"assets/images/inst.png\" style=\"margin: auto;position: center;width: 25px; height: 25px\">-->\n<!--  </div>-->\n<!--  <div fxFlex=\"50\"  style=\"margin: auto;position: center\" fxLayout=\"row\" fxFlexAlign=\"center center\">-->\n<!--    Created by .digital-->\n<!--  </div>-->\n<!--  <img fxFlexAlign=\"center end\" src=\"assets/images/inst.png\" style=\"width: 25px; height: 25px\">-->\n<!--  <div fxFlexAlign=\"end center\">Москва, 2020 г. Created by .digital</div>-->\n</div>\n<!--  <div style=\"margin-bottom: 25px; background: red\" fxLayoutAlign=\"center center\" fxFlex=\"20\"></div>-->\n<!--  <div style=\"margin-bottom: 25px; background: green\" fxLayoutAlign=\"center center\" fxFlex=\"20\">-->\n<!--    <span></span>-->\n<!--    <img src=\"assets/images/inst.png\" style=\"width: 25px; height: 25px\">-->\n<!--    <div>Москва, 2020 г. Created by</div>-->\n<!--  </div>-->\n<!--  <div style=\"margin-bottom: 25px; background: blue\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxFlex=\"20\">-->\n<!--    Москва, 2020 г. Created by-->\n<!--    <a>.digital</a>-->\n<!--  </div>-->\n\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../auth.service';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n\n  registerForm: FormGroup\n  aSub: Subscription\n\n  constructor(\n    private router: Router,\n    private auth: AuthService) { }\n    public background = 'url(assets/images/background-1080-blurry1.png)'\n\n  ngOnInit(): void {\n    if (this.auth.isAuthenticated()) {\n      console.log(true)\n      this.router.navigate(['/account'])\n    } else {\n      this.registerForm = new FormGroup({\n        username : new FormControl(null, [Validators.required]),\n        email    : new FormControl(null, [Validators.required, Validators.email]),\n        password : new FormControl(null, [Validators.required, Validators.minLength(8)])\n      })\n      console.log(false)\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.aSub) {\n      this.aSub.unsubscribe()\n    }\n  }\n\n  submit() {\n    if (this.registerForm.invalid) {\n      console.log('wrong')//this.router.navigate(['/register'])\n    } else {\n      this.registerForm.disable()\n      this.aSub = this.auth.register(this.registerForm.value).subscribe(\n        () => {\n          this.router.navigate(['/login'], {\n            queryParams : {\n              registered: true\n            }\n          })\n        },\n        error => {\n          this.router.navigate(['/register'], {\n            queryParams : {\n              emailExists: true\n            }\n          })\n          this.registerForm.enable()\n        }\n      )\n    }\n\n  }\n}\n","<div class=\"block-one\" style=\"background-image: {{background}}\" fxLayout.lt-md=\"column\" fxLayout.gt-sm=\"row\" fxLayoutAlign=\"space-evenly center\">\n  <div class=\"description\">\n    <div class=\"text-main greetings-header\">\n      Регистрируй самостоятельно\n    </div>\n    <div class=\"text-alternative greetings-text\">\n      SelfReg это сервис, позволяющий тебе самостоятельно регистрировать товарные знаки без мам, пап и кредитов\n    </div>\n  </div>\n  <mat-card class=\"register-card\" fxHide.lt-md=\"true\" fxShow=\"true\">\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"submit()\">\n      <mat-form-field appearance=\"outline\" class=\"text-main\">\n        <mat-label >Ваше имя</mat-label>\n        <input formControlName=\"username\" matInput placeholder=\"Имя\" fxLayoutAlign=\"center\">\n        <mat-error *ngIf=\"registerForm.get('username').invalid && registerForm.get('username').touched\">\n          Поле 'Имя' является обязательным\n        </mat-error>\n      </mat-form-field>\n      <mat-form-field appearance=\"outline\" class=\"text-main\">\n        <mat-label>e-mail</mat-label>\n        <input formControlName=\"email\" type=\"email\" matInput placeholder=\"email\">\n        <mat-error *ngIf=\"registerForm.get('email').invalid && registerForm.get('email').touched\">\n          Введите корректный email\n        </mat-error>\n      </mat-form-field>\n      <mat-form-field appearance=\"outline\" class=\"text-main\">\n        <mat-label>Пароль</mat-label>\n        <input formControlName=\"password\" type=\"password\" matInput placeholder=\"Пароль\">\n        <mat-error *ngIf=\"registerForm.get('password').invalid && registerForm.get('password').touched\">\n          Введите корректный пароль не менее 8 символов\n        </mat-error>\n      </mat-form-field>\n      <button type=\"submit\" class=\"primary-button register-button\" mat-raised-button>Зарегистрироваться</button>\n    </form>\n  </mat-card>\n  <button [routerLink]=\"['/register']\" class=\"primary-button register-button-alt\" mat-flat-button fxHide=\"true\" fxShow.lt-md=\"true\">Зарегистрироваться</button>\n</div>\n","import {Component, ElementRef, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AuthService} from '../auth.service';\nimport {Subscription} from 'rxjs';\nimport {ActivatedRoute, Params, Router} from '@angular/router';\n//\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n\n  loginForm: FormGroup\n  aSub: Subscription\n  wrongAuth = false\n  expired = false\n  canLogin = false\n\n  constructor(\n    private auth: AuthService,\n    private router: Router,\n    private route: ActivatedRoute) {\n\n  }\n\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      email    : new FormControl(null, [Validators.required, Validators.email]),\n      password : new FormControl(null, [Validators.required, Validators.minLength(8)])\n    })\n    this.route.queryParams.subscribe((params: Params ) => {\n      if (params['registered']) {\n        this.canLogin = true\n      }\n      if (params['expired']) {\n        this.expired = true\n      }\n      if (params['authError']) {\n        this.wrongAuth = true\n      }\n    })\n  }\n  ngOnDestroy(): void {\n    console.log(this.aSub)\n    if (this.aSub) {\n      this.aSub.unsubscribe()\n    }\n  }\n\n  submit() {\n    this.loginForm.disable()\n    this.aSub = this.auth.login(this.loginForm.value).subscribe(\n      () => {\n        this.router.navigate(['/account'])\n      },\n      error => {\n        console.warn(error)\n        this.router.navigate(['/login'], {\n          queryParams: {\n            authError: true\n          }\n        })\n        // this.snackBar.open('message', 'OK', {\n        //   duration: 2000,\n        // });\n        // SnackbarService.snack('Неверный логин')  //this.wrongAuth = true// this.openSnackBar('Message archived');\n        this.loginForm.enable()\n      }\n      )\n  }\n\n}\n","<div class=\"block-one\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <mat-card class=\"login-window\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n    <img src=\"assets/images/logo.png\" style=\"height: 45px; width: 45px; margin-bottom: 10px\">\n    <div class=\"card-header\">\n      Вход\n    </div>\n    <div class=\"text-alternative description\">\n      Используйте свою учетную запись для входа\n    </div>\n    <div class=\"text-alternative announcement-negative\" fxLayoutAlign=\"center center\" *ngIf=\"wrongAuth\">Неверный логин или пароль</div>\n    <div class=\"text-alternative announcement-negative\" fxLayoutAlign=\"center center\" *ngIf=\"expired\">Сеанс закончен, войдите заново</div>\n    <div class=\"text-alternative announcement-positive\" fxLayoutAlign=\"center center\" *ngIf=\"canLogin\">Ура! Теперь вы можете войти</div>\n<!--    <h3 style=\"color: white; background: #c73934; width: 100%; text-align: center\" ></h3>-->\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"submit()\">\n      <mat-form-field  class=\"form-filed text-main\" appearance=\"outline\">\n        <mat-label>e-mail</mat-label>\n        <input formControlName=\"email\" type=\"email\" matInput placeholder=\"email\">\n<!--        <mat-hint style=\"color: white\" *ngIf=\"wrongAuth\">Неверный логин или пароль</mat-hint>-->\n        <mat-error *ngIf=\"loginForm.get('email').invalid && loginForm.get('email').touched\">\n          Введите корректный email\n        </mat-error>\n      </mat-form-field>\n      <mat-form-field  class=\"form-filed text-main\"  appearance=\"outline\">\n        <mat-label>Пароль</mat-label>\n        <input formControlName=\"password\" type=\"password\" matInput placeholder=\"Пароль\">\n        <mat-error *ngIf=\"loginForm.get('password').invalid && loginForm.get('password').touched\">\n          Введите корректный пароль не менее 8 символов\n        </mat-error>\n      </mat-form-field>\n      <div class=\"form-filed button alternative-button\" style=\"margin-bottom: 15%; margin-top: 0\">\n        Забыли пароль?\n      </div>\n      <div class=\"form-filed\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n        <div CLASS=\"button alternative-button\" [routerLink]=\"['/register']\">\n          Создать аккаунт\n        </div>\n        <button type=\"submit\" class=\"button primary-button\" mat-raised-button  [disabled]=\"loginForm.invalid || loginForm.disabled\">Войти</button>\n      </div>\n\n    </form>\n  </mat-card>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Subscription} from 'rxjs';\nimport {AuthService} from '../auth.service';\nimport {ActivatedRoute, Params, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit, OnDestroy {\n\n  registerForm: FormGroup\n  aSub: Subscription\n\n  constructor(\n    private auth: AuthService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    this.registerForm = new FormGroup({\n      username : new FormControl(null, [Validators.required]),\n      email    : new FormControl(null, [Validators.required, Validators.email]),\n      password : new FormControl(null, [Validators.required, Validators.minLength(8)])\n    })\n    this.route.queryParams.subscribe((params: Params ) => {\n      // if (params['registered']) {\n      //\n      // }\n    })\n  }\n  ngOnDestroy(): void {\n    if (this.aSub) {\n      this.aSub.unsubscribe()\n    }\n\n  }\n\n  submit() {\n    this.registerForm.disable()\n    this.aSub = this.auth.register(this.registerForm.value).subscribe(\n      () => {\n        this.router.navigate(['/login'], {\n          queryParams : {\n            registered: true\n          }\n        })\n      },\n      error => {\n        this.router.navigate(['/register'], {\n          queryParams : {\n            emailExists: true\n          }\n        })\n        this.registerForm.enable()\n      }\n    )\n  }\n\n}\n","<div class=\"block-one\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <mat-card class=\"register-window\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <div fxFlex.lt-md=\"100\" style=\"width: 350px;\" fxLayout=\"column\" fxLayoutAlign=\"start center\">\n      <div class=\"register-block\">\n        <img src=\"assets/images/logo.png\" style=\"height: 45px; width: 45px; margin-bottom: 10px\">\n      </div>\n      <div class=\"card-header register-header\">\n        Создайте новый аккаунт\n      </div>\n      <form [formGroup]=\"registerForm\" (ngSubmit)=\"submit()\" class=\"register-block\">\n        <div fxLayout=\"row\">\n          <mat-form-field style=\"width: 100%\" appearance=\"outline\" class=\"text-main\">\n            <mat-label>Имя</mat-label>\n            <input formControlName=\"username\" matInput placeholder=\"Имя\">\n          </mat-form-field>\n        </div>\n        <div>\n          <mat-form-field appearance=\"outline\" class=\"text-main\">\n            <mat-label>e-mail</mat-label>\n            <input formControlName=\"email\" type=\"email\" matInput placeholder=\"email\">\n          </mat-form-field>\n        </div>\n        <div>\n          <mat-form-field class=\"form-filed\" appearance=\"outline\" class=\"text-main\">\n            <mat-label>Пароль</mat-label>\n            <input formControlName=\"password\" type=\"password\"  matInput placeholder=\"Пароль\">\n          </mat-form-field>\n        </div>\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n        <div [routerLink]=\"['/login']\" class=\"button alternative-button\">\n          Войти\n        </div>\n        <button class=\"button primary-button\" type=\"submit\" mat-raised-button [disabled]=\"registerForm.invalid || registerForm.disabled\">Создать</button>\n      </div>\n      </form>\n    </div>\n    <div fxHide.lt-md=\"true\" style=\"width: 350px;\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n      <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n        <img src=\"assets/images/register-logo.png\" style=\"height: 50%; width: 50%\">\n      </div>\n      <div class=\"text-alternative card-description\">\n        Создай аккаунт. Подавай заявки отовсюду. Получай результат\n      </div>\n    </div>\n  </mat-card>\n</div>\n","import {AuthService} from './auth.service';\r\nimport {Injectable} from '@angular/core';\r\nimport {HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\r\nimport {Observable, throwError} from 'rxjs';\r\nimport {catchError} from 'rxjs/operators';\r\nimport {Router} from '@angular/router';\r\n\r\n@Injectable()\r\n\r\nexport class TokenInterceptor implements HttpInterceptor{\r\n  constructor(\r\n    private auth: AuthService,\r\n    private router: Router) {\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    if (this.auth.isAuthenticated()) {\r\n      req = req.clone({\r\n        setHeaders: {\r\n          Authorization: this.auth.getToken()\r\n        }\r\n      })\r\n    }\r\n    return next.handle(req).pipe(\r\n      catchError((error: HttpErrorResponse) => this.handleAuthError(error))\r\n    )\r\n  }\r\n  private handleAuthError(error: HttpErrorResponse): Observable<any> {\r\n    if (error.status === 401) {\r\n      this.router.navigate(['/login'], {\r\n        queryParams: {\r\n          expired: true\r\n        }\r\n      })\r\n    }\r\n    return throwError(error)\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}