{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/account/account/account.component.ts","webpack:///src/app/components/account/account/account.component.html","webpack:///src/app/components/account/add/add.component.ts","webpack:///src/app/components/account/add/add.component.html","webpack:///src/app/components/account/application/application.component.ts","webpack:///src/app/components/account/application/application.component.html","webpack:///src/app/components/account/applications/applications.component.ts","webpack:///src/app/components/account/applications/applications.component.html","webpack:///src/app/components/account/personal/personal.component.ts","webpack:///src/app/components/account/personal/personal.component.html","webpack:///src/app/components/account/privacy/privacy.component.ts","webpack:///src/app/components/account/privacy/privacy.component.html","webpack:///src/app/components/general/about/about.component.ts","webpack:///src/app/components/general/about/about.component.html","webpack:///src/app/components/general/contacts/contacts.component.ts","webpack:///src/app/components/general/contacts/contacts.component.html","webpack:///src/app/components/general/error/error.component.ts","webpack:///src/app/components/general/error/error.component.html","webpack:///src/app/components/general/footer/footer.component.ts","webpack:///src/app/components/general/footer/footer.component.html","webpack:///src/app/components/general/home/home.component.ts","webpack:///src/app/components/general/home/home.component.html","webpack:///src/app/components/general/login/login.component.ts","webpack:///src/app/components/general/login/login.component.html","webpack:///src/app/components/general/register/register.component.ts","webpack:///src/app/components/general/register/register.component.html","webpack:///src/app/services/account.service.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/class.service.ts","webpack:///src/app/services/snackbars.service.ts","webpack:///src/app/tools/app-routing.module.ts","webpack:///src/app/tools/auth.guard.ts","webpack:///src/app/tools/custom.pipe.ts","webpack:///src/app/tools/custom.validators.ts","webpack:///src/app/tools/token.interceptor.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","router","auth","title","opened","username","potentialToken","localStorage","getItem","potentialName","potentialEmail","setToken","setName","setEmail","split","navigate","logout","selector","templateUrl","styleUrls","AppModule","provide","multi","useClass","declarations","imports","providers","bootstrap","AccountComponent","account","appsCount","loaded","fetch","aSub","getMain","subscribe","main","name","apps","error","unsubscribe","appForm","setValue","value","AddComponent","clsService","accService","_snackBar","posting","apls","currentPage","pageNames","donePages","pagePosition","knownCategory","canHide","selectedClass","mainClasses","selectedClasses","discount","accessState","trademarkPanelOpenState","ownerPanelOpenState","optionHelpState","classes","console","log","status","upAplsSub","getAllApplicants","data","trademarkName","required","trademarkType","trademarkLogo","trademarkLogoDescription","trademarkColors","trademarkUnsec","trademarkField","trademarkClasses","applicantId","applicantType","applicantName","applicantInn","applicantKpp","applicantOgrn","applicantAddress","applicantHead","applicantCanSave","applicantSavingName","applicationMode","applicationTax","applicationPrice","applicationCheckOption","canMove","snackAction","get","invalid","length","matchTrademarkSub","matchTrademark","trademark","response","state","saveApp","openSnackBar","window","scroll","mainClass","searchSub","getChildren","upClassSub","ParentId","parentId","getById","res","getUp","calcAppTax","option","controls","part_210","part_240","part_211","part_214","selected","MainclassId","masterCandidate","find","c","Id","ClassId","sClass","Number","Classes","push","candidate","x","pop","message","action","open","duration","image","logoSub","registerLogo","url","postSub","registerApplication","appl","typeRef","type","address","head","inn","kpp","ogrn","_id","uploadRef","nativeElement","click","event","file","target","files","reader","FileReader","onload","imagePreview","result","readAsDataURL","increasePage","ApplicationComponent","route","paramSub","params","getApplicationById","app","application","doc","link","document","createElement","setAttribute","href","download","body","appendChild","remove","ApplicationsComponent","adjustGrid","getAllApplications","userApps","columns","innerWidth","PersonalComponent","snack","canEdit","add","editApp","email","userForm","getName","getEmail","applicants","updateUserData","user","show","newApp","updateApplicant","answer","index","findIndex","obj","saveNewApplicant","PrivacyComponent","snackBar","passForm","old","password","minLength","confirm","validators","confirmPassword","disable","updatePassword","enable","group","pass","confirmPass","notSame","control","checkPassword","errors","a","AboutComponent","ContactsComponent","ErrorComponent","FooterComponent","HomeComponent","background","isAuthenticated","registerForm","register","queryParams","registered","emailExists","submit","LoginComponent","wrongAuth","expired","canLogin","loginForm","login","warn","authError","RegisterComponent","AccountService","http","post","fd","FormData","append","applicant","patch","providedIn","AuthService","token","userName","pipe","setItem","val","update","clear","ClassService","options","SnackbarsService","routes","path","component","canActivate","AppRoutingModule","forRoot","AuthGuard","ApplicantPipe","ModePipe","TrademarkPipe","StatusPipe","OptionPipe","DocTypesPipe","CustomValidators","TokenInterceptor","next","clone","setHeaders","Authorization","getToken","handle","handleAuthError","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {AuthService} from './services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  constructor(\n    public router: Router,\n    public auth: AuthService\n    ) {\n  }\n  title = 'self-register-mark-II';\n  opened =  false;\n  public username = 'user';\n\n  ngOnInit(): void {\n    const potentialToken = localStorage.getItem('auth-token')\n    const potentialName = localStorage.getItem('username')\n    const potentialEmail = localStorage.getItem('email')\n    if (potentialToken !== null) {\n      this.auth.setToken(potentialToken)\n      this.auth.setName(potentialName)\n      this.auth.setEmail(potentialEmail)\n      this.username = potentialName.split(' ')[0]\n    }\n  }\n\n  goToLogin() {\n    this.router.navigate(['/login'])\n  }\n\n  logout() {\n    this.auth.logout()\n    this.router.navigate(['/'])\n  }\n}\n","<div (window:resize)=\"sidenav.close()\">\n  <mat-toolbar style=\"width: 100%; position: fixed; top: 0; z-index: 10\" fxLayout=\"row\">\n    <div fxLayout=\"row\" fxFlex=\"10\">\n      <button style=\"height: 40px; width: 40px\" mat-icon-button (click)=\"sidenav.toggle()\" fxHide=\"true\" fxShow.lt-md=\"true\" >\n        <mat-icon>menu</mat-icon>\n      </button>\n      <div class=\"nav-block\" [routerLink]=\"['/']\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n        <img src=\"assets/images/logo.png\" style=\"width: 45px; height: 45px\" *ngIf=\"router.url != '/login'\">\n        <span class=\"text-main nav-item\">BrandReg</span>\n      </div>\n    </div>\n    <div fxFlex=\"70\" style=\"margin-left: 25px\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxShow=\"true\" fxHide.lt-md=\"true\">\n      <div class=\"nav-block\" [routerLink]=\"['/about']\"><span class=\"text-main nav-item\">О нас</span></div>\n      <div class=\"nav-block\" [routerLink]=\"['/contacts']\"><span class=\"text-main nav-item\">Контакты</span></div>\n    </div>\n    <div\n      *ngIf=\"!['/login?authError=true', '/login?expired=true', '/login?registered=true', '/login'].includes(router.url)\"\n      fxLayout=\"row\" fxLayoutAlign=\"end center\" fxFlex=\"20\" fxFlex.lt-md=\"80\">\n      <button [routerLink]=\"['/register']\" class=\"button\" mat-button fxHide.xs=\"true\" *ngIf=\"!auth.isAuthenticated()\">Регистрация</button>\n      <button  mat-raised-button class=\"button primary-button\" *ngIf=\"!auth.isAuthenticated()\" (click)=\"goToLogin()\">Войти</button>\n      <button [routerLink]=\"['/account']\" class=\"button\" mat-button fxHide.xs=\"true\" *ngIf=\"auth.isAuthenticated()\">{{(auth.getName() ? auth.getName().split(' ')[0] : 'user') | titlecase}}</button>\n      <button mat-raised-button class=\"button primary-button\" *ngIf=\"auth.isAuthenticated()\" (click)=\"logout()\">Выйти</button>\n    </div>\n  </mat-toolbar>\n  <mat-sidenav-container style=\"margin-top: 55px; height: auto; min-height: 100vh\">\n\n    <mat-sidenav #sidenav mode=\"over\" fixedInViewport=\"true\" style=\"margin-top: 55px; height: 100vh; width: 100vw\">\n      <div fxLayout=\"column\" fxHide=\"true\" fxShow.lt-md=\"true\">\n        <div *ngIf=\"auth.isAuthenticated()\">\n          <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n            <img class=\"side-image\" src=\"assets/images/user.png\">\n          </div>\n          <div class=\"text-main header\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n            {{username}}\n          </div>\n          <div  fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\n            <div [routerLink]=\"['/account']\" fxLayout=\"column\" fxLayoutAlign=\"end center\" class=\"side-block\" (click)=\"sidenav.toggle()\">\n              <img src=\"assets/images/homepage.png\" class=\"side-block-image\">\n              <div class=\"text-main side-item\">Главная</div>\n            </div>\n            <div [routerLink]=\"['/applications']\"  fxLayout=\"column\" fxLayoutAlign=\"end center\" class=\"side-block\" (click)=\"sidenav.toggle()\">\n              <img src=\"assets/images/document.png\" class=\"side-block-image\">\n              <div class=\"text-main side-item\">Заявки</div>\n            </div>\n          </div>\n          <div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\n            <div [routerLink]=\"['/personal']\"  fxLayout=\"column\" fxLayoutAlign=\"end center\" class=\"side-block\" (click)=\"sidenav.toggle()\">\n              <img src=\"assets/images/id-card.png\" class=\"side-block-image\">\n              <div class=\"text-main side-item\">Личные данные</div>\n            </div>\n            <div [routerLink]=\"['/security']\" fxLayout=\"column\" fxLayoutAlign=\"end center\" class=\"side-block\" (click)=\"sidenav.toggle()\">\n              <img src=\"assets/images/shield.png\" class=\"side-block-image\">\n              <div class=\"text-main side-item\">Безопасность</div>\n            </div>\n          </div>\n        </div>\n        <div>\n          <div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\n            <div [routerLink]=\"['/about']\"  fxLayout=\"column\" fxLayoutAlign=\"end center\" class=\"side-block\" (click)=\"sidenav.toggle()\">\n              <img src=\"assets/images/signs.png\" class=\"side-block-image\">\n              <div class=\"text-main side-item\">О нас</div>\n            </div>\n            <div [routerLink]=\"['/contacts']\" fxLayout=\"column\" fxLayoutAlign=\"end center\" class=\"side-block\" (click)=\"sidenav.toggle()\">\n              <img src=\"assets/images/contacts.png\" class=\"side-block-image\">\n              <div class=\"text-main side-item\">Контакты</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </mat-sidenav>\n\n    <mat-sidenav-content class=\"background-main\">\n      <div\n        *ngIf=\"['account', 'applications', 'personal', 'privacy'].includes(router.url.split('/')[1])\"\n        fxHide.lt-md=\"true\"\n        class=\"content-navigator\" fxLayout=\"column\">\n        <div [routerLink]=\"['/account']\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact:true}\"\n             fxLayout=\"row\" fxLayoutAlign=\"start center\"\n             class=\"content-navigator-item \">\n          <mat-icon>perm_identity</mat-icon>\n          <span class=\"text-main nav-text\">Главная</span>\n        </div>\n        <div [routerLink]=\"['/applications']\" routerLinkActive=\"active\"\n             fxLayout=\"row\" fxLayoutAlign=\"start center\"\n             class=\"content-navigator-item\">\n          <mat-icon>library_books</mat-icon>\n          <span class=\"text-main nav-text\">Заявки</span>\n        </div>\n        <div [routerLink]=\"['/personal']\" routerLinkActive=\"active\"\n             fxLayout=\"row\" fxLayoutAlign=\"start center\"\n             class=\"content-navigator-item\">\n          <mat-icon>account_box</mat-icon>\n          <span class=\"text-main nav-text\">Личные данные</span>\n        </div>\n        <div [routerLink]=\"['/privacy']\" routerLinkActive=\"active\"\n             fxLayout=\"row\" fxLayoutAlign=\"start center\"\n             class=\"content-navigator-item\">\n          <mat-icon>security</mat-icon>\n          <span class=\"text-main nav-text\">Безопасность</span>\n        </div>\n      </div>\n      <router-outlet></router-outlet>\n      <app-footer></app-footer>\n    </mat-sidenav-content>\n  </mat-sidenav-container>\n\n\n</div>\n\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/general/login/login.component';\nimport { RegisterComponent } from './components/general/register/register.component';\nimport { AccountComponent } from './components/account/account/account.component';\nimport { HomeComponent } from './components/general/home/home.component';\nimport { FooterComponent } from './components/general/footer/footer.component';\nimport { AddComponent } from './components/account/add/add.component';\nimport { AboutComponent } from './components/general/about/about.component';\nimport { ContactsComponent } from './components/general/contacts/contacts.component';\nimport { ApplicationsComponent } from './components/account/applications/applications.component';\nimport { PersonalComponent } from './components/account/personal/personal.component';\nimport { PrivacyComponent } from './components/account/privacy/privacy.component';\nimport { ErrorComponent } from './components/general/error/error.component';\n\nimport {AppRoutingModule} from './tools/app-routing.module';\nimport {TokenInterceptor} from './tools/token.interceptor';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\n\n\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatRadioModule, MAT_RADIO_DEFAULT_OPTIONS} from '@angular/material/radio';\nimport {MatTreeModule} from '@angular/material/tree';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatExpansionModule} from '@angular/material/expansion';\n\nimport { ApplicationComponent } from './components/account/application/application.component';\nimport {ApplicantPipe, DocTypesPipe, ModePipe, OptionPipe, StatusPipe, TrademarkPipe} from './tools/custom.pipe';\n// import {MatGridListModule} from '@angular/material/grid-list';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    AccountComponent,\n    HomeComponent,\n    ErrorComponent,\n    FooterComponent,\n    AddComponent,\n    AboutComponent,\n    ContactsComponent,\n    ApplicationsComponent,\n    PersonalComponent,\n    PrivacyComponent,\n    ApplicationComponent,\n    ApplicantPipe,\n    TrademarkPipe,\n    StatusPipe,\n    ModePipe,\n    OptionPipe,\n    DocTypesPipe\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatInputModule,\n    MatDividerModule,\n    MatRadioModule,\n    MatTreeModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatSnackBarModule,\n    MatGridListModule,\n    MatExpansionModule\n    // MatGridListModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      multi: true,\n      useClass: TokenInterceptor\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {AuthService} from '../../../services/auth.service';\nimport {AccountService} from '../../../services/account.service';\nimport {tap, timeInterval} from 'rxjs/operators';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css']\n})\nexport class AccountComponent implements OnInit, OnDestroy {\n\n  aSub: Subscription;\n\n  constructor(\n    private auth: AuthService,\n    private account: AccountService\n  ) { }\n\n\n\n  username = 'пользователь';\n  appsCount = 0;\n  loaded = false;\n  ngOnInit(): void {\n    this.fetch()\n\n  }\n  fetch() {\n    this.aSub = this.account.getMain().subscribe(main => {\n      this.username = main.name.split(' ')[0];\n      this.appsCount = main.apps;\n      // timeInterval(5000);\n      this.loaded = true;\n    }, error => {\n      if (error.code === 401) {\n        this.auth.logout();\n      }\n    })\n  }\n\n  ngOnDestroy(): void {\n    if (this.aSub) {\n      this.aSub.unsubscribe();\n    }\n  }\n\n}\n","<div class=\"block-one\">\n  <div fxFlex=\"20\" fxHide.lt-md=\"true\" fxFlex.lt-lg=\"30\" fxLayout=\"column\">\n  </div>\n  <div fxFlex=\"60\" fxFlex.lt-md=\"100\" fxFlex.lt-lg=\"55\">\n    <div class=\"content-header\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n      <div>\n        <img src=\"../../../../assets/images/user.png\" style=\"width: 120px; height: 120px\">\n      </div>\n      <div style=\"text-align: center; padding-top: 15px\" [ngClass]=\"{shine: !loaded }\">\n        <span class=\"text-main header\">Добро пожаловать, {{username | titlecase}}</span>\n      </div>\n    </div>\n    <div fxLayout=\"row\" fxLayout.lt-lg=\"column\" fxLayoutAlign=\"space-around center\">\n      <mat-card [ngClass]=\"{shine: !loaded }\" class=\"desktop\">\n        <div fxHide=\"{{!loaded}}\">\n          <div fxLayout=\"row\">\n            <div fxFlex=\"70\" >\n              <div class=\"card-header\">\n                Текущие заявки: {{appsCount}}\n              </div>\n              <div class=\"card-subtile\">\n                Узнайте о состоянии своих текущих заявок, их оплате\n              </div>\n            </div>\n            <div fxFlex=\"30\" fxLayoutAlign=\"end center\">\n              <img class=\"card-image\" src=\"../../../../assets/images/apps.png\">\n            </div>\n          </div>\n          <div style=\"height: 20px\"></div>\n          <mat-divider></mat-divider>\n          <mat-card-footer style=\"\" class=\"card-footer\" >\n            <div fxLayoutAlign=\"start center\" fxFlexFill [routerLink]=\"['/applications']\" class=\"button alternative-button card-link\">\n              Узнать о состоянии\n            </div>\n          </mat-card-footer>\n        </div>\n\n      </mat-card>\n      <mat-card [ngClass]=\"{shine: !loaded}\" class=\"desktop\">\n        <div fxHide=\"{{!loaded}}\">\n          <div fxLayout=\"row\">\n            <div fxFlex=\"70\" >\n              <div class=\"card-header\">\n                Новая заявка\n              </div>\n              <div class=\"card-subtile\">\n                Подайте новую заявку на товарный знак и укажите все необходимые данные\n              </div>\n            </div>\n            <div fxFlex=\"30\" fxLayoutAlign=\"end center\">\n              <img class=\"card-image\" src=\"../../../../assets/images/add-app.png\">\n            </div>\n          </div>\n          <mat-divider></mat-divider>\n          <mat-card-footer class=\"card-footer\" >\n            <div fxLayoutAlign=\"start center\" fxFlexFill [routerLink]=\"['/add']\" class=\"button alternative-button card-link\">\n              Подать заявку\n            </div>\n          </mat-card-footer>\n        </div>\n      </mat-card>\n    </div>\n  </div>\n  <div fxFlex=\"20\" fxHide.lt-md=\"true\" fxFlex.lt-lg=\"15\" >\n\n  </div>\n</div>\n","import {Component, ContentChild, ElementRef, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Subscription} from 'rxjs';\nimport {ClassService} from '../../../services/class.service';\nimport {Applicant, Class, SelectedClasses} from '../../../tools/interfaces';\nimport {AccountService} from '../../../services/account.service';\nimport {AuthService} from '../../../services/auth.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.css']\n})\nexport class AddComponent implements OnInit, OnDestroy {\n\n  appForm: FormGroup;\n\n  aSub: Subscription;\n  searchSub: Subscription;\n  upClassSub: Subscription;\n  upAplsSub: Subscription;\n  postSub: Subscription;\n  logoSub: Subscription;\n  matchSub: Subscription;\n  matchTrademarkSub: Subscription;\n\n  image: File;\n  imagePreview;\n  posting = false;\n\n\n  apls: Applicant[] = [];\n\n  @ViewChild('appMode', {static: false}) typeRef: ElementRef;\n  @ViewChild('uploader', {static: false}) uploadRef: ElementRef;\n\n  constructor(\n    public router: Router,\n    private clsService: ClassService,\n    private accService: AccountService,\n    private auth: AuthService,\n    private _snackBar: MatSnackBar\n  ) { }\n\n  // public currentForm = '';\n  public currentPage = 'done';\n  private pageNames = ['name', 'type', 'logo', 'extra', 'classes', 'person', 'options', 'done'];\n  public donePages = [false, false, false, false, false, false, false, false];\n  private pagePosition = 0;\n  public knownCategory = true;\n  public canHide = false;\n  public selectedClass = null;\n  public mainClasses = null;\n  public selectedClasses = null;\n  private discount = false;\n\n  accessState = '';\n  trademarkPanelOpenState = false;\n  ownerPanelOpenState = false;\n\n  // public persons = ['Работа', 'Дима'];\n  optionHelpState = false;\n  ngOnInit(): void {\n    this.aSub = this.clsService.getMain().subscribe(classes => {\n      this.mainClasses = classes;\n    },\n      error => {\n      console.log(error);\n      if (error.status === 401) {\n        this.auth.logout();\n      }\n      });\n    this.upAplsSub = this.accService.getAllApplicants().subscribe(data => {\n      console.log('some data', data);\n      this.apls = data;\n    }, error => {\n      console.log('error', error);\n    });\n\n    this.appForm = new FormGroup({\n      trademarkName : new FormControl(null, [Validators.required]),\n      trademarkType : new FormControl(null, [Validators.required]),\n      trademarkLogo : new FormControl(null),\n      trademarkLogoDescription : new FormControl(null, [Validators.required]),\n      trademarkColors : new FormControl(null),\n      trademarkUnsec : new FormControl(null),\n      trademarkField : new FormControl(null, [Validators.required]),\n      trademarkClasses : new FormControl([], [Validators.required]),\n      applicantId : new FormControl(null),\n      applicantType : new FormControl(null, [Validators.required]),\n      applicantName : new FormControl(null, [Validators.required]),\n      applicantInn : new FormControl(null, [Validators.required]),\n      applicantKpp : new FormControl(null, [Validators.required]),\n      applicantOgrn : new FormControl(null),\n      applicantAddress : new FormControl(null, [Validators.required]),\n      applicantHead : new FormControl(null, [Validators.required]),\n      applicantCanSave : new FormControl(false),\n      applicantSavingName : new FormControl(null),\n      applicationMode : new FormControl(null, [Validators.required]),\n      applicationTax : new FormControl(0, [Validators.required]),\n      applicationPrice : new FormControl(0, [Validators.required]),\n      applicationCheckOption : new FormControl(false, [Validators.required])\n      // image: new FormControl()\n    });\n    this.currentPage = this.pageNames[this.pagePosition];\n    // this.currentForm = 'trademarkName';\n  }\n\n  increasePage() {\n    let canMove = true;\n    let snackAction = '';\n    // window.scroll(0, 0);\n    // console.log('position', window.scrollX);\n    switch (this.pagePosition) {\n      case 0:\n        canMove = !this.appForm.get('trademarkName').invalid;\n        snackAction = 'Необходимо ввести название';\n        break;\n      case 1:\n        canMove = !this.appForm.get('trademarkType').invalid;\n        snackAction = 'Необходимо выбрать тип';\n        break;\n      case 2:\n        break;\n      case 3:\n        break;\n      case 4:\n        if (this.appForm.get('trademarkClasses').value.length === 0) {\n          canMove = false;\n          snackAction = 'Необходимо выбрать минимум один класс';\n        }\n        if (this.appForm.get('trademarkField').invalid) {\n          canMove = false;\n          snackAction = 'Необходимо указать сферу деятельности';\n        }\n        if (this.appForm.get('trademarkClasses').value.length === 0 && this.appForm.get('trademarkField').invalid) {\n          canMove = false;\n          snackAction = 'Необходимо выбрать минимум один класс и указать сферу деятельности';\n        }\n        break;\n      case 5:\n        snackAction = 'Заполните форму заявителя полностью';\n        if (this.appForm.get('applicantType').invalid) {\n          canMove = false;\n        }\n        if (this.appForm.get('applicantName').invalid) {\n          canMove = false;\n        }\n        if (this.appForm.get('applicantInn').invalid) {\n          canMove = false;\n        }\n        if (this.appForm.get('applicantKpp').invalid) {\n          canMove = false;\n        }\n        if (this.appForm.get('applicantType').value === 'UL') {\n          if (this.appForm.get('applicantOgrn').invalid) {\n            canMove = false;\n          }\n        }\n        if (this.appForm.get('applicantType').value === 'UL') {\n          if (this.appForm.get('applicantHead').invalid) {\n            canMove = false;\n          }\n        }\n        if (this.appForm.get('applicantCanSave').value) {\n          if (this.appForm.get('applicantSavingName').invalid) {\n            canMove = false;\n          }\n        }\n        break;\n      case 6:\n        canMove = !this.appForm.get('applicationMode').invalid;\n        snackAction = 'Необходимо выбрать способ публикации';\n        this.matchTrademarkSub = this.clsService.matchTrademark({\n          trademark: this.appForm.get('trademarkName').value,\n          classes: this.appForm.get('trademarkClasses').value\n        }).subscribe(response => {\n          if (response.state) {\n            this.accessState = response.state;\n          } else {\n            this.accessState = 'reject';\n          }\n          console.log('match response', response, this.accessState);\n        }, error => {\n          if (error.status === 401) {\n            this.auth.logout();\n          }\n        })\n        break;\n\n    }\n    if (canMove) {\n      if (this.pagePosition < 7) {\n\n        this.donePages[this.pagePosition] = true;\n        this.pagePosition++;\n        this.currentPage = this.pageNames[this.pagePosition];\n\n      } else {\n        // console.log('we are ready to post')\n        this.saveApp();\n\n      }\n    } else {\n      this.openSnackBar(snackAction, 'OK');\n    }\n\n\n  }\n\n  decreasePage() {\n    window.scroll(0, 0);\n    if (this.pagePosition > 0) {\n      this.pagePosition--;\n      this.currentPage = this.pageNames[this.pagePosition];\n    } else {\n\n    }\n  }\n\n  selectType() {\n\n  }\n\n  addKnownCategories() {\n    this.knownCategory = false;\n  }\n\n  selectClass(id: string, mainClass: Class) {\n    this.searchSub = this.clsService.getChildren(id).subscribe(classes => {\n      // ===== надо зайти в базу и скачать дочерние классы выбранного элемента\n      this.selectedClasses = classes;\n    });\n    this.canHide = true;\n    // console.log(index);\n    this.selectedClass = mainClass;\n    // console.log('selected class', this.selectedClass);\n  }\n\n\n\n  ngOnDestroy(): void {\n\n    if (this.aSub) { this.aSub.unsubscribe(); }\n    if (this.searchSub) { this.searchSub.unsubscribe(); }\n    if (this.upClassSub) { this.upClassSub.unsubscribe(); }\n    if (this.upAplsSub) { this.upAplsSub.unsubscribe(); }\n  }\n\n  stepBack() {\n    if (this.selectedClass.ParentId === '0') {\n      this.canHide = false;\n      this.selectedClass = null;\n    } else {\n      const parentId = this.selectedClass.ParentId;\n      console.log('old parent', parentId);\n      this.upClassSub = this.clsService.getById(parentId)\n        .subscribe(res => {\n          this.selectedClass = res;\n        });\n      console.log('old parent', this.selectedClass.ParentId);\n      this.searchSub = this.clsService.getUp(this.selectedClass.ParentId).subscribe(classes => {\n        this.selectedClasses = classes;\n      });\n    }\n\n    }\n\n  setAppPrice() {\n    const required = this.appForm.get('applicationMode').value === 'print' ? 300 : 3500;\n    if (required !== 300) { this.discount = true; } else { this.discount = false; }\n    this.calcAppTax();\n    const option = this.appForm.get('applicationCheckOption').value ? 7500 : 0;\n    this.appForm.controls.applicationPrice.setValue(required + option);\n  }\n  calcAppTax() {\n    const classes = this.appForm.get('trademarkClasses').value.length;\n    if (classes > 0) {\n      let part_210 = 3500 + (classes - 5 > 0 ? (classes - 5) * 1000 : 0);\n      let part_240 = 11500 + ( classes * 2500);\n      let part_211 = 16000 + (classes - 5 > 0 ? (classes - 5) * 1000 : 0);\n      let part_214 = 2000;\n      if (this.discount) {\n        part_210 = part_210 * 0.7;\n        part_240 = part_240 * 0.7;\n        part_211 = part_211 * 0.7;\n        part_214 = part_214 * 0.7;\n      }\n      this.appForm.controls.applicationTax.setValue(part_210 + part_240 + part_211 + part_214);\n    }\n\n\n  }\n\n  addClass(selected: Class) {\n    // ===== Проверяем это основной класс или его подклассы\n    if (selected.MainclassId === '0') {\n      const masterCandidate = this.appForm.controls.trademarkClasses.value.find(c => c.Id === selected.ClassId);\n      // ===== если он основной и еще не добавлен, то надо добавлять\n      if (!masterCandidate) {\n        const sClass: SelectedClasses = {\n          Id: selected.ClassId,\n          Number: selected.Number,\n          Classes: []\n        };\n        this.appForm.controls.trademarkClasses.value.push(sClass);\n        this.openSnackBar(`Класс ${selected.Number} выбран`, 'OK');\n      } else {\n        this.openSnackBar(`Данный класс уже выбран`, 'OK');\n      }\n    } else {\n      // ===== проверяем, добавлен ли его основной класс уже\n      const candidate = this.appForm.controls.trademarkClasses.value.find(c => c.Id === selected.MainclassId);\n      if (candidate) {\n        // ===== проверяем, а выбрали ли мы до этого класс целиком или только подклассы\n        if (candidate.Classes.length > 0) {\n          // ===== и если мы такой класс не добавляли, то можно добавить\n          if (!candidate.Classes.find(x => x.ClassId === selected.ClassId)) {\n            candidate.Classes.push(selected);\n            this.openSnackBar(`Категория ${selected.Number} выбрана`, 'OK');\n          } else {\n            this.openSnackBar(`Данная категория уже выбрана`, 'OK');\n          }\n        }\n      } else {\n        // ===== значит основной  еще не добавлен и нам надо его создать, но пока без названия\n        // console.log('the parent class is new', selected)\n        const sClass: SelectedClasses = {\n          Id: selected.MainclassId,\n          Number: '',\n          Classes: [selected]\n        };\n        // ===== а теперь нам нужно выяснить, как же звали основной класс\n        this.upClassSub = this.clsService.getById(selected.MainclassId)\n          .subscribe(res => {\n            sClass.Number = res.Number;\n          });\n        // ===== и полноценно добавить вновь выбранный\n        this.appForm.controls.trademarkClasses.value.push(sClass);\n        this.openSnackBar(`Категория ${selected.Number} выбрана`, 'OK');\n      }\n    }\n    this.calcAppTax();\n    console.log('classes are', this.appForm.controls.trademarkClasses.value);\n  }\n\n  removeClass(selected: Class) {\n\n    if (!selected.MainclassId) {\n      this.appForm.controls.trademarkClasses.value.pop(selected);\n      this.openSnackBar(`Класс ${selected.Number} удален из списка выбранных`, 'OK');\n    } else {\n      const candidate = this.appForm.controls.trademarkClasses.value.find(x => x.Id === selected.MainclassId);\n      if (candidate) {\n        candidate.Classes.pop(selected);\n        if (candidate.Classes.length === 0) {\n          this.appForm.controls.trademarkClasses.value.pop(candidate);\n          this.openSnackBar(`Класс ${candidate.Number} удален из списка выбранных`, 'OK');\n        } else {\n          this.openSnackBar(`Категория ${selected.Number} удалена из списка выбранных`, 'OK');\n        }\n      }\n    }\n    this.calcAppTax();\n  }\n\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {\n      duration: 2000,\n    });\n  }\n\n  saveApp() {\n    // let sendingApp = this.appForm.value;\n    // if (this.image) { sendingApp.image = this.image; };\n    this.posting = true;\n    if (this.image) {\n      this.logoSub = this.accService.registerLogo(this.image).subscribe(\n        ({url}) => {\n          this.appForm.controls.trademarkLogo.setValue(url);\n          this.postSub = this.accService.registerApplication(this.appForm.value).subscribe(\n            () => {\n              this.router.navigate(['/applications']);\n            }, error => {\n              // console.log('something go wrong');\n              this.openSnackBar('Не удается завершить формирование заявки', 'OK');\n              this.posting = false;\n            }\n          );\n        }, error => {\n          this.openSnackBar('Не удалось загрузить логотип', 'OK');\n          this.posting = false;\n        }\n      );\n    } else {\n      this.postSub = this.accService.registerApplication(this.appForm.value).subscribe(\n        () => {\n          this.router.navigate(['/applications']);\n        }, error => {\n          // console.log('something go wrong');\n          this.openSnackBar('Не удается завершить формирование заявки', 'OK');\n          this.posting = false;\n        }\n      );\n    }\n\n    // console.log(this.appForm.value)\n\n\n  }\n\n  setApplicant(appl: Applicant) {\n    // @ts-ignore\n    this.typeRef.value = appl.type;\n    // console.log(this.typeRef.nativeElement, appl.type)\n    this.appForm.controls.applicantAddress.setValue(appl.address);\n    this.appForm.controls.applicantType.setValue(appl.type);\n    this.appForm.controls.applicantName.setValue(appl.name);\n    this.appForm.controls.applicantHead.setValue(appl.head);\n    this.appForm.controls.applicantInn.setValue(appl.inn);\n    this.appForm.controls.applicantKpp.setValue(appl.kpp);\n    this.appForm.controls.applicantOgrn.setValue(appl.ogrn);\n    this.appForm.controls.applicantId.setValue(appl._id);\n  }\n\n  loadImage() {\n    this.uploadRef.nativeElement.click();\n  }\n\n  onFileUpload(event: any) {\n    const file = event.target.files[0];\n    this.image = file;\n\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      this.imagePreview = reader.result;\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  getAcceptStatus(): string {\n    switch (this.accessState) {\n      case 'accept':\n        return 'Готово!';\n\n      case 'warning':\n        return 'Есть совпадения';\n\n      case 'reject':\n        return 'Не подходит';\n\n      default:\n        return '';\n    }\n  }\n\n  getAcceptText(): string {\n    switch (this.accessState) {\n      case 'accept':\n        return 'Ваш товарный знак выглядит уникальным и имеет высокую вероятность успешной публикации';\n\n      case 'warning':\n        return 'Есть несколько товарных знаков, прямо или косвенно похожих на ваш. ' +\n          'Рекомендуется отредактировать ваше название или классы. Тем не менее вы можете ' +\n          'опубликовать на свой страх и риск';\n\n      case 'reject':\n        return 'Этот товарный знак будет отклонен в виду высокой схожести с существующими';\n\n      default:\n        return '';\n    }\n  }\n\n  showMoreInfo() {\n    this.openSnackBar('Подробности будут чуть позже', 'OK');\n  }\n}\n","<div>\n  <div\n    [ngClass]=\"{\n      goback: true\n    }\"\n    [ngClass.lt-md]=\"{\n      gobackmobile: true\n    }\">\n    <button mat-icon-button [routerLink]=\"['/account']\">\n      <mat-icon>arrow_back</mat-icon>\n    </button>\n  </div>\n  <div class=\"checkout\" fxLayout=\"column\" fxHide=\"true\" fxShow=\"{{appForm.get('trademarkClasses').value.length !== 0}}\">\n    <div fxLayout=\"row\">\n      <div fxFlex=\"70\" class=\"popup-field\" >Выбрано классов:</div>\n      <div fxFlex=\"30\" class=\"popup-price\">{{appForm.get('trademarkClasses').value.length}}</div>\n    </div>\n    <div fxLayout=\"row\" fxHide=\"true\" fxShow=\"{{appForm.get('applicationTax').value !== 0}}\">\n      <div fxFlex=\"70\" class=\"popup-field\">Размер госпошлины:</div>\n      <div fxFlex=\"30\" class=\"popup-price\">{{appForm.get('applicationTax').value | currency:'RUB':'symbol-narrow'}}</div>\n    </div>\n    <div fxLayout=\"row\" fxHide=\"true\" fxShow=\"{{appForm.get('applicationPrice').value !== 0}}\" >\n      <div fxFlex=\"70\" class=\"popup-field\">Стоимость услуг:</div>\n      <div fxFlex=\"30\" class=\"popup-price\">{{appForm.get('applicationPrice').value | currency:'RUB':'symbol-narrow'}}</div>\n    </div>\n    <div style=\"padding-bottom: 15px\" *ngIf=\"currentPage === 'done'\"></div>\n    <mat-divider *ngIf=\"currentPage === 'done'\"></mat-divider>\n    <div *ngIf=\"currentPage === 'done'\" fxLayoutAlign=\"center center\" style=\"padding-top: 15px\">\n      <button mat-raised-button class=\"button payment-button\">Оплатить</button>\n    </div>\n  </div>\n\n  <form [formGroup]=\"appForm\"  class=\"block-one\" fxLayout=\"column\" ><!--  (submit)=\"saveApp()\"-->\n    <div class=\"stepper-content\" fxFlex=\"65\">\n\n      <div *ngIf=\"currentPage === 'name'\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n        <div class=\"text-main header step\">\n          Введите название товарного знака\n        </div>\n\n        <div class=\"step-content normal\" fxLayoutAlign=\"center center\">\n          <mat-card style=\"width: 100%\" fxLayoutAlign=\"center center\">\n            <mat-form-field appearance=\"outline\" class=\"step-input\" style=\"\">\n              <mat-label>Название</mat-label>\n              <input matInput placeholder=\"Название товарного знака\" required formControlName=\"trademarkName\">\n            </mat-form-field>\n          </mat-card>\n\n        </div>\n      </div>\n\n\n      <div *ngIf=\"currentPage === 'type'\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n        <div class=\"text-main header step\">\n          Выберите тип товарного знака\n        </div>\n\n        <div class=\"step-content wide\">\n          <mat-radio-group formControlName=\"trademarkType\"\n                           style=\"width: 100%\"\n                           fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutAlign=\"space-around center\">\n            <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n              <div fxHide.lt-md=\"true\" class=\"selector\" (click)=\"radioWord.checked = true\">\n                <mat-card class=\"radio-normal\" fxLayout=\"column\" (click)=\"appForm.controls['trademarkType'].setValue('word')\" >\n                  <div>\n                    <img src=\"../../../../assets/images/sign-os.png\" style=\"width: 200px; height: 200px\">\n                  </div>\n                  <div class=\"text-main card-label\">Словесный</div>\n                </mat-card>\n              </div>\n              <mat-radio-button #radioWord value=\"word\" >\n                <div class=\"radio-mini\" fxHide=\"true\" fxShow.lt-md=\"true\" >\n                  <mat-card fxLayout=\"row\" (click)=\"appForm.controls['trademarkType'].setValue('word')\" >\n                    <div>\n                      <img src=\"../../../../assets/images/sign-os-mini.png\" style=\"width: 80px; height: 80px\">\n                    </div>\n                    <div style=\"padding-left: 15px\" fxLayoutAlign=\"center center\" class=\"text-main card-label\">\n                      Словесный\n                    </div>\n                  </mat-card>\n                </div>\n              </mat-radio-button>\n            </div>\n            <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n              <div fxHide.lt-md=\"true\" class=\"selector\" (click)=\"radioImage.checked = true\">\n                <mat-card class=\"radio-normal\" fxLayout=\"column\" (click)=\"appForm.controls['trademarkType'].setValue('image')\" >\n                  <div>\n                    <img src=\"../../../../assets/images/sign.png\" style=\"width: 200px; height: 200px\">\n                  </div>\n                  <div class=\"text-main card-label\">Изобразительный</div>\n                </mat-card>\n              </div>\n              <mat-radio-button #radioImage value=\"image\">\n                <div class=\"radio-mini\" fxHide=\"true\" fxShow.lt-md=\"true\">\n                  <mat-card fxLayout=\"row\" (click)=\"appForm.controls['trademarkType'].setValue('image')\">\n                    <div>\n                      <img src=\"../../../../assets/images/sign-mini.png\" style=\"width: 80px; height: 80px\">\n                    </div>\n                    <div style=\"padding-left: 15px\" fxLayoutAlign=\"center center\" class=\"text-main card-label\">\n                      Изобразительный\n                    </div>\n                  </mat-card>\n                </div>\n              </mat-radio-button>\n            </div>\n            <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n              <div fxHide.lt-md=\"true\" class=\"selector\" (click)=\"radioComplex.checked = true\">\n                <mat-card class=\"radio-normal\" fxLayout=\"column\" (click)=\"appForm.controls['trademarkType'].setValue('complex')\" >\n                  <div>\n                    <img src=\"../../../../assets/images/sign-comb.png\" style=\"width: 200px; height: 200px\">\n                  </div>\n                  <div class=\"text-main card-label\">Комбинированный</div>\n                </mat-card>\n              </div>\n              <mat-radio-button #radioComplex  value=\"complex\" >\n                <div class=\"radio-mini\" fxHide=\"true\" fxShow.lt-md=\"true\" >\n                  <mat-card fxLayout=\"row\" (click)=\"appForm.controls['trademarkType'].setValue('complex')\" >\n                    <div>\n                      <img src=\"../../../../assets/images/sign-comb-mini.png\" style=\"width: 80px; height: 80px\">\n                    </div>\n                    <div style=\"padding-left: 15px\" fxLayoutAlign=\"center center\" class=\"text-main card-label\">\n                      Комбинированный\n                    </div>\n                  </mat-card>\n                </div>\n              </mat-radio-button>\n            </div>\n          </mat-radio-group>\n        </div>\n<!--        <div>{{appForm.get('trademarkType').value}}</div>-->\n      </div>\n\n\n      <div *ngIf=\"currentPage === 'logo'\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n        <div class=\"text-main header step\">\n          Загрузите логотип\n        </div>\n        <div class=\"text-alternative optional\">(необязательно)</div>\n        <div class=\"skip-content\" fxLayoutAlign=\"center center\">\n          <button mat-button class=\"button alternative-button\" type=\"button\"\n                  (click)=\"increasePage()\">\n            Пропустить\n          </button>\n        </div>\n        <div class=\"step-content normal\" fxLayoutAlign=\"center center\">\n          <mat-card style=\"width: 100%\">\n            <mat-card-content style=\"margin: 15px\">\n              <div>\n                <div *ngIf=\"!imagePreview\" class=\"text-main\" style=\"text-align: center; font-size: 110%\">Логотип не выбран</div>\n                <img [src]=\"imagePreview\" style=\"height: auto; max-height: 100px; width: auto; max-width: 360px\">\n              </div>\n            </mat-card-content>\n\n            <mat-divider></mat-divider>\n            <mat-card-footer style=\"padding: 15px\">\n              <button style=\"margin-left: 15px\" mat-flat-button class=\"button primary-button\" (click)=\"loadImage()\">\n                Загрузить\n              </button>\n              <input type=\"file\" accept=\"image/jpeg,image/png\" style=\"display: none\" #uploader (change)=\"onFileUpload($event)\">\n            </mat-card-footer>\n          </mat-card>\n        </div>\n        <div class=\"text-main subheader\">\n          Опишите логотип\n        </div>\n        <div class=\"step-content normal\" fxLayoutAlign=\"center center\">\n          <mat-card style=\"width: 100%\" fxLayoutAlign=\"center center\">\n            <mat-form-field appearance=\"outline\" class=\"step-input\">\n              <mat-label>Описание</mat-label>\n              <input matInput placeholder=\"Описание логотипа\" required formControlName=\"trademarkLogoDescription\">\n            </mat-form-field>\n          </mat-card>\n        </div>\n      </div>\n\n\n      <div *ngIf=\"currentPage === 'extra'\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n        <div class=\"text-main header step\">\n          Укажите цвета и неохраняемые элементы\n        </div>\n        <div class=\"text-alternative optional\">(необязательно)</div>\n        <div class=\"skip-content\" fxLayoutAlign=\"center center\">\n          <button mat-button class=\"button alternative-button\" type=\"button\"\n                  (click)=\"increasePage()\">\n            Пропустить\n          </button>\n        </div>\n        <div class=\"text-main subheader\">\n          Заявляемые цвета\n        </div>\n        <div class=\"step-content normal\" fxLayoutAlign=\"center center\">\n          <mat-card style=\"width: 100%\" fxLayoutAlign=\"center center\">\n            <mat-form-field appearance=\"outline\" class=\"step-input\">\n              <mat-label>Цвета</mat-label>\n              <input matInput placeholder=\"Цвета\" required formControlName=\"trademarkColors\">\n            </mat-form-field>\n          </mat-card>\n        </div>\n        <div class=\"text-main subheader\">\n          Неохраняемые элементы\n        </div>\n        <div class=\"step-content normal\" fxLayoutAlign=\"center center\">\n          <mat-card style=\"width: 100%\" fxLayoutAlign=\"center center\">\n            <mat-form-field appearance=\"outline\" class=\"step-input\">\n              <mat-label>Элементы</mat-label>\n              <input matInput placeholder=\"Элементы\" required formControlName=\"trademarkUnsec\">\n            </mat-form-field>\n          </mat-card>\n        </div>\n      </div>\n\n\n      <div *ngIf=\"currentPage === 'classes'\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n        <div class=\"text-main header step\">\n          Укажите сферу деятельности\n        </div>\n\n        <div class=\"step-content normal\" fxLayoutAlign=\"center center\">\n          <mat-card style=\"width: 100%\" fxLayoutAlign=\"center center\">\n            <mat-form-field appearance=\"outline\" class=\"step-input\" style=\"\">\n              <mat-label>Род деятельности</mat-label>\n              <input matInput placeholder=\"Род деятельности\" required formControlName=\"trademarkField\">\n            </mat-form-field>\n          </mat-card>\n        </div>\n\n        <div *ngIf=\"false\" class=\"text-main subheader\">\n          Найдены подходящие для этой сферы классы. Выбрать их?\n        </div>\n        <div *ngIf=\"false\" class=\"skip-content\" fxLayoutAlign=\"center center\">\n          <button mat-button class=\"button alternative-button\" type=\"button\"\n                  (click)=\"knownCategory = false\">\n            Отказаться\n          </button>\n          <button mat-button class=\"button primary-button\" type=\"button\"\n                  (click)=\"addKnownCategories()\">\n            Выбрать\n          </button>\n        </div>\n\n        <div *ngIf=\"true\" class=\"text-main subheader\">\n          Выберите классы\n        </div>\n        <div class=\"step-content\" fxLayoutAlign=\"center center\"\n          [ngClass.lt-md]=\"{normal: true}\"\n          [ngClass]=\"{wide: true}\">\n          <mat-card class=\"test\"\n             [ngClass.lt-md]=\"{normal: true}\"\n             [ngClass]=\"{wide: canHide, normal: !canHide}\">\n            <div fxLayout=\"column\" fxLayoutAlign=\"center start\">\n              <div fxLayoutAlign=\"center\" style=\"width: 100%;\">\n                <mat-form-field appearance=\"outline\"\n                  fxFlex=\"{{canHide ? 100 : 90}}\">\n                  <mat-label>Поиск классов</mat-label>\n                  <input matInput placeholder=\"Поиск\" required>\n                  <button mat-icon-button matSuffix>\n                    <mat-icon matSuffix>search</mat-icon>\n                  </button>\n                </mat-form-field>\n              </div>\n              <div style=\"width: 100%\"  fxLayout=\"row\" fxLayoutAlign=\"center\">\n                <div fxFlex=\"{{canHide ? 35 : 90}}\"\n                     fxHide.lt-md=\"{{canHide}}\"\n                     fxLayout=\"row wrap\" fxLayoutAlign=\"center start\">\n\n                  <div style=\"border: 1px solid lightgray\" class=\"main-class text-alternative\" fxFlex=\"20\"\n                       *ngFor=\"let main of mainClasses\" (click)=\"selectClass(main.ClassId, main)\">\n                    {{main.Number.split(' ')[1]}}\n                  </div>\n                </div>\n\n                <mat-divider [vertical]=\"true\" fxShow=\"{{canHide}}\" fxHide.lt-md=\"true\" style=\"margin-right: 25px; margin-left: 25px\"></mat-divider>\n\n                <div style=\"width: 100%; height: 400px\"\n                     fxShow=\"{{canHide}}\" fxFlex=\"{{canHide ? 60 : 0}}\"\n                     fxFlex.lt-md=\"{{canHide ? 100 : 0}}\"\n                     fxLayout=\"column\" fxLayoutAlign=\"center center\">\n\n                  <div fxFlex=\"10\" style=\"background: #f5f5f5; width: 100%; padding-left: 0px\" fxLayoutAlign=\"start\">\n                    <button mat-icon-button (click)=\"stepBack()\">\n                      <mat-icon>arrow_back_ios</mat-icon>\n                    </button>\n                  </div>\n                  <div fxFlex=\"85\" style=\"width: 100%; height: 100%; overflow-y: scroll; \">\n                    <ul style=\"list-style: none;  padding: 0;margin: 0\">\n                      <li style=\"background: #f5f5f5; width: 100%\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n                        <div fxLayout=\"column\" fxLayoutAlign=\"start\">\n                          <div class=\"text-main class-header\">{{selectedClass ? selectedClass.Number : ''}}</div>\n                          <div class=\"text-alternative class-description\">{{selectedClass ? selectedClass.Title : ''}}</div>\n                        </div>\n                        <button mat-icon-button fxHide=\"false\" (click)=\"addClass(selectedClass)\">\n                          <mat-icon>system_update_alt</mat-icon>\n                        </button>\n                      </li>\n                      <li class=\"selectable\" style=\"width: 100%; ; margin-left: 0; border-bottom: 2px solid #f5f5f5\"\n                          fxLayout=\"row\" fxLayoutAlign=\"space-between center\"\n                          *ngFor=\"let selected of selectedClasses\"\n                          >\n                        <div style=\"width: 100%\">\n                          <div fxFlex=\"90\" fxLayout=\"column\"\n                               style=\"text-align: left\"\n                               (click)=\"selectClass(selected.ClassId, selected)\">\n                            <div class=\"text-main element-header\" >\n                              {{selected.Title}}\n                            </div>\n                          </div>\n                          <div fxFlex=\"10\" fxLayoutAlign=\"center center\">\n                            <button mat-icon-button (click)=\"addClass(selected)\">\n                              <mat-icon>system_update_alt</mat-icon>\n                            </button>\n                          </div>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </mat-card>\n        </div>\n\n        <div *ngIf=\"appForm.get('trademarkClasses').value.length > 0\" class=\"text-main subheader\">\n          Выбранные классы\n        </div>\n        <div class=\"step-content normal\"\n             *ngIf=\"appForm.get('trademarkClasses').value.length > 0\"\n             fxLayoutAlign=\"center center\">\n\n          <mat-card style=\"width: 100%\">\n            <ul style=\"list-style: none;  padding: 0;margin: 0\">\n              <li style=\"width: 100%;  margin-left: 0\"\n                  *ngFor=\"let list of appForm.get('trademarkClasses').value\">\n                <div style=\"text-align: left; background: #f5f5f5\">\n                  <div fxFlex=\"90\" >\n                    <div class=\"text-main element-header\" >\n                      {{list.Number}}\n                    </div>\n                  </div>\n                  <div fxFlex=\"10\">\n                    <button mat-icon-button (click)=\"removeClass(list)\">\n                      <mat-icon>delete</mat-icon>\n                    </button>\n                  </div>\n                </div>\n                <div>\n                  <ul style=\"list-style: none;margin: 0; padding: 0\">\n                    <li style=\"width: 100%; margin-left: 0; border-bottom: 2px solid #f5f5f5\"\n                        *ngFor=\"let child of list.Classes\">\n                      <div>\n                        <div fxFlex=\"90\">\n                          <div style=\"padding-left: 40px\" class=\"text-alternative element-header\" >\n                            {{child.Title}}\n                          </div>\n                        </div>\n                        <div fxFlex=\"10\">\n                          <button mat-icon-button (click)=\"removeClass(child)\">\n                            <mat-icon>delete</mat-icon>\n                          </button>\n                        </div>\n                      </div>\n                    </li>\n                  </ul>\n                </div>\n              </li>\n            </ul>\n          </mat-card>\n        </div>\n      </div>\n\n\n      <div *ngIf=\"currentPage === 'person'\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n        <div class=\"text-main header step\">\n          Заявитель\n        </div>\n\n        <div class=\"step-content normal\">\n          <mat-card fxLayout=\"column\" fxLayoutAlign=\"center center\">\n            <mat-form-field style=\"width: 90%; max-width: 360px\" appearance=\"outline\">\n              <mat-label>Выбрать из сохраненных</mat-label>\n              <mat-select>\n                <mat-option *ngFor=\"let appl of apls\" [value]=\"appl.title\" (click)=\"setApplicant(appl)\">\n                  {{appl.title}}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n          </mat-card>\n        </div>\n        <div class=\"step-content normal\">\n          <mat-card fxLayout=\"column\" fxLayoutAlign=\"center center\" >\n            <mat-form-field style=\"width: 90%; max-width: 360px\" appearance=\"outline\">\n              <mat-label>Статус заявителя</mat-label>\n              <mat-select #appMode formControlName=\"applicantType\">\n                <mat-option [value]=\"'UL'\">\n                  Юридическое лицо\n                </mat-option>\n                <mat-option [value]=\"'IP'\">\n                  Индивидуальный предприниматель\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\" style=\"width: 90%; max-width: 360px\">\n              <mat-label>{{appMode.value === 'UL'? 'Наименование организации' : 'ФИО'}}</mat-label>\n              <input matInput placeholder=\"Наименование организации\" required formControlName=\"applicantName\"\n                     value=\"{{appForm.get('applicantName').value}}\">\n            </mat-form-field>\n            <div style=\"width: 90%; max-width: 360px\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\" >\n              <mat-form-field appearance=\"outline\" style=\"width: 45%; max-width: 150px\">\n                <mat-label>ИНН</mat-label>\n                <input matInput placeholder=\"ИНН\" required formControlName=\"applicantInn\"\n                       value=\"{{appForm.get('applicantInn').value}}\">\n              </mat-form-field>\n              <mat-form-field appearance=\"outline\" style=\"width: 45%; max-width: 150px\">\n                <mat-label>КПП</mat-label>\n                <input matInput placeholder=\"КПП\" required formControlName=\"applicantKpp\">\n              </mat-form-field>\n            </div>\n\n            <mat-form-field *ngIf=\"appMode.value === 'UL'\" appearance=\"outline\" style=\"width: 90%; max-width: 360px\">\n              <mat-label>ОГРН</mat-label>\n              <input matInput placeholder=\"ОГРН\" required formControlName=\"applicantOgrn\"\n                     value=\"{{appForm.get('applicantOgrn').value}}\">\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\" style=\"width: 90%; max-width: 360px\">\n              <mat-label>{{appMode.value === 'UL'? 'Юридический адрес' : 'Адрес'}}</mat-label>\n              <input matInput placeholder=\"Юридический адрес\" required formControlName=\"applicantAddress\"\n                     value=\"{{appForm.get('applicantAddress').value}}\">\n            </mat-form-field>\n            <mat-form-field *ngIf=\"appMode.value === 'UL'\" appearance=\"outline\" style=\"width: 90%; max-width: 360px\">\n              <mat-label>Генеральный директор</mat-label>\n              <input matInput placeholder=\"Генеральный директор\" required formControlName=\"applicantHead\"\n                     value=\"{{appForm.get('applicantHead').value}}\">\n            </mat-form-field>\n            <div style=\"width: 90%; max-width: 360px; margin-bottom: 15px\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n              <mat-checkbox required formControlName=\"applicantCanSave\" #saveForLater>Сохранить заявителя</mat-checkbox>\n            </div>\n            <mat-form-field *ngIf=\"saveForLater.checked\" appearance=\"outline\" style=\"width: 90%; max-width: 360px\">\n              <mat-label>Имя при сохранении</mat-label>\n              <input matInput placeholder=\"Имя при сохранении\" required formControlName=\"applicantSavingName\">\n            </mat-form-field>\n          </mat-card>\n        </div>\n      </div>\n\n\n      <div *ngIf=\"currentPage === 'options'\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n        <div class=\"text-main header step\">\n          Опции\n        </div>\n\n        <div class=\"text-main subheader\">\n          Способ подачи\n        </div>\n        <div class=\"step-content ultrawide\" fxLayoutAlign=\"center\">\n          <mat-radio-group formControlName=\"applicationMode\" fxLayout=\"row\"\n                           fxLayout.lt-md=\"column\" fxLayoutAlign=\"space-between center\" (change)=\"setAppPrice()\">\n            <mat-radio-button value=\"print\"\n                              [ngClass.lt-md]=\"{vertical: true}\" [ngClass]=\"{horizontal: true}\">\n              <mat-card style=\"width: 70vw; max-width: 360px; padding-bottom: 0\">\n                <div style=\"height: 25px\" class=\"text-main option-header\">Самостоятельно</div>\n                <div class=\"text-alternative option-description\" [ngClass.lt-md]=\"{flexible: true}\" [ngClass]=\"{fixed: true}\">\n                  Мы подготовим для вас необходимые документы и квитанции. Вам останется лишь распечатать и подать их самостоятельно в ФИПС\n                </div>\n                <mat-divider></mat-divider>\n                <div fxLayoutAlign=\"start center\" style=\"height: 40px\" class=\"text-main option-price\">\n                  300 руб\n                </div>\n              </mat-card>\n            </mat-radio-button>\n            <mat-radio-button value=\"electric\"\n                              [ngClass.lt-md]=\"{vertical: true}\" [ngClass]=\"{horizontal: true}\">\n              <mat-card style=\"width: 70vw; max-width: 360px; padding-bottom: 0\">\n                <div style=\"height: 25px\" class=\"text-main option-header\">Электронная форма</div>\n                <div class=\"text-alternative option-description\" [ngClass.lt-md]=\"{flexible: true}\" [ngClass]=\"{fixed: true}\">\n                  Мы подготовим для вас необходимые документы и квитанции. Вам останется лишь распечатать и подать их самостоятельно в ФИПС\n                </div>\n                <mat-divider></mat-divider>\n                <div fxLayoutAlign=\"start center\" style=\"height: 40px\"  class=\"text-main option-price\">\n                  3500 руб\n                </div>\n              </mat-card>\n            </mat-radio-button>\n          </mat-radio-group>\n        </div>\n        <div class=\"text-main subheader\">\n          Услуги\n        </div>\n        <div class=\"step-content wide\" fxLayoutAlign=\"center\">\n          <mat-checkbox formControlName=\"applicationCheckOption\"\n                        [(ngModel)]=\"optionHelpState\" (change)=\"setAppPrice()\">\n            <mat-card style=\"width: 70vw; max-width: 360px; padding-bottom: 0\">\n              <div class=\"text-main option-header\">Полная проверка товарного знака</div>\n              <div class=\"text-alternative option-description\">\n                Проведение экспертизы на предмет наличия возможных препятствий к регистрации\n                (тождественные или сходные товарные знаки и заявки на ТЗ, международные ТЗ,\n                 нарушение ГК РФ)\n              </div>\n              <mat-divider></mat-divider>\n              <div fxLayoutAlign=\"start center\" style=\"height: 40px\" class=\"text-main option-price\">\n                7500 руб\n              </div>\n            </mat-card>\n          </mat-checkbox>\n        </div>\n\n      </div>\n\n\n      <div *ngIf=\"currentPage === 'done'\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n        <div class=\"wide\" style=\"width: 85vw\" fxLayout=\"column\" fxLayoutAlign=\"start center\">\n\n          <mat-card style=\"width: 85vw; max-width: 800px\">\n            <div fxLayout=\"column\">\n\n              <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayout.lt-md=\"column\">\n                <div>\n                  <img *ngIf=\"accessState === 'accept'\" src=\"assets/images/accept.png\" style=\"width: 80px; height: 80px; margin-left: 15px\">\n                  <img *ngIf=\"accessState === 'warning'\" src=\"assets/images/warning.png\" style=\"width: 80px; height: 80px; margin-left: 15px\">\n                  <img *ngIf=\"accessState === 'reject'\" src=\"assets/images/delete.png\" style=\"width: 80px; height: 80px; margin-left: 15px\">\n                </div>\n                <div fxLayout=\"column\" fxLayoutAlign=\"center start\" fxLayoutAlign.lt-md=\"start center\">\n                  <div ngClass.lt-md=\"centered\" class=\"text-main accept-header\">{{getAcceptStatus()}}</div>\n                  <div ngClass.lt-md=\"justified\" class=\"text-main accept-description\">{{getAcceptText()}}</div>\n                </div>\n              </div>\n\n              <div style=\"margin-top: 15px\" *ngIf=\"accessState !== 'accept'\">\n                <mat-divider></mat-divider>\n                <div style=\"padding-top: 25px; padding-left: 15px; padding-bottom: 15px\">\n                  <button class=\"button primary-button\" mat-raised-button (click)=\"showMoreInfo()\">Подробнее</button>\n                </div>\n              </div>\n            </div>\n          </mat-card>\n\n          <mat-card style=\"width: 85vw; max-width: 800px; margin-top: 25px; \">\n\n            <mat-expansion-panel class=\"mat-elevation-z0\"\n                                 (opened)=\"trademarkPanelOpenState = true\"\n                                 (closed)=\"trademarkPanelOpenState = false\">\n              <mat-expansion-panel-header style=\"min-height: 150px\">\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                  <div>\n                    <img *ngIf=\"imagePreview\" [src]=\"imagePreview\" style=\"width: 80px; height: 80px; margin-left: 15px\">\n                    <img *ngIf=\"!imagePreview\" src=\"assets/images/picture.png\" style=\"border-radius: 360px;width: 80px; height: 80px; margin-left: 15px\">\n                  </div>\n                  <div fxLayout=\"column\" fxLayoutAlign=\"center start\">\n                    <div class=\"text-main accept-header\">{{appForm.get('trademarkName').value}}</div>\n                    <div *ngIf=\"!trademarkPanelOpenState\" class=\"text-main accept-description\">\n                      Количество классов: {{appForm.get('trademarkClasses').value.length}}\n                    </div>\n                  </div>\n                </div>\n              </mat-expansion-panel-header>\n              <div fxLayout=\"column\" style=\"margin-top: 0px\">\n                <mat-divider></mat-divider>\n\n                <div fxLayout=\"column\" fxLayoutAlign=\"start start\" class=\"summary-row\">\n                  <div class=\"text-alternative label\">Тип</div>\n                  <div class=\"text-main value line\">\n                    {{appForm.get('trademarkType').value | trademark}}\n                  </div>\n                </div>\n\n                <div  fxLayout=\"column\" fxLayoutAlign=\"start start\" class=\"summary-row\" *ngIf=\"appForm.get('trademarkLogoDescription').value\">\n                  <div class=\"text-alternative label\">Описание</div>\n                  <div class=\"text-main value line\">{{appForm.get('trademarkLogoDescription').value}}</div>\n                </div>\n\n                <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\" class=\"summary-row\">\n                  <div fxFlex=\"45\"  fxLayout=\"column\" fxLayoutAlign=\"start start\" style=\"width: 100%\" *ngIf=\"appForm.get('trademarkColors').value\">\n                    <div class=\"text-alternative label\">Цвета</div>\n                  </div>\n                  <div fxFlex=\"45\"  fxLayout=\"column\" fxLayoutAlign=\"start start\" style=\"width: 100%\" *ngIf=\"appForm.get('trademarkUnsec').value\">\n                    <div class=\"text-alternative label\">Неохраняемые элементы</div>\n                  </div>\n                </div>\n\n                <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\" style=\"width: 100%\">\n                  <div fxFlex=\"45\"  fxLayout=\"column\" fxLayoutAlign=\"start start\" style=\"width: 100%\" *ngIf=\"appForm.get('trademarkColors').value\">\n                    <div class=\"text-main value line\">{{appForm.get('trademarkColors').value}}</div>\n                  </div>\n                  <div fxFlex=\"45\"  fxLayout=\"column\" fxLayoutAlign=\"start start\" style=\"width: 100%\" *ngIf=\"appForm.get('trademarkUnsec').value\">\n                    <div class=\"text-main value line\">{{appForm.get('trademarkUnsec').value}}</div>\n                  </div>\n                </div>\n\n                <div  fxLayout=\"column\" fxLayoutAlign=\"start start\" class=\"summary-row\">\n                  <div class=\"text-alternative label\">Классы</div>\n                  <div class=\"text-main value line\">\n                    <ul style=\"padding: 15px;margin: 0\">\n                      <li *ngFor=\"let cls of appForm.get('trademarkClasses').value\">\n                        {{cls.Number}}\n                        <ul>\n                          <li *ngFor=\"let cat of cls.Classes\">\n                            {{cat.Title}}\n                          </li>\n                        </ul>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n\n                <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"summary-row\">\n                  <div fxFlex=\"45\"  fxLayout=\"column\" fxLayoutAlign=\"start start\" style=\"width: 100%\">\n                    <div class=\"text-main label\">Способ подачи</div>\n                  </div>\n                  <div fxFlex=\"45\"  fxLayout=\"column\" fxLayoutAlign=\"end bottom\" style=\"width: 100%\">\n                    <div class=\"text-main label\">Выбранные услуги</div>\n                  </div>\n                </div>\n\n                <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" style=\"width: 100%\">\n                  <div fxFlex=\"45\"  fxLayout=\"column\" fxLayoutAlign=\"start start\" style=\"width: 100%\">\n                    <div class=\"text-alternative value line\">\n                      {{appForm.get('applicationMode').value | mode}}\n                    </div>\n                  </div>\n                  <div fxFlex=\"45\"  fxLayout=\"column\" fxLayoutAlign=\"end bottom\" style=\"width: 100%\">\n                    <div class=\"text-alternative value line\" >{{appForm.get('applicationCheckOption').value | options}}</div>\n                  </div>\n                </div>\n\n                <div fxLayout=\"column\" fxLayoutAlign=\"start start\" class=\"summary-row\">\n                  <div class=\"text-main label\">Размер госпошлины</div>\n                  <div class=\"text-alternative value line\">\n                    {{appForm.get('applicationTax').value | currency:'RUB':'symbol-narrow'}}\n                  </div>\n                </div>\n\n              </div>\n            </mat-expansion-panel>\n\n          </mat-card>\n\n          <mat-card style=\"width: 85vw; max-width: 800px; margin-top: 25px\">\n\n            <mat-expansion-panel class=\"mat-elevation-z0\"\n                                 (opened)=\"ownerPanelOpenState = true\"\n                                 (closed)=\"ownerPanelOpenState = false\">\n              <mat-expansion-panel-header style=\"min-height: 150px\">\n\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n                  <div>\n                    <img src=\"assets/images/user%20(1).png\" style=\"width: 80px; height: 80px; margin-left: 15px\">\n                  </div>\n\n                  <div fxLayout=\"column\" fxLayoutAlign=\"center start\">\n\n                    <div class=\"text-main accept-header\">\n                      Данные о заявителе\n                    </div>\n\n                    <div *ngIf=\"!ownerPanelOpenState\" class=\"text-main accept-description\">\n                      {{appForm.get('applicantName').value}}\n                    </div>\n\n                  </div>\n\n                </div>\n\n              </mat-expansion-panel-header>\n\n              <div fxLayout=\"column\" style=\"margin-top: 0px\">\n                <mat-divider></mat-divider>\n\n                <div fxLayout=\"column\" fxLayoutAlign=\"start start\" style=\"width: 100%; padding-top: 15px\">\n                  <div class=\"text-alternative label\">Тип</div>\n                  <div class=\"text-main value line\">{{appForm.get('applicantType').value | applicant}}</div>\n                </div>\n\n                <div fxLayout=\"column\" fxLayoutAlign=\"start start\" style=\"width: 100%; padding-top: 15px\">\n                  <div class=\"text-alternative label\">\n                    {{appForm.get('applicantType').value === 'UL'? 'Полное название' : 'ФИО'}}\n                  </div>\n                  <div class=\"text-main value line\">{{appForm.get('applicantName').value}}</div>\n                </div>\n\n                <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" style=\"width: 100%; padding-top: 15px\">\n                  <div fxFlex=\"45\" fxLayout=\"column\" fxLayoutAlign=\"start start\" style=\"width: 100%\">\n                    <div class=\"text-alternative label\">ИНН</div>\n                    <div class=\"text-main value line\">{{appForm.get('applicantInn').value}}</div>\n                  </div>\n                  <div *ngIf=\"appForm.get('applicantType').value === 'UL'\"\n                       fxFlex=\"45\" fxLayout=\"column\" fxLayoutAlign=\"start start\" style=\"width: 100%\">\n                    <div class=\"text-alternative label\">КПП</div>\n                    <div class=\"text-main value line\">{{appForm.get('applicantKpp').value}}</div>\n                  </div>\n                </div>\n\n                <div fxLayout=\"column\" fxLayoutAlign=\"start start\" style=\"width: 100%; padding-top: 15px\">\n                  <div class=\"text-alternative label\">ОГРН</div>\n                  <div class=\"text-main value line\">{{appForm.get('applicantOgrn').value}}</div>\n                </div>\n\n                <div fxLayout=\"column\" fxLayoutAlign=\"start start\" style=\"width: 100%; padding-top: 15px\">\n                  <div class=\"text-alternative label\">Адрес</div>\n                  <div class=\"text-main value line\">{{appForm.get('applicantAddress').value}}</div>\n                </div>\n\n                <div *ngIf=\"appForm.get('applicantType').value === 'UL'\"\n                     fxLayout=\"column\" fxLayoutAlign=\"start start\" style=\"width: 100%; padding-top: 15px\">\n                  <div class=\"text-alternative label\">ФИО руководителя</div>\n                  <div class=\"text-main value line\">{{appForm.get('applicantHead').value}}</div>\n                </div>\n\n              </div>\n\n            </mat-expansion-panel>\n\n          </mat-card>\n\n          <div class=\"text-alternative subheader\">\n            К оплате:\n          </div>\n\n          <div class=\"text-alternative subheader\">\n            {{appForm.get('applicationPrice').value | currency:'RUB':'symbol-narrow'}}\n          </div>\n\n          <div class=\"text-alternative subheader\">\n            <button mat-raised-button class=\"button payment-button\">Оплатить</button>\n          </div>\n\n        </div>\n<!--        <div class=\"text-main header step\">-->\n<!--          Все готово!-->\n<!--        </div>-->\n\n<!--        <div class=\"text-main subheader wide\">-->\n<!--          Заявка на товарный знак сформирована. Все данные будут доступны в личном кабинете после оплаты-->\n<!--        </div>-->\n\n<!--        <div class=\"step-content wide\" fxLayoutAlign=\"center\">-->\n\n<!--          <mat-card style=\"width: 100%\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutAlign=\"space-between start\">-->\n<!--            <div fxFlex=\"42\" fxFlex.lt-md=\"100\" fxLayout=\"column\" fxLayoutAlign=\"center center\" style=\"width: 100%;padding: 15px\">-->\n<!--              <div class=\"text-main class-header\">Данные о заявке</div>-->\n<!--              <div class=\"summary-row\" *ngIf=\"imagePreview\">-->\n\n<!--                <img [src]=\"imagePreview\" style=\"height: auto; width: auto; max-height: 75px; max-width: 75px;\">-->\n<!--              </div>-->\n\n<!--              <div fxLayout=\"column\" fxLayoutAlign=\"start start\" class=\"summary-row\">-->\n<!--                <div class=\"text-alternative label\">Название</div>-->\n<!--                <div class=\"text-main value line\">{{appForm.get('trademarkName').value}}</div>-->\n<!--              </div>-->\n\n<!--              <div fxLayout=\"column\" fxLayoutAlign=\"start start\" class=\"summary-row\">-->\n<!--                <div class=\"text-alternative label\">Тип</div>-->\n<!--                <div class=\"text-main value line\">-->\n<!--                  {{appForm.get('trademarkType').value | trademark}}-->\n<!--                </div>-->\n<!--              </div>-->\n\n<!--              <div  fxLayout=\"column\" fxLayoutAlign=\"start start\" class=\"summary-row\" *ngIf=\"appForm.get('trademarkLogoDescription').value\">-->\n<!--                <div class=\"text-alternative label\">Описание</div>-->\n<!--                <div class=\"text-main value line\">{{appForm.get('trademarkLogoDescription').value}}</div>-->\n<!--              </div>-->\n\n<!--              <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\" class=\"summary-row\">-->\n<!--                <div fxFlex=\"45\"  fxLayout=\"column\" fxLayoutAlign=\"start start\" style=\"width: 100%\" *ngIf=\"appForm.get('trademarkColors').value\">-->\n<!--                  <div class=\"text-alternative label\">Цвета</div>-->\n<!--                </div>-->\n<!--                <div fxFlex=\"45\"  fxLayout=\"column\" fxLayoutAlign=\"start start\" style=\"width: 100%\" *ngIf=\"appForm.get('trademarkUnsec').value\">-->\n<!--                  <div class=\"text-alternative label\">Неохраняемые элементы</div>-->\n<!--                </div>-->\n<!--              </div>-->\n\n<!--              <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\" style=\"width: 100%\">-->\n<!--                <div fxFlex=\"45\"  fxLayout=\"column\" fxLayoutAlign=\"start start\" style=\"width: 100%\" *ngIf=\"appForm.get('trademarkColors').value\">-->\n<!--                  <div class=\"text-main value line\">{{appForm.get('trademarkColors').value}}</div>-->\n<!--                </div>-->\n<!--                <div fxFlex=\"45\"  fxLayout=\"column\" fxLayoutAlign=\"start start\" style=\"width: 100%\" *ngIf=\"appForm.get('trademarkUnsec').value\">-->\n<!--                  <div class=\"text-main value line\">{{appForm.get('trademarkUnsec').value}}</div>-->\n<!--                </div>-->\n<!--              </div>-->\n\n<!--              <div  fxLayout=\"column\" fxLayoutAlign=\"start start\" class=\"summary-row\">-->\n<!--                <div class=\"text-alternative label\">Классы</div>-->\n<!--                <div class=\"text-main value line\">-->\n<!--                  <ul style=\"padding: 15px;margin: 0\">-->\n<!--                   <li *ngFor=\"let cls of appForm.get('trademarkClasses').value\">-->\n<!--                     {{cls.Number}}-->\n<!--                     <ul>-->\n<!--                       <li *ngFor=\"let cat of cls.Classes\">-->\n<!--                         {{cat.Title}}-->\n<!--                       </li>-->\n<!--                     </ul>-->\n<!--                   </li>-->\n<!--                  </ul>-->\n<!--                </div>-->\n<!--              </div>-->\n\n<!--              <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"summary-row\">-->\n<!--                <div fxFlex=\"45\"  fxLayout=\"column\" fxLayoutAlign=\"start start\" style=\"width: 100%\">-->\n<!--                  <div class=\"text-main label\">Способ подачи</div>-->\n<!--                </div>-->\n<!--                <div fxFlex=\"45\"  fxLayout=\"column\" fxLayoutAlign=\"end bottom\" style=\"width: 100%\">-->\n<!--                  <div class=\"text-main label\">Выбранные услуги</div>-->\n<!--                </div>-->\n<!--              </div>-->\n\n<!--              <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" style=\"width: 100%\">-->\n<!--                <div fxFlex=\"45\"  fxLayout=\"column\" fxLayoutAlign=\"start start\" style=\"width: 100%\">-->\n<!--                  <div class=\"text-alternative value line\">-->\n<!--                    {{appForm.get('applicationMode').value | mode}}-->\n<!--                  </div>-->\n<!--                </div>-->\n<!--                <div fxFlex=\"45\"  fxLayout=\"column\" fxLayoutAlign=\"end bottom\" style=\"width: 100%\">-->\n<!--                  <div class=\"text-alternative value line\" >{{appForm.get('applicationCheckOption').value | options}}</div>-->\n<!--                </div>-->\n<!--              </div>-->\n\n<!--              <div fxLayout=\"column\" fxLayoutAlign=\"start start\" class=\"summary-row\">-->\n<!--                <div class=\"text-main label\">Размер госпошлины</div>-->\n<!--                <div class=\"text-alternative value line\">-->\n<!--                  {{appForm.get('applicationTax').value | currency:'RUB':'symbol-narrow'}}-->\n<!--                </div>-->\n<!--              </div>-->\n\n<!--              <div></div>-->\n<!--            </div>-->\n<!--            <div style=\"background: lightgray; width: 1px; height: 100%\" fxHide.lt-md=\"true\" fxShow=\"true\"></div>-->\n<!--            <div style=\"background: lightgray; height: 1px; width: 100%\" fxShow.lt-md=\"true\" fxHide=\"true\"></div>-->\n<!--            <div fxFlex=\"42\" fxFlex.lt-md=\"100\" fxLayout=\"column\" fxLayoutAlign=\"center center\" style=\"width: 100%;padding: 15px\">-->\n<!--              <div class=\"text-alternative class-header\">Данные о заявителе</div>-->\n\n<!--              <div fxLayout=\"column\" fxLayoutAlign=\"start start\" style=\"width: 100%; padding-top: 15px\">-->\n<!--                <div class=\"text-alternative label\">Тип</div>-->\n<!--                <div class=\"text-main value line\">{{appForm.get('applicantType').value | applicant}}</div>-->\n<!--              </div>-->\n\n<!--              <div fxLayout=\"column\" fxLayoutAlign=\"start start\" style=\"width: 100%; padding-top: 15px\">-->\n<!--                <div class=\"text-alternative label\">-->\n<!--                  {{appForm.get('applicantType').value === 'UL'? 'Полное название' : 'ФИО'}}-->\n<!--                </div>-->\n<!--                <div class=\"text-main value line\">{{appForm.get('applicantName').value}}</div>-->\n<!--              </div>-->\n\n<!--              <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" style=\"width: 100%; padding-top: 15px\">-->\n<!--                <div fxFlex=\"45\" fxLayout=\"column\" fxLayoutAlign=\"start start\" style=\"width: 100%\">-->\n<!--                  <div class=\"text-alternative label\">ИНН</div>-->\n<!--                  <div class=\"text-main value line\">{{appForm.get('applicantInn').value}}</div>-->\n<!--                </div>-->\n<!--                <div *ngIf=\"appForm.get('applicantType').value === 'UL'\"-->\n<!--                     fxFlex=\"45\" fxLayout=\"column\" fxLayoutAlign=\"start start\" style=\"width: 100%\">-->\n<!--                  <div class=\"text-alternative label\">КПП</div>-->\n<!--                  <div class=\"text-main value line\">{{appForm.get('applicantKpp').value}}</div>-->\n<!--                </div>-->\n<!--              </div>-->\n\n<!--              <div fxLayout=\"column\" fxLayoutAlign=\"start start\" style=\"width: 100%; padding-top: 15px\">-->\n<!--                <div class=\"text-alternative label\">ОГРН</div>-->\n<!--                <div class=\"text-main value line\">{{appForm.get('applicantOgrn').value}}</div>-->\n<!--              </div>-->\n\n<!--              <div fxLayout=\"column\" fxLayoutAlign=\"start start\" style=\"width: 100%; padding-top: 15px\">-->\n<!--                <div class=\"text-alternative label\">Адрес</div>-->\n<!--                <div class=\"text-main value line\">{{appForm.get('applicantAddress').value}}</div>-->\n<!--              </div>-->\n\n<!--              <div *ngIf=\"appForm.get('applicantType').value === 'UL'\"-->\n<!--                   fxLayout=\"column\" fxLayoutAlign=\"start start\" style=\"width: 100%; padding-top: 15px\">-->\n<!--                <div class=\"text-alternative label\">ФИО руководителя</div>-->\n<!--                <div class=\"text-main value line\">{{appForm.get('applicantHead').value}}</div>-->\n<!--              </div>-->\n\n<!--            </div>-->\n<!--          </mat-card>-->\n\n<!--        </div>-->\n\n\n      </div>\n\n\n    </div>\n    <div class=\"stepper-control\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n      <div fxFlex=\"25\" fxFlex.lt-md=\"30\" style=\"padding-left: 15px\">\n        <button *ngIf=\"currentPage !== 'name'\"\n                mat-button class=\"button alternative-button\" type=\"button\"\n                (click)=\"decreasePage()\">\n          Назад\n        </button>\n      </div>\n      <div fxFlex=\"50\" fxFlex.lt-md=\"40\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n        <button class=\"mini-page\" fxLayoutAlign=\"center center\"  mat-mini-fab\n                [ngClass]=\"{\n                  done: donePages[0]\n                  }\"\n                [ngClass.lt-md]=\"{\n                  micropage: currentPage !== 'name',\n                  done: donePages[0]\n                  }\">\n          <div fxHide.lt-md=\"true\" class=\"text-alternative stepper-label\">Название</div>\n        </button>\n        <mat-divider fxHide.lt-md=\"true\" class=\"page-divider done\"\n                     [ngClass]=\"{\n                  done: donePages[0],\n                  waiting: !donePages[0]\n                  }\">\n        </mat-divider>\n        <button class=\"mini-page\" fxLayoutAlign=\"center center\"  mat-mini-fab\n                [ngClass]=\"{\n                  done: donePages[1]\n                  }\"\n                [ngClass.lt-md]=\"{\n                  micropage: currentPage !== 'type',\n                  done: donePages[1]\n                  }\">\n          <div fxHide.lt-md=\"true\" class=\"text-alternative stepper-label\">Тип</div>\n        </button>\n        <mat-divider fxHide.lt-md=\"true\" class=\"page-divider\"\n                     [ngClass]=\"{\n                  done: donePages[1],\n                  waiting: !donePages[1]\n                  }\">\n\n        </mat-divider>\n        <button class=\"mini-page\" fxLayoutAlign=\"center center\" mat-mini-fab\n                [ngClass]=\"{\n                  done: donePages[2]\n                  }\"\n                [ngClass.lt-md]=\"{\n                  micropage: currentPage !== 'logo',\n                  done: donePages[2]\n                  }\">\n          <div fxHide.lt-md=\"true\" class=\"text-alternative stepper-label\">\n            Логотип\n          </div>\n        </button>\n        <mat-divider fxHide.lt-md=\"true\" class=\"page-divider\"\n                     [ngClass]=\"{\n                  done: donePages[2],\n                  waiting: !donePages[2]\n                  }\">\n        </mat-divider>\n        <button class=\"mini-page\" fxLayoutAlign=\"center center\" mat-mini-fab\n                [ngClass]=\"{\n                  done: donePages[3]\n                  }\"\n                [ngClass.lt-md]=\"{\n                  micropage: currentPage !== 'extra',\n                  done: donePages[3]\n                  }\">\n          <div fxHide.lt-md=\"true\" class=\"text-alternative stepper-label\">Дополнительно</div>\n        </button>\n        <mat-divider fxHide.lt-md=\"true\" class=\"page-divider\"\n                     [ngClass]=\"{\n                  done: donePages[3],\n                  waiting: !donePages[3]\n                  }\">\n        </mat-divider>\n        <button class=\"mini-page\" fxLayoutAlign=\"center center\" mat-mini-fab\n                [ngClass]=\"{\n                  done: donePages[4]\n                  }\"\n                [ngClass.lt-md]=\"{\n                  micropage: currentPage !== 'classes',\n                  done: donePages[4]\n                  }\">\n          <div fxHide.lt-md=\"true\" class=\"text-alternative stepper-label\">Классы</div>\n        </button>\n        <mat-divider fxHide.lt-md=\"true\" class=\"page-divider\"\n                     [ngClass]=\"{\n                  done: donePages[4],\n                  waiting: !donePages[4]\n                  }\">\n        </mat-divider>\n        <button class=\"mini-page\" fxLayoutAlign=\"center center\" mat-mini-fab\n                [ngClass]=\"{\n                  done: donePages[5]\n                  }\"\n                [ngClass.lt-md]=\"{\n                  micropage: currentPage !== 'person',\n                  done: donePages[5]\n                  }\">\n          <div fxHide.lt-md=\"true\" class=\"text-alternative stepper-label\">Заявитель</div>\n        </button>\n        <mat-divider fxHide.lt-md=\"true\" class=\"page-divider\"\n                     [ngClass]=\"{\n                  done: donePages[5],\n                  waiting: !donePages[5]\n                  }\">\n        </mat-divider>\n        <button class=\"mini-page\" fxLayoutAlign=\"center center\" mat-mini-fab\n                [ngClass]=\"{\n                  done: donePages[6]\n                  }\"\n                [ngClass.lt-md]=\"{\n                  micropage: currentPage !== 'options',\n                  done: donePages[6]\n                  }\">\n          <div fxHide.lt-md=\"true\" class=\"text-alternative stepper-label\">Опции</div>\n        </button>\n        <mat-divider fxHide.lt-md=\"true\" class=\"page-divider\"\n                     [ngClass]=\"{\n                  done: donePages[6],\n                  waiting: !donePages[6]\n                  }\">\n        </mat-divider>\n        <button class=\"mini-page\" color=\"primary\" fxLayoutAlign=\"center center\" mat-mini-fab\n                [ngClass]=\"{\n                  done: donePages[7]\n                  }\"\n                [ngClass.lt-md]=\"{\n                  micropage: currentPage !== 'done'\n                  }\">\n          <div fxHide.lt-md=\"true\" class=\"text-alternative stepper-label\">Готово</div>\n        </button>\n      </div>\n      <div fxFlex=\"25\" fxFlex.lt-md=\"30\" fxLayoutAlign=\"end center\" style=\"padding-right: 15px\">\n        <button\n          mat-raised-button class=\"button primary-button\" type=\"button\"\n                (click)=\"increasePage()\" [disabled]=\"posting\">\n          {{currentPage === 'done' ? 'Готово' : 'Далее'}}\n        </button>\n      </div>\n    </div>\n  </form>\n</div>\n","import {Component, ElementRef, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {AccountService} from '../../../services/account.service';\nimport {ActivatedRoute, Params} from '@angular/router';\nimport {Subscription} from 'rxjs';\nimport {Application, ApplicationData, Document} from '../../../tools/interfaces';\nimport {AuthService} from '../../../services/auth.service';\n\n@Component({\n  selector: 'app-application',\n  templateUrl: './application.component.html',\n  styleUrls: ['./application.component.css']\n})\nexport class ApplicationComponent implements OnInit, OnDestroy {\n\n  aSub: Subscription;\n  paramSub: Subscription;\n\n  id = '';\n  application: ApplicationData;\n\n  @ViewChild('href', {static: false}) hRef: ElementRef;\n\n  constructor(\n    private account: AccountService,\n    private route: ActivatedRoute,\n    private auth: AuthService\n  ) { }\n\n  ngOnInit(): void {\n    this.fetch();\n  }\n\n  fetch() {\n    this.paramSub = this.route.params.subscribe((params: Params) => {\n      this.id = params.id;\n    }, error => {\n      if (error.status === 401) {\n        this.auth.logout();\n      }\n    });\n\n    this.aSub = this.account.getApplicationById(this.id).subscribe(app => {\n      this.application = app;\n      console.log('classes', this.application.classes);\n    }, error => {\n      if (error.status === 401) {\n        this.auth.logout();\n      }\n    });\n\n}\n\n  ngOnDestroy(): void {\n    if (this.aSub) {this.aSub.unsubscribe(); }\n    if (this.paramSub) {this.paramSub.unsubscribe(); }\n  }\n\n  download(doc: Document) {\n    const link = document.createElement('a');\n    link.setAttribute('type', 'hidden');\n    link.href = doc.url;\n    link.download = doc.url.split('\\\\')[2];\n    document.body.appendChild(link);\n    link.click();\n    link.remove();\n    // this.hRef.nativeElement.href = doc.url;\n    // this.hRef.nativeElement.click();\n  }\n}\n","<div class=\"block-one\">\n\n  <div fxFlex=\"23\" fxHide.lt-md=\"true\" fxFlex.lt-lg=\"30\" fxLayout=\"column\"></div>\n  <div style=\"\" fxFlex=\"67\" fxFlex.lt-md=\"100\" fxFlex.lt-lg=\"55\"\n       fxLayout=\"column\" fxLayoutAlign=\"start start\">\n    <div style=\"margin-bottom: 15px; padding: 15px\" >\n      <button mat-icon-button [routerLink]=\"['/account']\">\n        <mat-icon>arrow_back</mat-icon>\n      </button>\n    </div>\n    <div style=\"width: 100%\" fxLayout=\"row\" fxLayoutAlign.lt-md=\"column\" fxLayoutAlign=\"center start\">\n      <div fxFlex=\"60\" fxFlex.lt-lg=\"100\" style=\"padding: 15px; \">\n        <mat-card class=\"app-card\" fxLayout=\"row\">\n          <div class=\"text-alternative app-status-label\">\n            Статус:\n          </div>\n          <div class=\"text-main app-status\">\n            {{application.status ? (application.status | status) : '-'}}\n          </div>\n        </mat-card>\n        <mat-card class=\"app-card\" fxHide=\"true\" fxShow.lt-lg=\"true\">\n          <div class=\"row-high\" fxLayout=\"column\">\n            <div class=\"text-alternative app-label\">Размер пошлины</div>\n            <div class=\"text-main app-value\">{{application.tax | currency:'RUB':'symbol-narrow'}}</div>\n          </div>\n          <div class=\"row-high\" fxLayout=\"column\">\n            <div class=\"text-alternative app-label\">Стоимость услуг</div>\n            <div class=\"text-main app-value\">{{application.price | currency:'RUB':'symbol-narrow'}}</div>\n          </div>\n\n          <mat-divider></mat-divider>\n          <div class=\"row-isolated\" fxLayoutAlign=\"center center\">\n            <button *ngIf=\"true; else payed\" mat-raised-button class=\"button payment-button\">Оплатить</button>\n            <ng-template #payed>\n              <div class=\"text-main app-title\">Оплачено</div>\n            </ng-template>\n          </div>\n          <mat-divider></mat-divider>\n          <div *ngIf=\"application.payed\" class=\"row-high-alt\" fxLayout=\"column\">\n            <div class=\"text-alternative app-label \">Документы</div>\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-around start\" class=\"row-normal\" class=\"selectable\">\n              <div *ngFor=\"let doc of application.documents\" class=\"container\"\n                   fxLayout=\"column\" fxLayoutAlign=\"start center\"\n                   (click)=\"download(doc)\">\n                <a [href]=\"doc.url\" download style=\"display: none\" #href>{{doc.url}}</a>\n                <img src=\"../../../../assets/images/app-documents.png\" style=\"height: 50px; width: 50px\">\n                <div class=\"text-main row-normal\" style=\"text-align: center;\">{{doc.type | doctypes}}</div>\n              </div>\n            </div>\n          </div>\n        </mat-card>\n        <mat-card class=\"app-card\">\n          <div fxLayoutAlign=\"center\">\n            <img [src]=\"application.logoUrl\" style=\"height: auto; width: auto; max-width: 300px; max-height: 150px\">\n          </div>\n          <div class=\"row-high text-main app-title\">{{application.name}}</div>\n          <div fxLayout=\"row\" class=\"row-isolated\">\n            <div fxFlex=\"50\" fxLayout=\"row\">\n              <div>\n                <img src=\"/src/assets/images/app-mode.png\" style=\"height: 50px; width: 50px\">\n              </div>\n              <div fxLayout=\"column\" class=\"card-info-iconic\" >\n                <div class=\"text-alternative app-label\" >Способ подачи</div>\n                <div class=\"text-main app-value\">{{application.mode | mode}}</div>\n              </div>\n            </div>\n            <div fxFlex=\"50\" fxLayout=\"row\">\n              <div>\n                <img src=\"/src/assets/images/type.png\" style=\"height: 50px; width: 50px\">\n              </div>\n              <div fxLayout=\"column\" class=\"card-info-iconic\">\n                <div class=\"text-alternative app-label\">Тип</div>\n                <div class=\"text-main app-value\">{{application.type | trademark}}</div>\n              </div>\n            </div>\n          </div>\n          <mat-divider></mat-divider>\n          <div class=\"row-high-alt\">\n            <div class=\"text-alternative app-label\">Описание</div>\n            <div class=\"row-normal text-main\">{{application.logoDescr}}</div>\n          </div>\n        </mat-card>\n        <mat-card class=\"app-card\">\n          <div fxLayout=\"row\">\n            <div>\n              <img src=\"/src/assets/images/app-help.png\" style=\"height: 50px; width: 50px\">\n            </div>\n            <div fxLayout=\"column\" class=\"card-info-iconic\">\n              <div class=\"text-alternative app-label\">Выбранные услуги</div>\n              <ul class=\"text-main\">\n                <li *ngFor=\"let opt of application.options\">{{opt.option | options}}</li>\n              </ul>\n<!--              <div >{{application.options}}</div>-->\n            </div>\n          </div>\n        </mat-card>\n        <mat-card class=\"app-card\">\n          <div fxLayout=\"row\">\n            <div>\n              <img src=\"/src/assets/images/app-colors.png\" style=\"height: 50px; width: 50px\">\n            </div>\n            <div fxLayout=\"column\" class=\"card-info-iconic\">\n              <div class=\"text-alternative app-label\">Цвета</div>\n              <div class=\"text-main app-value\">{{application.colors}}</div>\n            </div>\n          </div>\n          <div fxLayout=\"row\" class=\"row-high\">\n            <div>\n              <img src=\"/src/assets/images/app-unsec.png\" style=\"height: 50px; width: 50px\">\n            </div>\n            <div fxLayout=\"column\" class=\"card-info-iconic\">\n              <div class=\"text-alternative app-label\">Неохраняемые элементы</div>\n              <div class=\"text-main app-value\">{{application.unsecure}}</div>\n            </div>\n          </div>\n        </mat-card>\n        <mat-card class=\"app-card\">\n          <div fxLayout=\"row\">\n            <div>\n              <img src=\"/src/assets/images/app-classes.png\" style=\"height: 45px; width: 45px\">\n            </div>\n            <div fxLayout=\"column\" class=\"card-info-iconic\">\n              <div class=\"text-alternative app-label\">Выбранные классы</div>\n              <ul  style=\"padding-left: 0; list-style: none\">\n                <li *ngFor=\"let cls of application.classes\">\n                  <div class=\"text-main app-value\">\n                    {{cls.Number}}\n                  </div>\n                  <ul>\n                    <li class=\"text-main\" *ngFor=\"let cat of cls.Categories\">\n                      {{cat.Title}}\n                    </li>\n                  </ul>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </mat-card>\n        <mat-card class=\"app-card\">\n          <div>Заявитель</div>\n          <div>{{application.applicant.type | applicant}}</div>\n        </mat-card>\n      </div>\n      <div fxFlex=\"40\" fxHide.lt-lg=\"true\" style=\"padding: 15px\">\n        <mat-card class=\"app-card\">\n          <div class=\"row-high\" fxLayout=\"column\">\n            <div class=\"text-alternative app-label\">Размер пошлины</div>\n            <div class=\"text-main app-value\">{{application.tax | currency:'RUB':'symbol-narrow'}}</div>\n          </div>\n          <div class=\"row-high\" fxLayout=\"column\">\n            <div class=\"text-alternative app-label\">Стоимость услуг</div>\n            <div class=\"text-main app-value\">{{application.price | currency:'RUB':'symbol-narrow'}}</div>\n          </div>\n\n          <mat-divider></mat-divider>\n          <div class=\"row-isolated\" fxLayoutAlign=\"center center\">\n            <button *ngIf=\"true; else payed\" mat-raised-button class=\"button payment-button\">Оплатить</button>\n            <ng-template #payed>\n              <div class=\"text-main app-title\">Оплачено</div>\n            </ng-template>\n          </div>\n          <mat-divider></mat-divider>\n          <div *ngIf=\"application.payed\" class=\"row-high-alt\" fxLayout=\"column\">\n            <div class=\"text-alternative app-label \">Документы</div>\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-around start\" class=\"row-normal\" class=\"selectable\">\n              <div *ngFor=\"let doc of application.documents\" class=\"container\"\n                   fxLayout=\"column\" fxLayoutAlign=\"start center\"\n                   (click)=\"download(doc)\">\n                <a [href]=\"doc.url\" download style=\"display: none\" #href>{{doc.url}}</a>\n                <img src=\"../../../../assets/images/app-documents.png\" style=\"height: 50px; width: 50px\">\n                <div class=\"text-main row-normal\" style=\"text-align: center;\">{{doc.type | doctypes}}</div>\n              </div>\n            </div>\n          </div>\n        </mat-card>\n      </div>\n    </div>\n\n  </div>\n  <div fxFlex=\"10\" fxHide.lt-md=\"true\" fxFlex.lt-lg=\"15\" ></div>\n</div>\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {AccountService} from '../../../services/account.service';\nimport {Subscription} from 'rxjs';\nimport {AuthService} from '../../../services/auth.service';\nimport {AppData} from '../../../tools/interfaces';\n\n@Component({\n  selector: 'app-applications',\n  templateUrl: './applications.component.html',\n  styleUrls: ['./applications.component.css']\n})\n\nexport class ApplicationsComponent implements OnInit {\n\n  @ViewChild('grid', {static: false}) gridRef: ElementRef;\n\n  aSub: Subscription;\n  userApps: AppData[];\n  columns: number;\n\n  constructor(\n    private account: AccountService,\n    private auth: AuthService\n  ) { }\n\n  loaded = false;\n\n  ngOnInit(): void {\n    this.adjustGrid();\n    this.aSub = this.account.getAllApplications().subscribe(apps => {\n      console.log('apps', apps);\n      this.userApps = apps;\n      this.loaded = true;\n    }, error => {\n      if (error.status === 401) {\n        this.auth.logout();\n      }\n    });\n  }\n\n  adjustGrid() {\n    this.columns = (window.innerWidth * 0.7) / 320 >> 0;\n    console.log('here is width', this.columns, window.innerWidth);// = '100px';\n  }\n}\n","<div class=\"block-one\">\n  <div fxFlex=\"20\" fxHide.lt-md=\"true\" fxFlex.lt-lg=\"30\" fxLayout=\"column\"></div>\n  <div style=\"\" fxFlex=\"70\" fxFlex.lt-md=\"100\" fxFlex.lt-lg=\"55\" fxLayout=\"column\" fxLayoutAlign=\"start center\">\n    <div style=\"margin-top: 35px; margin-bottom: 25px; text-align: center\" class=\"text-main header\">\n      Заявки\n    </div>\n    <mat-grid-list style=\"width: 100%; \" cols=\"{{columns}}\" rowHeight=\"450px\"  #grid (window:resize)=\"adjustGrid()\">\n      <mat-grid-tile [routerLink]=\"['/add']\" class=\"shadow\" >\n        <mat-card [ngClass]=\"{shine: !loaded }\" style=\"padding: 0;height: 385px; width: 300px; margin: 50px 8px 15px;\">\n          <div fxHide=\"{{!loaded}}\" class=\"content\" style=\"height: 100%\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n            <img src=\"../../../../assets/images/plus%20(1).png\" style=\"height: 120px; width: 120px\">\n            <div style=\"margin-top: 35px;text-align: center\" class=\"text-main subheader\">\n              Создать новую заявку\n            </div>\n          </div>\n\n        </mat-card>\n\n      </mat-grid-tile>\n      <mat-grid-tile *ngIf=\"!loaded\">\n        <mat-card class=\"shine\" style=\"padding: 0;height: 385px; width: 300px; margin: 50px 8px 15px;\">\n\n        </mat-card>\n\n      </mat-grid-tile>\n      <mat-grid-tile *ngIf=\"!loaded\">\n        <mat-card class=\"shine\" style=\"padding: 0;height: 385px; width: 300px; margin: 50px 8px 15px;\">\n\n        </mat-card>\n\n      </mat-grid-tile>\n      <ng-container>\n        <mat-grid-tile class=\"shadow\" *ngFor=\"let app of userApps\" [routerLink]=\"['/applications', app._id]\">\n          <mat-card style=\"padding: 0;height: 385px; width: 300px; margin: 50px 8px 15px;\" >\n            <div class=\"content\">\n              <div class=\"trademark-header-background\" style=\"\" fxLayout=\"column\" fxLayoutAlign=\"start center\">\n                <div fxLayoutAlign=\"center center\" class=\"trademark-header-logo\">\n                  <img src=\"{{app.logoUrl ? (app.logoUrl) : 'assets/images/logo-empty.png'}}\" style=\" height: 50px; width: 50px;\">\n                </div>\n                <div fxLayout=\"column\" fxLayoutAlign=\"center start\" class=\"trademark-header-content\">\n                  <div class=\"text-main trademark-header\" >\n                    {{app.name}}\n                  </div>\n                  <div class=\"text-main\">\n                    {{app.date | date}}\n                  </div>\n                </div>\n              </div>\n              <div fxLayout=\"row\" class=\"trademark-block element\" style=\"\">\n                <div fxLayoutAlign=\"center center\" style=\"width: 50px\">\n                  <img src=\"../../../../assets/images/type.png\" style=\"height: 35px; width: 35px\">\n                </div>\n                <div fxLayout=\"column\" style=\"width: 100%; padding-left: 5px\">\n                  <div class=\"text-main trademark-field\">Тип</div>\n                  <div class=\"text-alternative trademark-value\">\n                    {{app.type === 'word' ? 'Словесный' : (app.type === 'image' ? 'Изобразительный' : 'Комбинированный')}}\n                  </div>\n                </div>\n              </div>\n              <div fxLayout=\"row\" class=\"trademark-block element end\">\n                <div fxLayoutAlign=\"center center\" style=\"width: 50px\">\n                  <img src=\"../../../../assets/images/user-card.png\" style=\"height: 25px; width: 25px\">\n                </div>\n                <div fxLayout=\"column\" style=\"width: 100%; padding-left: 5px\">\n                  <div class=\"text-main trademark-field\">Заявитель</div>\n                  <div class=\"text-alternative trademark-value\">{{app.applicant.name}}</div>\n                </div>\n              </div>\n              <mat-divider></mat-divider>\n              <div fxLayout=\"row\" class=\"trademark-block element footer\">\n                <div fxLayoutAlign=\"center center\" style=\"width: 50px\">\n                  <img src=\"../../../../assets/images/progress.png\" style=\"height: 35px; width: 35px\">\n                </div>\n                <div fxLayout=\"column\" style=\"width: 100%; padding-left: 5px\">\n                  <div class=\"text-main trademark-field\">Статус</div>\n                  <div class=\"text-alternative trademark-value\">{{app.status}}</div>\n                </div>\n              </div>\n            </div>\n          </mat-card>\n        </mat-grid-tile>\n      </ng-container>\n\n    </mat-grid-list>\n\n  </div>\n  <div fxFlex=\"10\" fxHide.lt-md=\"true\" fxFlex.lt-lg=\"15\" ></div>\n</div>\n","import {Component, ElementRef, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {AccountService} from '../../../services/account.service';\nimport {Subscription} from 'rxjs';\nimport {AuthService} from '../../../services/auth.service';\nimport {Applicant} from '../../../tools/interfaces';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {CustomValidators} from '../../../tools/custom.validators';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {SnackbarsService} from '../../../services/snackbars.service';\n\n@Component({\n  selector: 'app-personal',\n  templateUrl: './personal.component.html',\n  styleUrls: ['./personal.component.css']\n})\nexport class PersonalComponent implements OnInit, OnDestroy {\n\n  canEdit = false;\n  add = false;\n  editApp = true;\n  @ViewChild('appMode', {static: false}) typeRef: ElementRef;\n\n  username = 'user';\n  email = 'user@email.ru';\n\n  aSub: Subscription;\n\n  applicants: Applicant[];\n  userForm: FormGroup;\n  appForm: FormGroup;\n\n  constructor(\n    private account: AccountService,\n    private auth: AuthService,\n    private snack: SnackbarsService\n  ) { }\n\n  ngOnInit(): void {\n    // console.log(this.auth.getEmail())\n    this.fetch();\n    this.userForm = new FormGroup({\n        username : new FormControl(this.username,\n          [Validators.required]),\n        email : new FormControl(this.email,\n          [Validators.required, Validators.email]),\n      });\n    this.appForm = new FormGroup({\n      _id : new FormControl(null),\n      type : new FormControl(null, [Validators.required]),\n      name : new FormControl(null, [Validators.required]),\n      inn : new FormControl(null, [Validators.required]),\n      kpp : new FormControl(null, [Validators.required]),\n      ogrn : new FormControl(null),\n      address : new FormControl(null, [Validators.required]),\n      head : new FormControl(null, [Validators.required]),\n      title : new FormControl(null)\n    });\n  }\n\n  fetch() {\n    this.username = this.auth.getName();\n    this.email = this.auth.getEmail();\n    // console.log('res', this.username, this.email);\n    this.aSub = this.account.getAllApplicants().subscribe(applicants => {\n      // this.username = main.name;\n      // this.appsCount = main.apps;\n      // timeInterval(5000);\n      // this.loaded = true;\n      // console.log('apps', applicants);\n      this.applicants = applicants;\n    }, error => {\n      if (error.code === 401) {\n        this.auth.logout();\n      }\n    });\n  }\n\n  updateUserData() {\n    this.aSub = this.auth.updateUserData(this.userForm.value).subscribe(user => {\n      this.username = user.username;\n      this.email = user.email;\n      this.canEdit = false;\n      this.snack.show('Данные успешно обновлены');\n    }, error => {\n      if (error.code === 401) {\n        this.auth.logout();\n      } else {\n\n      }\n    });\n  }\n\n  addNewApplicant(newApp: boolean, app: Applicant) {\n    // console.log(app);\n    // console.log(this.appForm.value);\n    this.add = true;\n    if (!newApp) {\n      this.editApp = true;\n      // @ts-ignore\n      this.typeRef.value = app.type;\n      // console.log(this.typeRef.nativeElement, appl.type)\n      this.appForm.controls.address.setValue(app.address);\n      this.appForm.controls.type.setValue(app.type);\n      this.appForm.controls.name.setValue(app.name);\n      this.appForm.controls.head.setValue(app.head);\n      this.appForm.controls.inn.setValue(app.inn);\n      this.appForm.controls.kpp.setValue(app.kpp);\n      this.appForm.controls.ogrn.setValue(app.ogrn);\n      this.appForm.controls.title.setValue(app.title);\n      this.appForm.controls._id.setValue(app._id);\n      console.log(this.appForm.value);\n    } else {this.editApp = false; }\n  }\n\n  changeApplicant() {\n    if (this.editApp) {\n\n      this.aSub = this.account.updateApplicant(this.appForm.value).subscribe(answer => {\n        this.snack.show('Обновление прошло успешно');\n        const index = this.applicants.findIndex((obj => obj._id === answer._id));\n        this.applicants[index] = answer;\n        this.add = false;\n      }, error => {\n        if (error.status === 401) {\n          this.auth.logout();\n        }\n        if (error.status === 409) {\n          this.snack.show('Непредвиденная ошибка');\n        }\n      });\n    } else {\n      this.aSub = this.account.saveNewApplicant(this.appForm.value).subscribe(answer => {\n        this.snack.show('Новый заявитель добавлен');\n        this.add = false;\n        this.applicants.push(answer);\n      }, error => {\n        if (error.status === 401) {\n          this.auth.logout();\n        }\n        if (error.status === 409) {\n          this.snack.show('Непредвиденная ошибка');\n        }\n      });\n    }\n  }\n\n  removeApplicant(app: Applicant) {\n\n  }\n\n  ngOnDestroy(): void {\n    if (this.aSub) {this.aSub.unsubscribe(); }\n  }\n}\n","<div class=\"block-one\">\n  <div fxFlex=\"20\" fxHide.lt-md=\"true\" fxFlex.lt-lg=\"30\" fxLayout=\"column\"></div>\n  <div style=\"\" fxFlex=\"60\" fxFlex.lt-md=\"100\" fxFlex.lt-lg=\"55\">\n    <div *ngIf=\"add\" fxLayoutAlign=\"start\" style=\"padding: 10px; position: fixed; z-index: 2\">\n      <button mat-icon-button (click)=\"add = false\">\n        <mat-icon>arrow_back</mat-icon>\n      </button>\n    </div>\n    <div *ngIf=\"!add\" style=\"width: 100%\" fxLayout=\"column\" fxLayoutAlign=\"start center\">\n\n      <div style=\"margin-top: 35px;text-align: center;\" class=\"text-main header\">\n        Данные пользователя\n      </div>\n\n      <div class=\"step-content-alt long\">\n        <mat-card style=\"width: 100%;padding: 0\">\n          <form [formGroup]=\"userForm\" (submit)=\"updateUserData()\">\n            <div fxLayout=\"row\" fxLayout.lt-sm=\"column\" style=\"padding: 15px 25px;height: 85px;\">\n              <div fxFlex=\"50\" fxLayoutAlign=\"start center\" class=\"text-main form-label\">Имя пользователя</div>\n              <div fxFlex=\"50\" *ngIf=\"!canEdit\" fxLayoutAlign=\"start center\" class=\"form-value\">{{username}}</div>\n              <div fxFlex=\"50\" fxShow=\"{{canEdit}}\">\n                <mat-form-field style=\"margin-top: -5px; width: 100%; height: 100%\" class=\"text-main\" appearance=\"outline\">\n                  <mat-label></mat-label>\n                  <input formControlName=\"username\" type=\"text\" matInput value=\"{{username}}\">\n                  <mat-error *ngIf=\"userForm.get('username').invalid && userForm.get('username').touched\">\n                    Имя не должно быть пустым\n                  </mat-error>\n                </mat-form-field>\n              </div>\n            </div>\n            <mat-divider></mat-divider>\n            <div fxLayout=\"row\" fxLayout.lt-sm=\"column\"  style=\"padding: 15px 25px;height: 85px;\">\n              <div fxFlex=\"50\" fxLayoutAlign=\"start center\" class=\"text-main form-label\">Email</div>\n              <div fxFlex=\"50\" *ngIf=\"!canEdit\" fxLayoutAlign=\"start center\" class=\"form-value\">{{email}}</div>\n              <div fxFlex=\"50\" fxShow=\"{{canEdit}}\">\n                <mat-form-field style=\"margin-top: -5px; width: 100%; height: 100%\" class=\"text-main\" appearance=\"outline\">\n                  <mat-label></mat-label>\n                  <input formControlName=\"email\" type=\"email\" matInput value=\"{{email}}\">\n                  <mat-error *ngIf=\"userForm.get('email').invalid && userForm.get('email').touched\">\n                    Введите корректный email\n                  </mat-error>\n                </mat-form-field>\n              </div>\n            </div>\n            <mat-divider></mat-divider>\n            <div style=\"padding: 15px 25px;height: 85px\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n              <div *ngIf=\"!canEdit\" class=\"button alternative-button\" (click)=\"canEdit = true\">Редактировать</div>\n              <button type=\"submit\" *ngIf=\"canEdit\" mat-raised-button class=\"button primary-button\" style=\"margin-right: 25px\">Сохранить</button>\n              <div *ngIf=\"canEdit\" class=\"button alternative-button\" (click)=\"canEdit = false\">Отменить</div>\n            </div>\n          </form>\n        </mat-card>\n      </div>\n\n      <div style=\"margin-top: 35px;text-align: center\" class=\"text-main subheader\">\n        Заявители\n      </div>\n\n      <div class=\"step-content long shadow\">\n        <mat-card  (click)=\"addNewApplicant(true, null)\">\n          <div style=\"pointer-events: none;\" fxLayout=\"column\"  fxLayoutAlign=\"center center\">\n            <div>\n              <img src=\"../../../../assets/images/plus%20(1).png\" style=\"height: 50px; width: 50px; margin-bottom: 15px\">\n            </div>\n            <div class=\"text-main form-value\" style=\"text-align: center\">Добавить нового заявителя</div>\n          </div>\n        </mat-card>\n        <mat-card  *ngFor=\"let app of applicants\" style=\"margin-top: 25px; padding-bottom: 0; \">\n          <div>\n            <div class=\"text-alternative applicant-title\">{{app.title}}</div>\n            <div class=\"text-main applicant-name\">{{app.name}}</div>\n            <div #appMode class=\"text-main applicant-type\">\n              {{(app.type === 'UL' ? 'Юридическое лицо' : 'Индивидуальный предприниматель')}}\n            </div>\n            <div class=\"text-main applicant-label\">Адрес</div>\n            <div class=\"text-alternative applicant-address\">{{app.address}}</div>\n            <mat-divider></mat-divider>\n            <div style=\"padding-bottom: 15px;padding-top: 15px;\">\n              <button mat-raised-button class=\"button primary-button\" style=\"margin-right: 25px\"\n                      (click)=\"addNewApplicant(false, app)\">\n                <div>Редактировать</div>\n              </button>\n              <button mat-raised-button class=\"button negative-button\" (click)=\"removeApplicant(app)\">\n                <div>Удалить</div>\n              </button>\n            </div>\n          </div>\n        </mat-card>\n      </div>\n\n    </div>\n    <div *ngIf=\"add\" style=\"width: 100%\" fxLayout=\"column\" fxLayoutAlign=\"start center\">\n\n      <div style=\"margin-top: 35px;text-align: center;\" class=\"text-main header\">\n        Данные заявителя\n      </div>\n\n      <div class=\"step-content normal\">\n        <mat-card  style=\"padding-top: 25px; padding-bottom: 25px\">\n          <form [formGroup]=\"appForm\" (submit)=\"changeApplicant()\"\n                fxLayout=\"column\" fxLayoutAlign=\"center center\">\n            <mat-form-field style=\"width: 90%\" appearance=\"outline\">\n              <mat-label>Статус заявителя</mat-label>\n              <mat-select #appMode formControlName=\"type\">\n                <mat-option [value]=\"'UL'\">\n                  Юридическое лицо\n                </mat-option>\n                <mat-option [value]=\"'IP'\">\n                  Индивидуальный предприниматель\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\" style=\"width: 90%\">\n              <mat-label>{{appMode.value === 'UL'? 'Наименование организации' : 'ФИО'}}</mat-label>\n              <input matInput placeholder=\"Наименование организации\" required formControlName=\"name\"\n                     value=\"{{appForm.get('name').value}}\">\n            </mat-form-field>\n            <div style=\"width: 90%\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\" >\n              <mat-form-field appearance=\"outline\" style=\"width: 45%; \">\n                <mat-label>ИНН</mat-label>\n                <input matInput placeholder=\"ИНН\" required formControlName=\"inn\"\n                       value=\"{{appForm.get('inn').value}}\">\n              </mat-form-field>\n              <mat-form-field *ngIf=\"appMode.value === 'UL'\" appearance=\"outline\" style=\"width: 45%; \">\n                <mat-label>КПП</mat-label>\n                <input matInput placeholder=\"КПП\" required formControlName=\"kpp\">\n              </mat-form-field>\n            </div>\n\n            <mat-form-field  appearance=\"outline\" style=\"width: 90%\">\n              <mat-label>ОГРН</mat-label>\n              <input matInput placeholder=\"ОГРН\" required formControlName=\"ogrn\"\n                     value=\"{{appForm.get('ogrn').value}}\">\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\" style=\"width: 90%\">\n              <mat-label>{{appMode.value === 'UL'? 'Юридический адрес' : 'Адрес'}}</mat-label>\n              <input matInput placeholder=\"Юридический адрес\" required formControlName=\"address\"\n                     value=\"{{appForm.get('address').value}}\">\n            </mat-form-field>\n            <mat-form-field *ngIf=\"appMode.value === 'UL'\" appearance=\"outline\" style=\"width: 90%\">\n              <mat-label>Генеральный директор</mat-label>\n              <input matInput placeholder=\"Генеральный директор\" required formControlName=\"head\"\n                     value=\"{{appForm.get('head').value}}\">\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\" style=\"width: 90%\">\n              <mat-label>Имя при сохранении</mat-label>\n              <input matInput placeholder=\"Имя при сохранении\" required formControlName=\"title\">\n            </mat-form-field>\n            <div>\n              <button mat-raised-button class=\"button primary-button\" type=\"submit\">Сохранить</button>\n            </div>\n          </form>\n        </mat-card>\n      </div>\n\n    </div>\n  </div>\n  <div fxFlex=\"20\" fxHide.lt-md=\"true\" fxFlex.lt-lg=\"15\" ></div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Observable, Subscription} from 'rxjs';\nimport {AuthService} from '../../../services/auth.service';\nimport {resolve} from 'url';\nimport {CustomValidators} from '../../../tools/custom.validators';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-privacy',\n  templateUrl: './privacy.component.html',\n  styleUrls: ['./privacy.component.css']\n})\nexport class PrivacyComponent implements OnInit {\n\n  passForm: FormGroup;\n  aSub: Subscription;\n\n\n  constructor(\n    private auth: AuthService,\n    private snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n    this.passForm = new FormGroup({\n      old : new FormControl(null,\n        [Validators.required]),\n      password : new FormControl(null,\n        [Validators.required, Validators.minLength(8)]),\n      confirm : new FormControl(null,\n        [Validators.required])\n    },\n      {validators: CustomValidators.confirmPassword});\n  }\n\n  updatePassword() {\n    this.passForm.disable();\n    this.aSub = this.auth.updatePassword(this.passForm.value).subscribe(action => {\n      // console.log('action', action);\n      this.openSnackBar('Пароль успешно изменен', 'ОК');\n      this.passForm.enable();\n\n    }, error => {\n      if (error.code === 401) {\n        this.auth.logout();\n      }\n      console.log('err');\n      this.openSnackBar('Неправильный текущий пароль', 'ОК');\n      if (error.code === 409) {  }\n      this.passForm.enable();\n    });\n\n  }\n\n  confirmPasswords(group: FormGroup) {\n    if (group.get('password') === null) { return null; }\n    if (group.get('confirm') === null) { return null; }\n    const pass = group.get('password').value;\n    const confirmPass = group.get('confirm').value;\n    console.log('проверка', pass, confirmPass);\n    return pass === confirmPass ? null : { notSame: true };\n  }\n\n  checkOldPassword(control: FormControl, auth: AuthService): Observable<any> {\n    console.log('check validator', control.value)\n    return this.auth.checkPassword(control.value)\n  }\n  openSnackBar(message: string, action: string) {\n    this.snackBar.open(message, action, {\n      duration: 2000,\n    });\n  }\n\n  a() {\n    console.log(this.passForm.errors.notSame)\n  }\n}\n","<div class=\"block-one\">\n  <div fxFlex=\"20\" fxHide.lt-md=\"true\" fxFlex.lt-lg=\"30\" fxLayout=\"column\"></div>\n  <div style=\"\" fxFlex=\"60\" fxFlex.lt-md=\"100\" fxFlex.lt-lg=\"55\"\n       fxLayout=\"column\" fxLayoutAlign=\"start center\">\n    <div style=\"margin-top: 35px;text-align: center\" class=\"text-main header\">\n      Изменить пароль\n    </div>\n    <div class=\"step-content-alt long\">\n      <mat-card style=\"width: 100%;padding: 15px 0 0 0\">\n        <form [formGroup]=\"passForm\" (submit)=\"updatePassword()\">\n          <div fxLayout=\"row\" style=\"padding: 15px 25px;height: 85px\">\n            <div fxFlex=\"50\" fxHide.lt-sm=\"true\" fxLayoutAlign=\"start center\" class=\"text-main form-label\">Старый пароль</div>\n            <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\n              <mat-form-field style=\"margin-top: -5px;width: 100%; height: 100%\" class=\"text-main \" appearance=\"outline\">\n                <mat-label fxHide=\"true\" fxShow.lt-sm=\"true\">Старый пароль</mat-label>\n                <input type=\"password\" matInput formControlName=\"old\">\n                <mat-error *ngIf=\"passForm.get('old').invalid && passForm.get('old').touched\">\n                  Введен неверный пароль\n                </mat-error>\n              </mat-form-field>\n            </div>\n          </div>\n          <div fxLayout=\"row\" style=\"padding: 15px 25px;height: 85px\">\n            <div fxFlex=\"50\" fxHide.lt-sm=\"true\" fxLayoutAlign=\"start center\" class=\"text-main form-label\">Новый пароль</div>\n            <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\n              <mat-form-field style=\"margin-top: -5px;width: 100%; height: 100%\" class=\"text-main\" appearance=\"outline\">\n                <mat-label fxHide=\"true\" fxShow.lt-sm=\"true\">Новый пароль</mat-label>\n                <input type=\"password\" matInput formControlName=\"password\">\n                <mat-error *ngIf=\"passForm.get('password').invalid && passForm.get('password').touched\">\n                  Введите корректный пароль не менее 8 символов\n                </mat-error>\n              </mat-form-field>\n            </div>\n          </div>\n          <div fxLayout=\"row\" style=\"padding: 15px 25px;height: 85px; margin-bottom: 15px\">\n            <div fxFlex=\"50\" fxHide.lt-sm=\"true\" fxLayoutAlign=\"start center\" class=\"text-main form-label\">Повторите пароль</div>\n            <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\n              <mat-form-field style=\"margin-top: -5px; width: 100%; height: 100%\" class=\"text-main\" appearance=\"outline\">\n                <mat-label fxHide=\"true\" fxShow.lt-sm=\"true\">Повторите пароль</mat-label>\n                <input type=\"password\" matInput formControlName=\"confirm\" >\n<!--                <mat-error *ngIf=\"passForm.get('confirm').invalid && passForm.get('confirm').touched\">-->\n<!--                  Пароль не может быть короче 8 символов {{passForm.errors !== null ? ' и должен совпадать' : ''}}-->\n<!--                </mat-error>-->\n                <mat-error *ngIf=\"passForm.errors ? passForm.errors.notSame: false\">\n                  Пароли должны совпадать\n                </mat-error>\n                <!--        <mat-hint style=\"color: white\" *ngIf=\"wrongAuth\">Неверный логин или пароль</mat-hint>-->\n                <!--              <mat-error *ngIf=\"loginForm.get('email').invalid && loginForm.get('email').touched\">-->\n                <!--                Введите корректный email-->\n                <!--              </mat-error>-->\n              </mat-form-field>\n            </div>\n          </div>\n          <button (click)=\"a()\">a</button>\n          <mat-divider></mat-divider>\n          <div fxLayout=\"row\" style=\"padding: 15px 25px;height: 65px\">\n            <button mat-raised-button class=\"button primary-button\"\n                    type=\"submit\"\n                    [disabled]=\"passForm.invalid || passForm.disabled\">Обновить</button>\n          </div>\n        </form>\n      </mat-card>\n    </div>\n  </div>\n  <div fxFlex=\"20\" fxHide.lt-md=\"true\" fxFlex.lt-lg=\"15\" ></div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"block-one\">\n  <div style=\"margin-top: 35px;text-align: center\" class=\"text-main header\">\n    О нас\n  </div>\n  <div *ngIf=\"true\" class=\"text-main subheader\">\n    Раздел находится в разработке, но это ненадолго\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contacts',\n  templateUrl: './contacts.component.html',\n  styleUrls: ['./contacts.component.css']\n})\nexport class ContactsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"block-one\">\n  <div style=\"margin-top: 35px;text-align: center\" class=\"text-main header\">\n    Контакты\n  </div>\n  <div *ngIf=\"true\" class=\"text-main subheader\">\n    Раздел находится в разработке, но это ненадолго\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"block-one\" div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n  <div class=\"error\"  fxLayoutAlign=\"center\">\n    <img src=\"../../../../assets/images/emoji.svg\">\n  </div>\n  <div class=\"text-main header error\"  fxLayoutAlign=\"center\">\n    <h1>Ой... а такой страницы нет</h1>\n  </div>\n  <div class=\"error\"  fxLayoutAlign=\"center\">\n    <button [routerLink]=\"['/']\" class=\"button\" mat-raised-button color=\"warn\">Вернуться на главную</button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div style=\"background: whitesmoke\">\n  <mat-divider></mat-divider>\n  <div fxLayout=\"column\">\n    <div fxLayout=\"row\" fxLayout.lt-md=\"column\">\n      <div fxFlex=\"80\" style=\"margin-top: 25px; margin-bottom: 25px\">\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\"\n             fxHide=\"true\" fxShow.lt-md=\"true\"\n             style=\"margin-left: 25px\">\n          <img src=\"assets/images/logo.png\" style=\"height: 50px; width: 50px\">\n          <div class=\"text-main footer-element\">BrandReg</div>\n        </div>\n      </div>\n      <div fxFlex=\"20\" fxLayout=\"column\" fxLayoutAlign=\"center start\" style=\"margin-top: 25px; margin-bottom: 25px; margin-left: 25px\">\n        <div class=\"text-main footer-element\">Главная</div>\n        <!--      <div class=\"text-main footer-element\">\"Элемент 1\"</div>-->\n        <!--      <div class=\"text-main footer-element\">Элемент 2</div>-->\n        <!--      <div class=\"text-main footer-element\">Элемент 3</div>-->\n        <div class=\"text-main footer-element\">О нас</div>\n        <div class=\"text-main footer-element\">Контакты</div>\n      </div>\n    </div>\n    <mat-divider style=\"margin-left: 25px; margin-right: 25px\"></mat-divider>\n    <div fxLayout=\"column\" style=\"margin: 15px 25px\">\n      <div class=\"text-alt credits\" fxLayoutAlign=\"center center\" fxLayoutAlign.lt-md=\"start center\">Все права защищены</div>\n      <div class=\"text-alt credits\" fxLayoutAlign=\"center center\" fxLayoutAlign.lt-md=\"start center\">Москва, 2020 г.</div>\n    </div>\n  </div>\n\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../../../services/auth.service';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n\n  registerForm: FormGroup\n  aSub: Subscription\n\n  constructor(\n    private router: Router,\n    private auth: AuthService) { }\n    public background = 'url(assets/images/background-1080-blurry1.png)'\n\n  ngOnInit(): void {\n    if (this.auth.isAuthenticated()) {\n      console.log(true)\n      this.router.navigate(['/account'])\n    } else {\n      this.registerForm = new FormGroup({\n        username : new FormControl(null, [Validators.required]),\n        email    : new FormControl(null, [Validators.required, Validators.email]),\n        password : new FormControl(null, [Validators.required, Validators.minLength(8)])\n      })\n      console.log(false)\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.aSub) {\n      this.aSub.unsubscribe()\n    }\n  }\n\n  submit() {\n    if (this.registerForm.invalid) {\n      console.log('wrong')//this.router.navigate(['/register'])\n    } else {\n      this.registerForm.disable()\n      this.aSub = this.auth.register(this.registerForm.value).subscribe(\n        () => {\n          this.router.navigate(['/login'], {\n            queryParams : {\n              registered: true\n            }\n          })\n        },\n        error => {\n          this.router.navigate(['/register'], {\n            queryParams : {\n              emailExists: true\n            }\n          })\n          this.registerForm.enable()\n        }\n      )\n    }\n\n  }\n}\n","<div class=\"block-one\" fxLayout.lt-md=\"column\" fxLayout.gt-sm=\"row\" fxLayoutAlign=\"space-evenly center\">\n  <div class=\"description\">\n    <div class=\"text-main greetings-header\">\n      Регистрируй самостоятельно\n    </div>\n    <div class=\"text-alternative greetings-text\">\n      BrandReg это сервис, позволяющий тебе самостоятельно регистрировать товарные знаки,\n      бесплатно получать оценку вероятности регистрации и быть увереным, что тебе всегда поможет команда\n      настоящих профессионалов\n    </div>\n  </div>\n  <mat-card class=\"register-card\" fxHide.lt-md=\"true\" fxShow=\"true\">\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"submit()\">\n      <mat-form-field appearance=\"outline\" class=\"text-main\">\n        <mat-label >Ваше имя</mat-label>\n        <input formControlName=\"username\" matInput placeholder=\"Имя\" fxLayoutAlign=\"center\">\n        <mat-error *ngIf=\"registerForm.get('username').invalid && registerForm.get('username').touched\">\n          Поле 'Имя' является обязательным\n        </mat-error>\n      </mat-form-field>\n      <mat-form-field appearance=\"outline\" class=\"text-main\">\n        <mat-label>e-mail</mat-label>\n        <input formControlName=\"email\" type=\"email\" matInput placeholder=\"email\">\n        <mat-error *ngIf=\"registerForm.get('email').invalid && registerForm.get('email').touched\">\n          Введите корректный email\n        </mat-error>\n      </mat-form-field>\n      <mat-form-field appearance=\"outline\" class=\"text-main\">\n        <mat-label>Пароль</mat-label>\n        <input formControlName=\"password\" type=\"password\" matInput placeholder=\"Пароль\">\n        <mat-error *ngIf=\"registerForm.get('password').invalid && registerForm.get('password').touched\">\n          Введите корректный пароль не менее 8 символов\n        </mat-error>\n      </mat-form-field>\n      <button type=\"submit\" class=\"primary-button register-button\" mat-raised-button>Зарегистрироваться</button>\n    </form>\n  </mat-card>\n  <button [routerLink]=\"['/register']\" class=\"primary-button register-button-alt\" mat-flat-button fxHide=\"true\" fxShow.lt-md=\"true\">Зарегистрироваться</button>\n</div>\n","import {Component, ElementRef, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AuthService} from '../../../services/auth.service';\nimport {Subscription} from 'rxjs';\nimport {ActivatedRoute, Params, Router} from '@angular/router';\n//\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n\n  loginForm: FormGroup\n  aSub: Subscription\n  wrongAuth = false\n  expired = false\n  canLogin = false\n\n  constructor(\n    private auth: AuthService,\n    private router: Router,\n    private route: ActivatedRoute) {\n\n  }\n\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      email    : new FormControl(null, [Validators.required, Validators.email]),\n      password : new FormControl(null, [Validators.required, Validators.minLength(8)])\n    })\n    this.route.queryParams.subscribe((params: Params ) => {\n      if (params['registered']) {\n        this.canLogin = true\n      }\n      if (params['expired']) {\n        this.expired = true\n      }\n      if (params['authError']) {\n        this.wrongAuth = true\n      }\n    })\n  }\n  ngOnDestroy(): void {\n    console.log(this.aSub)\n    if (this.aSub) {\n      this.aSub.unsubscribe()\n    }\n  }\n\n  submit() {\n    this.loginForm.disable()\n    this.aSub = this.auth.login(this.loginForm.value).subscribe(\n      () => {\n        this.router.navigate(['/account'])\n      },\n      error => {\n        console.warn(error)\n        this.router.navigate(['/login'], {\n          queryParams: {\n            authError: true\n          }\n        })\n        // this.snackBar.open('message', 'OK', {\n        //   duration: 2000,\n        // });\n        // SnackbarService.snack('Неверный логин')  //this.wrongAuth = true// this.openSnackBar('Message archived');\n        this.loginForm.enable()\n      }\n      )\n  }\n\n}\n","<div class=\"block-one\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <mat-card class=\"login-window\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n    <img src=\"../../../../assets/images/logo.png\" style=\"height: 45px; width: 45px; margin-bottom: 10px\">\n    <div class=\"card-header\">\n      Вход\n    </div>\n    <div class=\"text-alternative description\">\n      Используйте свою учетную запись для входа\n    </div>\n    <div class=\"text-alternative announcement-negative\" fxLayoutAlign=\"center center\" *ngIf=\"wrongAuth\">Неверный логин или пароль</div>\n    <div class=\"text-alternative announcement-negative\" fxLayoutAlign=\"center center\" *ngIf=\"expired\">Сеанс закончен, войдите заново</div>\n    <div class=\"text-alternative announcement-positive\" fxLayoutAlign=\"center center\" *ngIf=\"canLogin\">Ура! Теперь вы можете войти</div>\n<!--    <h3 style=\"color: white; background: #c73934; width: 100%; text-align: center\" ></h3>-->\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"submit()\">\n      <mat-form-field  class=\"form-filed text-main\" appearance=\"outline\">\n        <mat-label>e-mail</mat-label>\n        <input formControlName=\"email\" type=\"email\" matInput placeholder=\"email\">\n<!--        <mat-hint style=\"color: white\" *ngIf=\"wrongAuth\">Неверный логин или пароль</mat-hint>-->\n        <mat-error *ngIf=\"loginForm.get('email').invalid && loginForm.get('email').touched\">\n          Введите корректный email\n        </mat-error>\n      </mat-form-field>\n      <mat-form-field  class=\"form-filed text-main\"  appearance=\"outline\">\n        <mat-label>Пароль</mat-label>\n        <input formControlName=\"password\" type=\"password\" matInput placeholder=\"Пароль\">\n        <mat-error *ngIf=\"loginForm.get('password').invalid && loginForm.get('password').touched\">\n          Введите корректный пароль не менее 8 символов\n        </mat-error>\n      </mat-form-field>\n      <div class=\"form-filed button alternative-button\" style=\"margin-bottom: 15%; margin-top: 0\">\n        Забыли пароль?\n      </div>\n      <div class=\"form-filed\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n        <div CLASS=\"button alternative-button\" [routerLink]=\"['/register']\">\n          Создать аккаунт\n        </div>\n        <button type=\"submit\" class=\"button primary-button\" mat-raised-button  [disabled]=\"loginForm.invalid || loginForm.disabled\">Войти</button>\n      </div>\n\n    </form>\n  </mat-card>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Subscription} from 'rxjs';\nimport {AuthService} from '../../../services/auth.service';\nimport {ActivatedRoute, Params, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit, OnDestroy {\n\n  registerForm: FormGroup\n  aSub: Subscription\n\n  constructor(\n    private auth: AuthService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    this.registerForm = new FormGroup({\n      username : new FormControl(null, [Validators.required]),\n      email    : new FormControl(null, [Validators.required, Validators.email]),\n      password : new FormControl(null, [Validators.required, Validators.minLength(8)])\n    })\n    this.route.queryParams.subscribe((params: Params ) => {\n      // if (params['registered']) {\n      //\n      // }\n    })\n  }\n  ngOnDestroy(): void {\n    if (this.aSub) {\n      this.aSub.unsubscribe()\n    }\n\n  }\n\n  submit() {\n    this.registerForm.disable()\n    this.aSub = this.auth.register(this.registerForm.value).subscribe(\n      () => {\n        this.router.navigate(['/login'], {\n          queryParams : {\n            registered: true\n          }\n        })\n      },\n      error => {\n        this.router.navigate(['/register'], {\n          queryParams : {\n            emailExists: true\n          }\n        })\n        this.registerForm.enable()\n      }\n    )\n  }\n\n}\n","<div class=\"block-one\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <mat-card class=\"register-window\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <div fxFlex.lt-md=\"100\" style=\"width: 350px;\" fxLayout=\"column\" fxLayoutAlign=\"start center\">\n      <div class=\"register-block\">\n        <img src=\"../../../../assets/images/logo.png\" style=\"height: 45px; width: 45px; margin-bottom: 10px\">\n      </div>\n      <div class=\"card-header register-header\">\n        Создайте новый аккаунт\n      </div>\n      <form [formGroup]=\"registerForm\" (ngSubmit)=\"submit()\" class=\"register-block\">\n        <div fxLayout=\"row\">\n          <mat-form-field style=\"width: 100%\" appearance=\"outline\" class=\"text-main\">\n            <mat-label>Имя</mat-label>\n            <input formControlName=\"username\" matInput placeholder=\"Имя\">\n          </mat-form-field>\n        </div>\n        <div>\n          <mat-form-field appearance=\"outline\" class=\"text-main\">\n            <mat-label>e-mail</mat-label>\n            <input formControlName=\"email\" type=\"email\" matInput placeholder=\"email\">\n          </mat-form-field>\n        </div>\n        <div>\n          <mat-form-field class=\"form-filed\" appearance=\"outline\" class=\"text-main\">\n            <mat-label>Пароль</mat-label>\n            <input formControlName=\"password\" type=\"password\"  matInput placeholder=\"Пароль\">\n          </mat-form-field>\n        </div>\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n        <div [routerLink]=\"['/login']\" class=\"button alternative-button\">\n          Войти\n        </div>\n        <button class=\"button primary-button\" type=\"submit\" mat-raised-button [disabled]=\"registerForm.invalid || registerForm.disabled\">Создать</button>\n      </div>\n      </form>\n    </div>\n    <div fxHide.lt-md=\"true\" style=\"width: 350px;\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n      <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n        <img src=\"../../../../assets/images/register-logo.png\" style=\"height: 50%; width: 50%\">\n      </div>\n      <div class=\"text-alternative card-description\">\n        Создай аккаунт. Подавай заявки отовсюду. Получай результат\n      </div>\n    </div>\n  </mat-card>\n</div>\n","import {Injectable} from '@angular/core';\r\nimport {AppData, Applicant, Application, ApplicationData, Class, MainData, NewUser, UserUpdate} from '../tools/interfaces';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {FormBuilder} from '@angular/forms';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n\r\nexport class AccountService {\r\n\r\n  constructor(private http: HttpClient ) {\r\n  }\r\n\r\n\r\n  getMain(): Observable<MainData> {\r\n    console.log('getting info...');\r\n    return this.http.get<MainData>(`/api/account`);\r\n  }\r\n\r\n  // ===== Работа с заявками\r\n\r\n  registerApplication(application: Application): Observable<Application> {\r\n    console.log('posting app', application);\r\n    return this.http.post<Application>('/api/account', application);\r\n  }\r\n\r\n  registerLogo(image: File): Observable<{ url: string }> {\r\n    const fd = new FormData();\r\n    if (image) {\r\n      fd.append('image', image, image.name);\r\n    }\r\n    // fd.append('name', name);\r\n    return this.http.post<{ url: string }>('/api/account/logo', fd);\r\n  }\r\n\r\n  getAllApplications(): Observable<AppData[]> {\r\n    // console.log('getting info...');\r\n    return this.http.get<AppData[]>(`/api/account/apps`);\r\n  }\r\n\r\n  getApplicationById(id: string): Observable<ApplicationData> {\r\n    return this.http.get<ApplicationData>(`/api/account/apps/${id}`);\r\n  }\r\n\r\n\r\n\r\n  // ===== работа с заявителями\r\n\r\n  saveNewApplicant(applicant: Applicant): Observable<Applicant> {\r\n    return this.http.post<Applicant>(`/api/account/applicants`, applicant);\r\n  }\r\n\r\n  getAllApplicants(): Observable<Applicant[]> {\r\n    return this.http.get<Applicant[]>(`/api/account/applicants`);\r\n  }\r\n\r\n  updateApplicant(applicant: Applicant): Observable<Applicant> {\r\n    return this.http.patch<Applicant>(`/api/account/applicants/${applicant._id}`, applicant);\r\n  }\r\n\r\n  removeApplicant(applicant: Applicant): Observable<Applicant> {\r\n    return this.http.delete<Applicant>(`/api/account/applicants/${applicant._id}`);\r\n  }\r\n\r\n\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {NewUser, UpdatePassword, User, UserUpdate} from '../tools/interfaces';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {tap} from 'rxjs/operators';\r\nimport {Router} from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  private token = null;\r\n  private userName = null;\r\n  private email = null;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private router: Router\r\n              ) {\r\n  }\r\n  register(user: NewUser): Observable<NewUser> {\r\n    return this.http.post<NewUser>('/api/auth/register', user);\r\n  }\r\n\r\n  login(user: User): Observable<{token: string, name: string, email: string}> {\r\n    return this.http.post<{token: string, name: string, email: string}>('/api/auth/login', user)\r\n      .pipe(\r\n        tap(({token, name, email}) => {\r\n          localStorage.setItem('auth-token', token);\r\n          localStorage.setItem('username', name);\r\n          localStorage.setItem('email', email);\r\n          console.log('here are you', name, email);\r\n          this.setToken(token);\r\n          this.setName(name);\r\n          this.setEmail(email);\r\n        })\r\n      );\r\n  }\r\n\r\n  checkPassword(password: string): Observable<boolean> {\r\n    console.log('i have a pass', password)\r\n    return this.http.post<boolean>('/api/auth/check', password)\r\n      .pipe(\r\n        tap(val => {\r\n          console.log('value is', val)\r\n        })\r\n      );\r\n  }\r\n\r\n  updatePassword(update: UpdatePassword): Observable<{ action: string }> {\r\n    return this.http.patch<{action: string}>('/api/auth/update', update);\r\n  }\r\n\r\n  updateUserData(user: UserUpdate): Observable<UserUpdate> {\r\n    return this.http.patch<UserUpdate>('/api/auth/edit', user)\r\n      .pipe(\r\n        tap((result) => {\r\n          localStorage.setItem('username', result.username);\r\n          localStorage.setItem('email', result.email);\r\n          console.log('here are you', result.username, result.email)\r\n          // this.setToken(token);\r\n          this.setName(result.username);\r\n          this.setEmail(result.email);\r\n        })\r\n      );\r\n\r\n  }\r\n  setToken(token: string) {\r\n    this.token = token;\r\n  }\r\n  getToken(): string {\r\n    return this.token;\r\n  }\r\n  setName(name: string) {\r\n    this.userName = name;\r\n  }\r\n  getName(): string {\r\n    return this.userName;\r\n  }\r\n  setEmail(email: string) {\r\n    this.email = email;\r\n  }\r\n  getEmail(): string {\r\n    return this.email;\r\n  }\r\n  isAuthenticated(): boolean {\r\n    return !!this.token;\r\n  }\r\n  logout() {\r\n    this.setToken(null);\r\n    this.setName(null);\r\n    localStorage.clear();\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Class} from '../tools/interfaces';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {tap} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ClassService {\r\n\r\n  // private mainclesses = null;\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n              )\r\n  { }\r\n\r\n  getMain(): Observable<Class[]> {\r\n    return this.http.get<Class[]>(`/api/class`);\r\n  }\r\n  getChildren(id: string): Observable<Class[]> {\r\n    return this.http.get<Class[]>(`/api/class/children/${id}`);\r\n  }\r\n  getById(id: string): Observable<Class> {\r\n    return this.http.get<Class>(`/api/class/${id}`);\r\n  }\r\n  getUp(id: string): Observable<Class[]> {\r\n    return this.http.get<Class[]>(`/api/class/up/${id}`);\r\n  }\r\n\r\n  search(options: any): Observable<any> {\r\n    return this.http.get<Class[]>(`/api/class/search`, options);\r\n  }\r\n\r\n  matchTrademark(options: any): Observable<any> {\r\n    return this.http.get<Class[]>(`/api/match`, options);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SnackbarsService {\n\n  constructor(\n    private snackBar: MatSnackBar\n  ) { }\n\n  show(message: string) {\n    this.snackBar.open(message, 'OK', {\n      duration: 2000,\n    });\n  }\n}\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {HomeComponent} from '../components/general/home/home.component';\r\nimport {RegisterComponent} from '../components/general/register/register.component';\r\nimport {LoginComponent} from '../components/general/login/login.component';\r\nimport {AccountComponent} from '../components/account/account/account.component';\r\nimport {ErrorComponent} from '../components/general/error/error.component';\r\nimport {AddComponent} from '../components/account/add/add.component';\r\nimport {AuthGuard} from './auth.guard';\r\nimport {ApplicationsComponent} from '../components/account/applications/applications.component';\r\nimport {PersonalComponent} from '../components/account/personal/personal.component';\r\nimport {PrivacyComponent} from '../components/account/privacy/privacy.component';\r\nimport {AboutComponent} from '../components/general/about/about.component';\r\nimport {ContactsComponent} from '../components/general/contacts/contacts.component';\r\nimport {ApplicationComponent} from '../components/account/application/application.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  { path: 'register', component: RegisterComponent},\r\n  { path: 'login', component: LoginComponent},\r\n  { path: 'account', component: AccountComponent, canActivate: [AuthGuard]},\r\n  { path:  'error', component: ErrorComponent},\r\n  { path:  'add', component: AddComponent, canActivate: [AuthGuard]},\r\n  { path:  'applications', component: ApplicationsComponent, canActivate: [AuthGuard]},\r\n  { path:  'applications/:id', component: ApplicationComponent, canActivate: [AuthGuard]},\r\n  { path:  'personal', component: PersonalComponent, canActivate: [AuthGuard]},\r\n  { path:  'privacy', component: PrivacyComponent, canActivate: [AuthGuard]},\r\n  { path:  'about', component: AboutComponent},\r\n  { path:  'contacts', component: ContactsComponent},\r\n  // { path:  '**', redirectTo: '/error'}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule {\r\n\r\n}\r\n","import {ActivatedRouteSnapshot, CanActivate, CanActivateChild, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {Observable, of} from 'rxjs';\r\nimport {Injectable} from '@angular/core';\r\nimport {AuthService} from '../services/auth.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AuthGuard implements CanActivate, CanActivateChild {\r\n\r\n  constructor(\r\n    private auth: AuthService,\r\n    private router: Router) {\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n    if (this.auth.isAuthenticated()) {\r\n      return of(true)\r\n    }\r\n    else {\r\n      this.router.navigate(['/login'])\r\n      return of(false)\r\n    }\r\n  }\r\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n    return this.canActivate(route, state)\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'applicant'\n})\nexport class ApplicantPipe implements PipeTransform {\n\n  transform(value: string): string {\n    return value === 'UL' ? 'Юридическое лицо' : 'Индивидуальный предприниматель';\n  }\n\n}\n\n@Pipe({\n  name: 'mode'\n})\nexport class ModePipe implements PipeTransform {\n\n  transform(value: string): string {\n    return value === 'electric' ? 'Электронная форма' : 'Самостоятельно';\n  }\n\n}\n\n@Pipe({\n  name: 'trademark'\n})\nexport class TrademarkPipe implements PipeTransform {\n\n  transform(value: string): string {\n    if (value === 'word') {\n      return 'Словесный';\n    } else if (value === 'image') {\n      return 'Изобразительный';\n    } else {\n      return 'Комбинированный';\n    }\n  }\n\n}\n\n@Pipe({\n  name: 'status'\n})\nexport class StatusPipe implements PipeTransform {\n\n  transform(value: string): string {\n    switch (value) {\n      case 'created':\n        return 'Создан';\n      case 'waiting':\n        return 'Ожидает оплаты услуг';\n      case 'processing':\n        return 'Подан в обработку';\n      case 'checking':\n        return 'Проверяется';\n      case 'done':\n        return 'Готов';\n      case 'tax':\n        return 'Ожидание оплаты госпошлины';\n      default:\n        return value;\n    }\n  }\n\n}\n\n@Pipe({\n  name: 'options'\n})\nexport class OptionPipe implements PipeTransform {\n\n  transform(value: string): string {\n    switch (value) {\n      case 'fullCheck':\n        return 'Полная проверка товарного знака';\n      case '':\n        return 'Нет';\n      default:\n        return value;\n    }\n  }\n\n}\n\n@Pipe({\n  name: 'doctypes'\n})\nexport class DocTypesPipe implements PipeTransform {\n\n  transform(value: string): string {\n    switch (value) {\n      case 'tax':\n        return 'Квитанция на госпошлину';\n      case 'proxy':\n        return 'Доверенность';\n      case 'permission':\n        return 'Согласие на обработку';\n      default:\n        return value;\n    }\n  }\n\n}\n","import {FormGroup} from '@angular/forms';\r\n\r\nexport class CustomValidators {\r\n  static confirmPassword(group: FormGroup): {[key: string]: boolean} {\r\n    // if (group.get('password') === null) { return null; }\r\n    // if (group.get('confirm') === null) { return null; }\r\n    const pass = group.get('password').value;\r\n    const confirmPass = group.get('confirm').value;\r\n    // group.get('confirm').invalid = true;\r\n    // console.log('проверка', pass, confirmPass);\r\n    return pass === confirmPass ? null : { notSame: true };\r\n  }\r\n}\r\n","import {AuthService} from '../services/auth.service';\r\nimport {Injectable} from '@angular/core';\r\nimport {HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\r\nimport {Observable, throwError} from 'rxjs';\r\nimport {catchError} from 'rxjs/operators';\r\nimport {Router} from '@angular/router';\r\n\r\n@Injectable()\r\n\r\nexport class TokenInterceptor implements HttpInterceptor{\r\n  constructor(\r\n    private auth: AuthService,\r\n    private router: Router) {\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    if (this.auth.isAuthenticated()) {\r\n      req = req.clone({\r\n        setHeaders: {\r\n          Authorization: this.auth.getToken()\r\n        }\r\n      })\r\n    }\r\n    return next.handle(req).pipe(\r\n      catchError((error: HttpErrorResponse) => this.handleAuthError(error))\r\n    )\r\n  }\r\n\r\n  private handleAuthError(error: HttpErrorResponse): Observable<any> {\r\n    if (error.status === 401) {\r\n      this.router.navigate(['/login'], {\r\n        queryParams: {\r\n          expired: true\r\n        }\r\n      })\r\n    }\r\n    return throwError(error)\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\n\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}