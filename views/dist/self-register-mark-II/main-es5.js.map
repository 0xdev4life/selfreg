{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/account/account.component.ts","webpack:///src/app/account/account.component.html","webpack:///src/app/add/add.component.ts","webpack:///src/app/add/add.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth.guard.ts","webpack:///src/app/auth.service.ts","webpack:///src/app/error/error.component.ts","webpack:///src/app/error/error.component.html","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/token.interceptor.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AccountComponent","auth","username","isAuthenticated","getName","split","selector","templateUrl","styleUrls","AddComponent","selectType","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","router","title","opened","potentialToken","localStorage","getItem","potentialName","setToken","setName","navigate","logout","AppModule","provide","multi","useClass","useValue","color","declarations","providers","bootstrap","AuthGuard","route","state","providedIn","AuthService","http","token","userName","user","post","pipe","name","console","log","setItem","clear","ErrorComponent","FooterComponent","HomeComponent","background","registerForm","required","email","password","minLength","aSub","unsubscribe","invalid","disable","register","value","subscribe","queryParams","registered","error","emailExists","enable","submit","LoginComponent","wrongAuth","expired","canLogin","loginForm","params","login","warn","authError","RegisterComponent","TokenInterceptor","next","clone","setHeaders","Authorization","getToken","handle","handleAuthError","status","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../auth.service';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css']\n})\nexport class AccountComponent implements OnInit {\n\n  constructor(\n    private auth: AuthService\n  ) { }\n\n\n\n  username = 'пользователь'\n  ngOnInit(): void {\n    if (this.auth.isAuthenticated()) {\n      this.username = this.auth.getName().split(' ')[0]\n    }\n  }\n\n}\n","<div class=\"block-one\">\n  <div fxFlex=\"20\" fxHide.lt-md=\"true\" fxFlex.lt-lg=\"30\" fxLayout=\"column\">\n<!--    <div [routerLink]=\"['/account']\" fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"content-navigator-item active-link\">-->\n<!--      <mat-icon>perm_identity</mat-icon>-->\n<!--      <span class=\"text-main nav-text\">Главная</span>-->\n<!--    </div>-->\n<!--    <div [routerLink]=\"['/applications']\" fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"content-navigator-item\">-->\n<!--      <mat-icon>library_books</mat-icon>-->\n<!--      <span class=\"text-main nav-text\">Заявки</span>-->\n<!--    </div>-->\n<!--    <div [routerLink]=\"['/personal']\" fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"content-navigator-item\">-->\n<!--      <mat-icon>account_box</mat-icon>-->\n<!--      <span class=\"text-main nav-text\">Личные данные</span>-->\n<!--    </div>-->\n<!--    <div [routerLink]=\"['/security']\" fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"content-navigator-item\">-->\n<!--      <mat-icon>security</mat-icon>-->\n<!--      <span class=\"text-main nav-text\">Безопасность</span>-->\n<!--    </div>-->\n  </div>\n  <div fxFlex=\"60\" fxFlex.lt-md=\"100\" fxFlex.lt-lg=\"55\" class=\"account-content-block\">\n    <div class=\"content-header\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n      <div>\n        <img src=\"assets/images/user-account.png\" style=\"width: 150px; height: 150px\">\n      </div>\n      <div>\n        <span class=\"text-main header\">Добро пожаловать, {{username | titlecase}}</span>\n      </div>\n    </div>\n    <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutAlign=\"center center\">\n      <mat-card>\n        <mat-card-header style=\"padding-top: 15px\">\n          <mat-card-title class=\"card-header\">Текущие заявки: {{0}}</mat-card-title>\n          <mat-card-subtitle class=\"card-subtile\"  style=\"padding-top: 10px\">\n            Узнайте о состоянии своих текущих заявок, их оплате\n          </mat-card-subtitle>\n          <div style=\"margin-bottom: 15px\">\n            <img class=\"card-image\" src=\"assets/images/applications-state.png\">\n          </div>\n        </mat-card-header>\n        <mat-divider></mat-divider>\n        <mat-card-footer class=\"card-footer\" >\n          <div fxLayoutAlign=\"start center\" fxFlexFill [routerLink]=\"['/applications']\" class=\"button alternative-button card-link\">\n            Узнать о состоянии\n          </div>\n        </mat-card-footer>\n\n      </mat-card>\n      <mat-card>\n        <mat-card-header style=\"padding-top: 15px\">\n          <mat-card-title class=\"card-header\">Новая заявка</mat-card-title>\n          <mat-card-subtitle class=\"card-subtile\" style=\"padding-top: 10px\">\n            Подайте новую заявку на товарный знак и укажите все необходимые данные\n          </mat-card-subtitle>\n          <div style=\"margin-bottom: 15px\">\n            <img class=\"card-image\" src=\"assets/images/add-application.png\">\n          </div>\n        </mat-card-header>\n        <mat-divider></mat-divider>\n        <mat-card-footer class=\"card-footer\" >\n          <div fxLayoutAlign=\"start center\" fxFlexFill [routerLink]=\"['/add']\" class=\"button alternative-button card-link\">\n            Подать заявку\n          </div>\n        </mat-card-footer>\n      </mat-card>\n    </div>\n  </div>\n  <div class=\"account-empty-block\" fxFlex=\"20\" fxHide.lt-md=\"true\" fxFlex.lt-lg=\"15\" >\n\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.css']\n})\nexport class AddComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  selectType() {\n\n  }\n}\n","<div class=\"block-one\"  style=\"background: burlywood\">\n  <form style=\"background: indianred\">\n      <mat-horizontal-stepper style=\"height: calc(100vh - 100px); width: auto\" [linear]=\"true\">\n        <!--  Icon overrides      -->\n\n        <!--  /Icon overrides      -->\n        <mat-step state=\"name\">\n          <ng-template matStepLabel class=\"text-main\">\n            Название\n          </ng-template>\n          <ng-template matStepperIcon=\"number\">\n            <mat-icon>insert_drive_file</mat-icon>\n          </ng-template>\n          <div class=\"text-main header\" style=\"padding-top: 25px; padding-bottom: 25px; text-align: center; \">\n            Введите название товарного знака\n          </div>\n          <div style=\"padding-top: 25px; padding-bottom: 25px;\" fxLayoutAlign=\"center center\">\n            <mat-form-field appearance=\"outline\" style=\"width: 350px\">\n              <mat-label>Название</mat-label>\n              <input matInput placeholder=\"Название товарного знака\" required >\n            </mat-form-field>\n          </div>\n          <div fxLayoutAlign=\"end end\">\n            <button mat-raised-button matStepperNext class=\"button primary-button\" type=\"button\">Далее</button>\n          </div>\n        </mat-step>\n        <mat-step state=\"type\">\n          <ng-template matStepLabel>Тип</ng-template>\n          <ng-template matStepperIcon=\"number\">\n            <mat-icon>vibration</mat-icon>\n          </ng-template>\n          <div class=\"text-main header\" style=\"padding-top: 25px; padding-bottom: 25px; text-align: center; \">\n            Выберите тип товарного знака\n          </div>\n          <div fxLayoutAlign=\"center center\">\n            <mat-radio-group  fxLayout=\"row\" fxLayout.lt-md=\"column\">\n              <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n                <div fxHide.lt-md=\"true\" class=\"selector\" (click)=\"radioWord.checked = true\">\n                  <mat-card fxLayout=\"column\" (click)=\"selectType()\" >\n                    <div>\n                      <img src=\"assets/images/sign-os.png\" style=\"width: 200px; height: 200px\">\n                    </div>\n                    <div class=\"text-main card-label\">Словесный</div>\n                  </mat-card>\n                </div>\n                <mat-radio-button #radioWord value=\"word\">\n                  <div style=\"width: 350px\" fxHide=\"true\" fxShow.lt-md=\"true\" >\n                    <mat-card fxLayout=\"row\" (click)=\"selectType()\" >\n                      <div>\n                        <img src=\"assets/images/sign-os-mini.png\" style=\"width: 80px; height: 80px\">\n                      </div>\n                      <div style=\"padding-left: 15px\" fxLayoutAlign=\"center center\" class=\"text-main card-label\">\n                        Словесный\n                      </div>\n                    </mat-card>\n                  </div>\n                </mat-radio-button>\n              </div>\n              <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n                <div fxHide.lt-md=\"true\" class=\"selector\" (click)=\"radioImage.checked = true\">\n                  <mat-card fxLayout=\"column\" (click)=\"selectType()\" >\n                    <div>\n                      <img src=\"assets/images/sign.png\" style=\"width: 200px; height: 200px\">\n                    </div>\n                    <div class=\"text-main card-label\">Изобразительный</div>\n                  </mat-card>\n                </div>\n                <mat-radio-button #radioImage value=\"image\">\n                  <div style=\"width: 350px\" fxHide=\"true\" fxShow.lt-md=\"true\">\n                    <mat-card fxLayout=\"row\" (click)=\"selectType()\" >\n                      <div>\n                        <img src=\"assets/images/sign-mini.png\" style=\"width: 80px; height: 80px\">\n                      </div>\n                      <div style=\"padding-left: 15px\" fxLayoutAlign=\"center center\" class=\"text-main card-label\">\n                        Изобразительный\n                      </div>\n                    </mat-card>\n                  </div>\n                </mat-radio-button>\n              </div>\n              <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n                <div fxHide.lt-md=\"true\" class=\"selector\" (click)=\"radioComplex.checked = true\">\n                  <mat-card  fxLayout=\"column\" (click)=\"selectType()\" >\n                    <div>\n                      <img src=\"assets/images/sign-comb.png\" style=\"width: 200px; height: 200px\">\n                    </div>\n                    <div class=\"text-main card-label\">Комбинированный</div>\n                  </mat-card>\n                </div>\n                <mat-radio-button #radioComplex value=\"complex\">\n                  <div style=\"width: 350px\" fxHide=\"true\" fxShow.lt-md=\"true\" >\n                    <mat-card fxLayout=\"row\" (click)=\"selectType()\" >\n                      <div>\n                        <img src=\"assets/images/sign-comb-mini.png\" style=\"width: 80px; height: 80px\">\n                      </div>\n                      <div style=\"padding-left: 15px\" fxLayoutAlign=\"center center\" class=\"text-main card-label\">\n                        Комбинированный\n                      </div>\n                    </mat-card>\n                  </div>\n                </mat-radio-button>\n              </div>\n            </mat-radio-group>\n          </div>\n          <div class=\"selector\" >\n          </div>\n          <div style=\"padding-top: 25px\" fxLayout=\"row\" fxLayoutAlign=\"end end\">\n            <button mat-button matStepperPrevious class=\"button alternative-button\" type=\"button\">Назад</button>\n            <button mat-raised-button matStepperNext class=\"button primary-button\" type=\"button\">Далее</button>\n          </div>\n        </mat-step>\n        <mat-step state=\"logo\">\n          <ng-template matStepLabel>Логотип</ng-template>\n          <div class=\"text-main header\" style=\"padding-top: 25px; padding-bottom: 25px; text-align: center; \">\n            Загрузите логотип\n          </div>\n          <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n            <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n              <div >\n                Загрузите изображение логотипа, если оно есть\n              </div>\n              <div><button mat-flat-button class=\"button primary-button\">Загрузить</button></div>\n            </div>\n            <div>\n              <h2>Введитеописание логотипа, если оно есть</h2>\n              <mat-form-field appearance=\"outline\" style=\"width: 350px\">\n                <mat-label>Описание</mat-label>\n                <input matInput placeholder=\"Описание логотипа\" required >\n              </mat-form-field>\n            </div>\n          </div>\n          <div fxLayout=\"row\" fxLayoutAlign=\"end end\">\n            <button mat-button matStepperPrevious class=\"button alternative-button\" type=\"button\">Назад</button>\n            <button mat-raised-button matStepperNext class=\"button primary-button\" type=\"button\">Далее</button>\n          </div>\n      </mat-step>\n        <mat-step state=\"colors\">\n          <ng-template matStepLabel>Дополнительно</ng-template>\n          <div style=\"text-align: center\">\n            <h1>Укажите цвета и неохраняемые элементы</h1>\n          </div>\n          <div>\n            <h2>Заявляемые цвета</h2>\n            <mat-form-field appearance=\"outline\" style=\"width: 350px\">\n              <mat-label>Цвета</mat-label>\n              <input matInput placeholder=\"Цвета\" required >\n            </mat-form-field>\n          </div>\n          <div>\n            <h2>Неохраняемые элементы</h2>\n            <mat-form-field appearance=\"outline\" style=\"width: 350px\">\n              <mat-label>Неохраняемые элементы</mat-label>\n              <input matInput placeholder=\"Неохраняемые элементы\" required >\n            </mat-form-field>\n          </div>\n          <div fxLayout=\"row\" fxLayoutAlign=\"end end\">\n            <button mat-button matStepperPrevious color=\"primary\" type=\"button\">Назад</button>\n            <button mat-raised-button matStepperNext color=\"primary\" type=\"button\">Далее</button>\n          </div>\n        </mat-step>\n        <mat-step state=\"classes\">\n          <ng-template matStepLabel>Классы</ng-template>\n          <div style=\"text-align: center\">\n            <h1>Укажите сферу деятельности</h1>\n          </div>\n          <div fxLayout=\"row\" fxLayoutAlign=\"end end\">\n            <button mat-button matStepperPrevious color=\"primary\" type=\"button\">Назад</button>\n            <button mat-raised-button matStepperNext color=\"primary\" type=\"button\">Далее</button>\n          </div>\n        </mat-step>\n        <mat-step state=\"applicant\">\n          <ng-template matStepLabel>Заявитель</ng-template>\n          <div style=\"text-align: center\">\n            <h1>Укажите данные о заявителе</h1>\n          </div>\n          <div fxLayout=\"row\" fxLayoutAlign=\"end end\">\n            <button mat-button matStepperPrevious color=\"primary\" type=\"button\">Назад</button>\n            <button mat-raised-button matStepperNext color=\"primary\" type=\"button\">Далее</button>\n          </div>\n        </mat-step>\n        <mat-step state=\"options\">\n          <ng-template matStepLabel>Опции</ng-template>\n          <div style=\"text-align: center\">\n            <h1>Выберите способ подачи документа</h1>\n          </div>\n          <div fxLayout=\"row\" fxLayoutAlign=\"end end\">\n            <button mat-button matStepperPrevious color=\"primary\" type=\"button\">Назад</button>\n            <button mat-raised-button matStepperNext color=\"primary\" type=\"button\">Далее</button>\n          </div>\n        </mat-step>\n        <mat-step state=\"done\">\n          <ng-template matStepLabel>Готово</ng-template>\n          <div style=\"text-align: center\">\n            <h1>Все готово!</h1>\n          </div>\n          <div fxLayout=\"row\" fxLayoutAlign=\"end end\">\n            <button mat-button matStepperPrevious color=\"primary\" type=\"button\">Назад</button>\n            <button mat-raised-button matStepperNext color=\"primary\" type=\"submit\">Оплатить</button>\n          </div>\n        </mat-step>\n      </mat-horizontal-stepper>\n\n  </form>\n</div>\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {HomeComponent} from './home/home.component';\r\nimport {RegisterComponent} from './register/register.component';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {AccountComponent} from './account/account.component';\r\nimport {ErrorComponent} from './error/error.component';\r\nimport {AddComponent} from './add/add.component';\r\nimport {AuthGuard} from './auth.guard';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  { path: 'register', component: RegisterComponent},\r\n  { path: 'login', component: LoginComponent},\r\n  { path: 'account', component: AccountComponent, canActivate: [AuthGuard]},\r\n  { path:  'error', component: ErrorComponent},\r\n  { path:  'add', component: AddComponent, canActivate: [AuthGuard]}\r\n]\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule {\r\n\r\n}\r\n","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {AuthService} from './auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  constructor(\n    public router: Router,\n    public auth: AuthService\n    ) {\n  }\n  title = 'self-register-mark-II';\n  opened =  false;\n  public username = 'user'\n\n  ngOnInit(): void {\n    const potentialToken = localStorage.getItem('auth-token')\n    const potentialName = localStorage.getItem('username')\n    if (potentialToken !== null) {\n      this.auth.setToken(potentialToken)\n      this.auth.setName(potentialName)\n      this.username = potentialName.split(' ')[0]\n    }\n  }\n\n  goToLogin() {\n    this.router.navigate(['/login'])\n  }\n\n  logout() {\n    this.auth.logout()\n    this.router.navigate(['/'])\n  }\n}\n","<div (window:resize)=\"sidenav.close()\">\n  <mat-toolbar style=\"position: fixed; z-index: 999\" fxLayout=\"row\">\n    <div fxLayout=\"row\" fxFlex=\"10\">\n      <button style=\"height: 40px; width: 40px\" mat-icon-button (click)=\"sidenav.toggle()\" fxHide=\"true\" fxShow.lt-md=\"true\" >\n        <mat-icon>menu</mat-icon>\n      </button>\n      <div class=\"nav-block\" [routerLink]=\"['/']\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n        <img src=\"assets/images/logo.png\" style=\"width: 45px; height: 45px\" *ngIf=\"router.url != '/login'\">\n        <span class=\"text-main nav-item\">Selfreg</span>\n      </div>\n    </div>\n    <div fxFlex=\"70\" style=\"margin-left: 25px\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxShow=\"true\" fxHide.lt-md=\"true\">\n      <div class=\"nav-block\" [routerLink]=\"['/about']\"><span class=\"text-main nav-item\">О нас</span></div>\n      <div class=\"nav-block\" [routerLink]=\"['/contacts']\"><span class=\"text-main nav-item\">Контакты</span></div>\n    </div>\n    <div\n      *ngIf=\"!['/login?authError=true', '/login?expired=true', '/login?registered=true', '/login'].includes(router.url)\"\n      fxLayout=\"row\" fxLayoutAlign=\"end center\" fxFlex=\"20\" fxFlex.lt-md=\"80\">\n      <button [routerLink]=\"['/register']\" class=\"button\" mat-button fxHide.xs=\"true\" *ngIf=\"!auth.isAuthenticated()\">Регистрация</button>\n      <button  mat-raised-button class=\"button primary-button\" *ngIf=\"!auth.isAuthenticated()\" (click)=\"goToLogin()\">Войти</button>\n      <button [routerLink]=\"['/account']\" class=\"button\" mat-button fxHide.xs=\"true\" *ngIf=\"auth.isAuthenticated()\">{{(auth.getName() ? auth.getName().split(' ')[0] : 'user') | titlecase}}</button>\n      <button mat-raised-button class=\"button primary-button\" *ngIf=\"auth.isAuthenticated()\" (click)=\"logout()\">Выйти</button>\n    </div>\n  </mat-toolbar>\n  <mat-sidenav-container style=\"top: 55px\" autosize>\n    <mat-sidenav [autoFocus]=\"false\" #sidenav fxLayout=\"column\" style=\"width: 100%\">\n      <div fxLayout=\"column\" fxHide=\"true\" fxShow.lt-md=\"true\">\n        <div *ngIf=\"auth.isAuthenticated()\">\n          <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n            <img class=\"side-image\" src=\"assets/images/user.png\">\n          </div>\n          <div class=\"text-main header\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n            {{username}}\n          </div>\n          <div  fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\n            <div [routerLink]=\"['/account']\" fxLayout=\"column\" fxLayoutAlign=\"end center\" class=\"side-block\">\n              <img src=\"assets/images/homepage.png\" class=\"side-block-image\">\n              <div class=\"text-main side-item\">Главная</div>\n            </div>\n            <div [routerLink]=\"['/applications']\"  fxLayout=\"column\" fxLayoutAlign=\"end center\" class=\"side-block\">\n              <img src=\"assets/images/document.png\" class=\"side-block-image\">\n              <div class=\"text-main side-item\">Заявки</div>\n            </div>\n          </div>\n          <div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\n            <div [routerLink]=\"['/personal']\"  fxLayout=\"column\" fxLayoutAlign=\"end center\" class=\"side-block\">\n              <img src=\"assets/images/id-card.png\" class=\"side-block-image\">\n              <div class=\"text-main side-item\">Личные данные</div>\n            </div>\n            <div [routerLink]=\"['/security']\" fxLayout=\"column\" fxLayoutAlign=\"end center\" class=\"side-block\">\n              <img src=\"assets/images/shield.png\" class=\"side-block-image\">\n              <div class=\"text-main side-item\">Безопасность</div>\n            </div>\n          </div>\n        </div>\n        <div>\n          <div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\n            <div [routerLink]=\"['/about']\"  fxLayout=\"column\" fxLayoutAlign=\"end center\" class=\"side-block\">\n              <img src=\"assets/images/signs.png\" class=\"side-block-image\">\n              <div class=\"text-main side-item\">О нас</div>\n            </div>\n            <div [routerLink]=\"['/contacts']\" fxLayout=\"column\" fxLayoutAlign=\"end center\" class=\"side-block\">\n              <img src=\"assets/images/contacts.png\" class=\"side-block-image\">\n              <div class=\"text-main side-item\">Контакты</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </mat-sidenav>\n    <mat-sidenav-content fxFlexFill>\n      <div\n        *ngIf=\"['/account', '/applications', '/personal', '/security'].includes(router.url)\"\n        class=\"content-navigator\" fxLayout=\"column\">\n        <div [routerLink]=\"['/account']\" fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"content-navigator-item active-link\">\n          <mat-icon>perm_identity</mat-icon>\n          <span class=\"text-main nav-text\">Главная</span>\n        </div>\n        <div [routerLink]=\"['/applications']\" fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"content-navigator-item\">\n          <mat-icon>library_books</mat-icon>\n          <span class=\"text-main nav-text\">Заявки</span>\n        </div>\n        <div [routerLink]=\"['/personal']\" fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"content-navigator-item\">\n          <mat-icon>account_box</mat-icon>\n          <span class=\"text-main nav-text\">Личные данные</span>\n        </div>\n        <div [routerLink]=\"['/security']\" fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"content-navigator-item\">\n          <mat-icon>security</mat-icon>\n          <span class=\"text-main nav-text\">Безопасность</span>\n        </div>\n      </div>\n      <router-outlet></router-outlet>\n      <app-footer></app-footer>\n    </mat-sidenav-content>\n  </mat-sidenav-container>\n</div>\n\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AccountComponent } from './account/account.component';\nimport { HomeComponent } from './home/home.component';\nimport {AppRoutingModule} from './app-routing.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatIconModule} from '@angular/material/icon';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport { ErrorComponent } from './error/error.component';\nimport {MatInputModule} from '@angular/material/input';\nimport { FooterComponent } from './footer/footer.component';\nimport {MatDividerModule} from '@angular/material/divider';\nimport { AddComponent } from './add/add.component';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {TokenInterceptor} from './token.interceptor';\nimport {MatRadioModule, MAT_RADIO_DEFAULT_OPTIONS} from '@angular/material/radio';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    AccountComponent,\n    HomeComponent,\n    ErrorComponent,\n    FooterComponent,\n    AddComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatIconModule,\n    FlexLayoutModule,\n    MatSidenavModule,\n    MatInputModule,\n    MatDividerModule,\n    MatStepperModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MatRadioModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      multi: true,\n      useClass: TokenInterceptor\n    },\n    {\n      provide: MAT_RADIO_DEFAULT_OPTIONS,\n      useValue: { color: 'primary' },\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {ActivatedRouteSnapshot, CanActivate, CanActivateChild, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {Observable, of} from 'rxjs';\r\nimport {Injectable} from '@angular/core';\r\nimport {AuthService} from './auth.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AuthGuard implements CanActivate, CanActivateChild {\r\n\r\n  constructor(\r\n    private auth: AuthService,\r\n    private router: Router) {\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n    if (this.auth.isAuthenticated()) {\r\n      return of(true)\r\n    }\r\n    else {\r\n      this.router.navigate(['/login'])\r\n      return of(false)\r\n    }\r\n  }\r\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n    return this.canActivate(route, state)\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {NewUser, User} from './interfaces';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {tap} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  private token = null;\r\n  private userName = null;\r\n\r\n  constructor(private http: HttpClient ) {\r\n  }\r\n  register(user: NewUser): Observable<NewUser> {\r\n    return this.http.post<NewUser>('/api/auth/register', user);\r\n  }\r\n\r\n  login(user: User): Observable<{token: string, name: string}> {\r\n    return this.http.post<{token: string, name: string}>('/api/auth/login', user)\r\n      .pipe(\r\n        tap(({token, name}) => {\r\n          console.log(token, name);\r\n          localStorage.setItem('auth-token', token);\r\n          localStorage.setItem('username', name);\r\n          this.setToken(token);\r\n          console.log('смотрим раз', name)\r\n          this.setName(name);\r\n          console.log('смотрим три', this.userName)\r\n        })\r\n      );\r\n  }\r\n\r\n  setToken(token: string) {\r\n    this.token = token;\r\n  }\r\n  getToken(): string {\r\n    return this.token;\r\n  }\r\n  setName(name: string) {\r\n    console.log('смотрим два', name)\r\n    this.userName = name;\r\n  }\r\n  getName(): string {\r\n    return this.userName;\r\n  }\r\n  isAuthenticated(): boolean {\r\n    return !!this.token;\r\n  }\r\n  logout() {\r\n    this.setToken(null);\r\n    this.setName(null);\r\n    localStorage.clear();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div style=\"height: 100%\" div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n  <div class=\"error\"  fxLayoutAlign=\"center\">\n    <img src=\"assets/images/emoji.svg\">\n  </div>\n  <div class=\"error\"  fxLayoutAlign=\"center\">\n    <h1>Ой... а такой страницы нет</h1>\n  </div>\n  <div class=\"error\"  fxLayoutAlign=\"center\">\n    <button mat-raised-button color=\"warn\">Вернуться на главную</button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-divider style=\"margin: 25px\"></mat-divider>\n<div  fxLayout=\"row\" fxLayout.xs=\"column\" style=\"margin-right: 25px; margin-left: 25px; margin-bottom: 25px\">\n  <div fxFlex=\"50\" fxLayoutAlign=\"start\" fxLayoutAlign.xs=\"center\">\n    <div fxLayout=\"row\" fxFlexAlign=\"center center\">\n      <small>© Created by .digital</small>\n    </div>\n  </div>\n  <div fxFlex=\"50\" fxLayoutAlign=\"center\">\n    <div fxLayout=\"row\" fxFlexAlign=\"center center\">\n      <img src=\"assets/images/inst.png\" style=\"width: 25px; height: 25px\">\n    </div>\n  </div>\n  <div fxFlex=\"50\" fxLayoutAlign=\"end\" fxLayoutAlign.xs=\"center\" >\n    <div fxLayout=\"row\" fxFlexAlign=\"center center\">\n\n    </div>\n  </div>\n<!--  <div fxFlex=\"50\"  style=\"margin: auto;position: center\" fxLayout=\"row\" fxFlexAlign=\"center center\">-->\n<!--    Created by .digital-->\n<!--  </div>-->\n<!--  <div fxFlex=\"50\"  fxLayout=\"row\" fxFlexAlign=\"center center\">-->\n<!--    <img src=\"assets/images/inst.png\" style=\"margin: auto;position: center;width: 25px; height: 25px\">-->\n<!--  </div>-->\n<!--  <div fxFlex=\"50\"  style=\"margin: auto;position: center\" fxLayout=\"row\" fxFlexAlign=\"center center\">-->\n<!--    Created by .digital-->\n<!--  </div>-->\n<!--  <img fxFlexAlign=\"center end\" src=\"assets/images/inst.png\" style=\"width: 25px; height: 25px\">-->\n<!--  <div fxFlexAlign=\"end center\">Москва, 2020 г. Created by .digital</div>-->\n</div>\n<!--  <div style=\"margin-bottom: 25px; background: red\" fxLayoutAlign=\"center center\" fxFlex=\"20\"></div>-->\n<!--  <div style=\"margin-bottom: 25px; background: green\" fxLayoutAlign=\"center center\" fxFlex=\"20\">-->\n<!--    <span></span>-->\n<!--    <img src=\"assets/images/inst.png\" style=\"width: 25px; height: 25px\">-->\n<!--    <div>Москва, 2020 г. Created by</div>-->\n<!--  </div>-->\n<!--  <div style=\"margin-bottom: 25px; background: blue\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxFlex=\"20\">-->\n<!--    Москва, 2020 г. Created by-->\n<!--    <a>.digital</a>-->\n<!--  </div>-->\n\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../auth.service';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n\n  registerForm: FormGroup\n  aSub: Subscription\n\n  constructor(\n    private router: Router,\n    private auth: AuthService) { }\n    public background = 'url(assets/images/background-1080-blurry1.png)'\n\n  ngOnInit(): void {\n    if (this.auth.isAuthenticated()) {\n      console.log(true)\n      this.router.navigate(['/account'])\n    } else {\n      this.registerForm = new FormGroup({\n        username : new FormControl(null, [Validators.required]),\n        email    : new FormControl(null, [Validators.required, Validators.email]),\n        password : new FormControl(null, [Validators.required, Validators.minLength(8)])\n      })\n      console.log(false)\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.aSub) {\n      this.aSub.unsubscribe()\n    }\n  }\n\n  submit() {\n    if (this.registerForm.invalid) {\n      console.log('wrong')//this.router.navigate(['/register'])\n    } else {\n      this.registerForm.disable()\n      this.aSub = this.auth.register(this.registerForm.value).subscribe(\n        () => {\n          this.router.navigate(['/login'], {\n            queryParams : {\n              registered: true\n            }\n          })\n        },\n        error => {\n          this.router.navigate(['/register'], {\n            queryParams : {\n              emailExists: true\n            }\n          })\n          this.registerForm.enable()\n        }\n      )\n    }\n\n  }\n}\n","<div class=\"block-one\" style=\"background-image: {{background}}\" fxLayout.lt-md=\"column\" fxLayout.gt-sm=\"row\" fxLayoutAlign=\"space-evenly center\">\n  <div class=\"description\">\n    <div class=\"text-main greetings-header\">\n      Регистрируй самостоятельно\n    </div>\n    <div class=\"text-alternative greetings-text\">\n      SelfReg это сервис, позволяющий тебе самостоятельно регистрировать товарные знаки без мам, пап и кредитов\n    </div>\n  </div>\n  <mat-card class=\"register-card\" fxHide.lt-md=\"true\" fxShow=\"true\">\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"submit()\">\n      <mat-form-field appearance=\"outline\" class=\"text-main\">\n        <mat-label >Ваше имя</mat-label>\n        <input formControlName=\"username\" matInput placeholder=\"Имя\" fxLayoutAlign=\"center\">\n        <mat-error *ngIf=\"registerForm.get('username').invalid && registerForm.get('username').touched\">\n          Поле 'Имя' является обязательным\n        </mat-error>\n      </mat-form-field>\n      <mat-form-field appearance=\"outline\" class=\"text-main\">\n        <mat-label>e-mail</mat-label>\n        <input formControlName=\"email\" type=\"email\" matInput placeholder=\"email\">\n        <mat-error *ngIf=\"registerForm.get('email').invalid && registerForm.get('email').touched\">\n          Введите корректный email\n        </mat-error>\n      </mat-form-field>\n      <mat-form-field appearance=\"outline\" class=\"text-main\">\n        <mat-label>Пароль</mat-label>\n        <input formControlName=\"password\" type=\"password\" matInput placeholder=\"Пароль\">\n        <mat-error *ngIf=\"registerForm.get('password').invalid && registerForm.get('password').touched\">\n          Введите корректный пароль не менее 8 символов\n        </mat-error>\n      </mat-form-field>\n      <button type=\"submit\" class=\"primary-button register-button\" mat-raised-button>Зарегистрироваться</button>\n    </form>\n  </mat-card>\n  <button [routerLink]=\"['/register']\" class=\"primary-button register-button-alt\" mat-flat-button fxHide=\"true\" fxShow.lt-md=\"true\">Зарегистрироваться</button>\n</div>\n","import {Component, ElementRef, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AuthService} from '../auth.service';\nimport {Subscription} from 'rxjs';\nimport {ActivatedRoute, Params, Router} from '@angular/router';\n//\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n\n  loginForm: FormGroup\n  aSub: Subscription\n  wrongAuth = false\n  expired = false\n  canLogin = false\n\n  constructor(\n    private auth: AuthService,\n    private router: Router,\n    private route: ActivatedRoute) {\n\n  }\n\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      email    : new FormControl(null, [Validators.required, Validators.email]),\n      password : new FormControl(null, [Validators.required, Validators.minLength(8)])\n    })\n    this.route.queryParams.subscribe((params: Params ) => {\n      if (params['registered']) {\n        this.canLogin = true\n      }\n      if (params['expired']) {\n        this.expired = true\n      }\n      if (params['authError']) {\n        this.wrongAuth = true\n      }\n    })\n  }\n  ngOnDestroy(): void {\n    console.log(this.aSub)\n    if (this.aSub) {\n      this.aSub.unsubscribe()\n    }\n  }\n\n  submit() {\n    this.loginForm.disable()\n    this.aSub = this.auth.login(this.loginForm.value).subscribe(\n      () => {\n        this.router.navigate(['/account'])\n      },\n      error => {\n        console.warn(error)\n        this.router.navigate(['/login'], {\n          queryParams: {\n            authError: true\n          }\n        })\n        // this.snackBar.open('message', 'OK', {\n        //   duration: 2000,\n        // });\n        // SnackbarService.snack('Неверный логин')  //this.wrongAuth = true// this.openSnackBar('Message archived');\n        this.loginForm.enable()\n      }\n      )\n  }\n\n}\n","<div class=\"block-one\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <mat-card class=\"login-window\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n    <img src=\"assets/images/logo.png\" style=\"height: 45px; width: 45px\">\n    <div class=\"card-header\">\n      Вход\n    </div>\n    <div class=\"text-alternative description\">\n      Используйте свою учетную запись для входа\n    </div>\n    <div class=\"text-alternative announcement-negative\" fxLayoutAlign=\"center center\" *ngIf=\"wrongAuth\">Неверный логин или пароль</div>\n    <div class=\"text-alternative announcement-negative\" fxLayoutAlign=\"center center\" *ngIf=\"expired\">Сеанс закончен, войдите заново</div>\n    <div class=\"text-alternative announcement-positive\" fxLayoutAlign=\"center center\" *ngIf=\"canLogin\">Ура! Теперь вы можете войти</div>\n<!--    <h3 style=\"color: white; background: #c73934; width: 100%; text-align: center\" ></h3>-->\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"submit()\">\n      <mat-form-field  class=\"form-filed text-main\" appearance=\"outline\">\n        <mat-label>e-mail</mat-label>\n        <input formControlName=\"email\" type=\"email\" matInput placeholder=\"email\">\n<!--        <mat-hint style=\"color: white\" *ngIf=\"wrongAuth\">Неверный логин или пароль</mat-hint>-->\n        <mat-error *ngIf=\"loginForm.get('email').invalid && loginForm.get('email').touched\">\n          Введите корректный email\n        </mat-error>\n      </mat-form-field>\n      <mat-form-field  class=\"form-filed text-main\"  appearance=\"outline\">\n        <mat-label>Пароль</mat-label>\n        <input formControlName=\"password\" type=\"password\" matInput placeholder=\"Пароль\">\n        <mat-error *ngIf=\"loginForm.get('password').invalid && loginForm.get('password').touched\">\n          Введите корректный пароль не менее 8 символов\n        </mat-error>\n      </mat-form-field>\n      <div class=\"form-filed button alternative-button\" style=\"margin-bottom: 15%; margin-top: 0\">\n        Забыли пароль?\n      </div>\n      <div class=\"form-filed\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n        <div CLASS=\"button alternative-button\" [routerLink]=\"['/register']\">\n          Создать аккаунт\n        </div>\n        <button type=\"submit\" class=\"button primary-button\" mat-raised-button  [disabled]=\"loginForm.invalid || loginForm.disabled\">Войти</button>\n      </div>\n\n    </form>\n  </mat-card>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Subscription} from 'rxjs';\nimport {AuthService} from '../auth.service';\nimport {ActivatedRoute, Params, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit, OnDestroy {\n\n  registerForm: FormGroup\n  aSub: Subscription\n\n  constructor(\n    private auth: AuthService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    this.registerForm = new FormGroup({\n      username : new FormControl(null, [Validators.required]),\n      email    : new FormControl(null, [Validators.required, Validators.email]),\n      password : new FormControl(null, [Validators.required, Validators.minLength(8)])\n    })\n    this.route.queryParams.subscribe((params: Params ) => {\n      // if (params['registered']) {\n      //\n      // }\n    })\n  }\n  ngOnDestroy(): void {\n    if (this.aSub) {\n      this.aSub.unsubscribe()\n    }\n\n  }\n\n  submit() {\n    this.registerForm.disable()\n    this.aSub = this.auth.register(this.registerForm.value).subscribe(\n      () => {\n        this.router.navigate(['/login'], {\n          queryParams : {\n            registered: true\n          }\n        })\n      },\n      error => {\n        this.router.navigate(['/register'], {\n          queryParams : {\n            emailExists: true\n          }\n        })\n        this.registerForm.enable()\n      }\n    )\n  }\n\n}\n","<div class=\"block-one\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <mat-card class=\"register-window\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <div fxFlex.lt-md=\"100\" style=\"width: 350px;\" fxLayout=\"column\" fxLayoutAlign=\"start center\">\n      <div class=\"register-block\">\n        <img src=\"assets/images/logo.png\" style=\"height: 45px; width: 45px\">\n      </div>\n      <div class=\"card-header register-header\">\n        Создайте новый аккаунт\n      </div>\n      <form [formGroup]=\"registerForm\" (ngSubmit)=\"submit()\" class=\"register-block\">\n        <div fxLayout=\"row\">\n          <mat-form-field style=\"width: 100%\" appearance=\"outline\" class=\"text-main\">\n            <mat-label>Имя</mat-label>\n            <input formControlName=\"username\" matInput placeholder=\"Имя\">\n          </mat-form-field>\n        </div>\n        <div>\n          <mat-form-field appearance=\"outline\" class=\"text-main\">\n            <mat-label>e-mail</mat-label>\n            <input formControlName=\"email\" type=\"email\" matInput placeholder=\"email\">\n          </mat-form-field>\n        </div>\n        <div>\n          <mat-form-field class=\"form-filed\" appearance=\"outline\" class=\"text-main\">\n            <mat-label>Пароль</mat-label>\n            <input formControlName=\"password\" type=\"password\"  matInput placeholder=\"Пароль\">\n          </mat-form-field>\n        </div>\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n        <div [routerLink]=\"['/login']\" class=\"button alternative-button\">\n          Войти\n        </div>\n        <button class=\"button primary-button\" type=\"submit\" mat-raised-button [disabled]=\"registerForm.invalid || registerForm.disabled\">Создать</button>\n      </div>\n      </form>\n    </div>\n    <div fxHide.lt-md=\"true\" style=\"width: 350px;\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n      <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n        <img src=\"assets/images/register-logo.png\" style=\"height: 50%; width: 50%\">\n      </div>\n      <div class=\"text-alternative card-description\">\n        Создай аккаунт. Подавай заявки отовсюду. Получай результат\n      </div>\n    </div>\n  </mat-card>\n</div>\n","import {AuthService} from './auth.service';\r\nimport {Injectable} from '@angular/core';\r\nimport {HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\r\nimport {Observable, throwError} from 'rxjs';\r\nimport {catchError} from 'rxjs/operators';\r\nimport {Router} from '@angular/router';\r\n\r\n@Injectable()\r\n\r\nexport class TokenInterceptor implements HttpInterceptor{\r\n  constructor(\r\n    private auth: AuthService,\r\n    private router: Router) {\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    if (this.auth.isAuthenticated()) {\r\n      req = req.clone({\r\n        setHeaders: {\r\n          Authorization: this.auth.getToken()\r\n        }\r\n      })\r\n    }\r\n    return next.handle(req).pipe(\r\n      catchError((error: HttpErrorResponse) => this.handleAuthError(error))\r\n    )\r\n  }\r\n  private handleAuthError(error: HttpErrorResponse): Observable<any> {\r\n    if (error.status === 401) {\r\n      this.router.navigate(['/login'], {\r\n        queryParams: {\r\n          expired: true\r\n        }\r\n      })\r\n    }\r\n    return throwError(error)\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}