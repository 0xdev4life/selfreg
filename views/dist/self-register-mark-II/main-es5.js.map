{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/about/about.component.ts","webpack:///src/app/about/about.component.html","webpack:///src/app/account.service.ts","webpack:///src/app/account/account.component.ts","webpack:///src/app/account/account.component.html","webpack:///src/app/add/add.component.ts","webpack:///src/app/add/add.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/applications/applications.component.ts","webpack:///src/app/applications/applications.component.html","webpack:///src/app/auth.guard.ts","webpack:///src/app/auth.service.ts","webpack:///src/app/class.service.ts","webpack:///src/app/contacts/contacts.component.ts","webpack:///src/app/contacts/contacts.component.html","webpack:///src/app/error/error.component.ts","webpack:///src/app/error/error.component.html","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/personal/personal.component.ts","webpack:///src/app/personal/personal.component.html","webpack:///src/app/privacy/privacy.component.ts","webpack:///src/app/privacy/privacy.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/token.interceptor.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AboutComponent","selector","templateUrl","styleUrls","AccountService","http","application","console","log","post","applicant","get","providedIn","AccountComponent","auth","account","username","appsCount","loaded","aSub","getMain","subscribe","main","name","split","apps","error","logout","unsubscribe","appForm","setValue","AddComponent","router","clsService","accService","_snackBar","foods","value","viewValue","currentPage","pageNames","donePages","pagePosition","knownCategory","canHide","selectedClass","mainClasses","selectedClasses","discount","persons","optionHelpState","classes","status","trademarkName","required","trademarkType","trademarkLogo","trademarkLogoDescription","trademarkColors","trademarkUnsec","trademarkField","trademarkClasses","applicantId","applicantType","applicantName","applicantInn","applicantKpp","applicantOgrn","applicantAddress","applicantHead","applicantCanSave","applicantSavingName","applicationMode","applicationTax","applicationPrice","applicationCheckOption","canMove","snackAction","invalid","length","saveApp","navigate","openSnackBar","window","scroll","mainClass","searchSub","getChildren","upClassSub","ParentId","parentId","getById","res","getUp","calcAppTax","option","controls","part_210","part_240","part_211","part_214","selected","MainclassId","masterCandidate","find","c","Id","ClassId","sClass","Number","Classes","push","candidate","x","message","action","open","duration","postSub","registerApplication","increasePage","routes","path","component","canActivate","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","title","opened","potentialToken","localStorage","getItem","potentialName","setToken","setName","AppModule","provide","multi","useClass","declarations","providers","bootstrap","ApplicationsComponent","adjustGrid","getAllApplications","userApps","columns","innerWidth","AuthGuard","route","state","isAuthenticated","AuthService","token","userName","user","pipe","setItem","clear","ClassService","ContactsComponent","ErrorComponent","FooterComponent","HomeComponent","background","registerForm","email","password","minLength","disable","register","queryParams","registered","emailExists","enable","submit","LoginComponent","wrongAuth","expired","canLogin","loginForm","params","login","warn","authError","PersonalComponent","PrivacyComponent","RegisterComponent","TokenInterceptor","next","clone","setHeaders","Authorization","getToken","handle","handleAuthError","environment","production","bootstrapModule","err"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACIE;;AACE;;AACF;;;;QDCWC,c;;;AAEX,gCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,c;AAAc,K;;;YAAdA,c;AAAc,gC;AAAA,c;AAAA,a;AAAA,yL;AAAA;AAAA;ACP3B;;AACE;;AACE;;AACF;;AACA;;AAGF;;;;AAHO;;AAAA;;;;;;;;;sEDGMA,c,EAAc;cAL1B,uDAK0B;eALhB;AACTC,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;AEP3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWaC,c;;;AAEX,8BAAoBC,IAApB,EAAoC;AAAA;;AAAhB,aAAAA,IAAA,GAAAA,IAAA;AACnB;;;;4CAEmBC,W,EAAwB;AAC1CC,iBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,WAA3B;AACA,iBAAO,KAAKD,IAAL,CAAUI,IAAV,CAA4B,cAA5B,EAA4CH,WAA5C,CAAP;AACD;;;0CAEiBI,S,EAAoB;AACpC,iBAAO,KAAKL,IAAL,CAAUI,IAAV,CAA0B,cAA1B,EAA0CC,SAA1C,CAAP;AACD;;;kCAEM;AACLH,iBAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,iBAAO,KAAKH,IAAL,CAAUM,GAAV,gBAAP;AACD;;;6CAEiB;AAChBJ,iBAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,iBAAO,KAAKH,IAAL,CAAUM,GAAV,qBAAP;AACD;;;;;;;uBAtBUP,c,EAAc,uH;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBAJb;;;;;sEAIDA,c,EAAc;cAL1B,wDAK0B;eALf;AACVQ,oBAAU,EAAE;AADF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;ACX3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;QAWaC,gB;;;AAIX,gCACUC,IADV,EAEUC,OAFV,EAEiC;AAAA;;AADvB,aAAAD,IAAA,GAAAA,IAAA;AACA,aAAAC,OAAA,GAAAA,OAAA;AAKV,aAAAC,QAAA,GAAW,cAAX;AACA,aAAAC,SAAA,GAAY,CAAZ;AACA,aAAAC,MAAA,GAAS,KAAT;AANK;;;;mCAOG;AAAA;;AACN,eAAKC,IAAL,GAAY,KAAKJ,OAAL,CAAaK,OAAb,GAAuBC,SAAvB,CAAiC,UAAAC,IAAI,EAAI;AACnD,iBAAI,CAACN,QAAL,GAAgBM,IAAI,CAACC,IAAL,CAAUC,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CAAhB;AACA,iBAAI,CAACP,SAAL,GAAiBK,IAAI,CAACG,IAAtB,CAFmD,CAGnD;;AACA,iBAAI,CAACP,MAAL,GAAc,IAAd;AACD,WALW,EAKT,UAAAQ,KAAK,EAAI;AACV,gBAAIA,KAAK,CAAC/B,IAAN,KAAe,GAAnB,EAAwB;AACtB,mBAAI,CAACmB,IAAL,CAAUa,MAAV;AACD;AACF,WATW,CAAZ;AAWD;;;sCAEU;AACT,cAAI,KAAKR,IAAT,EAAe;AACb,iBAAKA,IAAL,CAAUS,WAAV;AACD;AACF;;;;;;;uBAhCUf,gB,EAAgB,0H,EAAA,gI;AAAA,K;;;YAAhBA,gB;AAAgB,kC;AAAA,e;AAAA,c;AAAA,ggC;AAAA;AAAA;ACX7B;;AACE;;AAEA;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AAA+B;;;;AAA0C;;AAC3E;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AACA;;AACA;;AACE;;AACE;;AACF;;AACF;;AACF;;AAEF;;AACA;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AACA;;AACE;;AACE;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AAGF;;;;AA1DyD;;AAAA;;AAClB;;AAAA;;AAIvB;;AAAA;;AACH;;AAAA;;AAIG;;AAAA;;AAayC;;AAAA;;AAOzC;;AAAA;;AACH;;AAAA;;AAgB4C;;AAAA;;;;;;;;;;sED5C5CA,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACTZ,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEX7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC8BM;;AACE;;AACE;;AACF;;AAEA;;AACE;;AACE;;AACE;;AAAW;;AAAQ;;AACnB;;AACF;;AACF;;AAEF;;AACF;;;;;;;;AAGA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAGE;;AACE;;AAA0C;AAAA;;AAAA;;AAAA,gCAA6B,IAA7B;AAAiC,SAAjC;;AACxC;;AAAiD;AAAA;;AAAA;;AAAA,iBAAS,QAAA0B,OAAA,UAAiB,eAAjB,EAAkCC,QAAlC,CAA2C,MAA3C,CAAT;AAA2D,SAA3D;;AAC/C;;AACE;;AACF;;AACA;;AAAkC;;AAAS;;AAC7C;;AACF;;AACA;;AACE;;AACE;;AAAyB;AAAA;;AAAA;;AAAA,iBAAS,QAAAD,OAAA,UAAiB,eAAjB,EAAkCC,QAAlC,CAA2C,MAA3C,CAAT;AAA2D,SAA3D;;AACvB;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AAA0C;AAAA;;AAAA;;AAAA,gCAA8B,IAA9B;AAAkC,SAAlC;;AACxC;;AAAiD;AAAA;;AAAA;;AAAA,iBAAS,QAAAD,OAAA,UAAiB,eAAjB,EAAkCC,QAAlC,CAA2C,OAA3C,CAAT;AAA4D,SAA5D;;AAC/C;;AACE;;AACF;;AACA;;AAAkC;;AAAe;;AACnD;;AACF;;AACA;;AACE;;AACE;;AAAyB;AAAA;;AAAA;;AAAA,iBAAS,QAAAD,OAAA,UAAiB,eAAjB,EAAkCC,QAAlC,CAA2C,OAA3C,CAAT;AAA4D,SAA5D;;AACvB;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AAA0C;AAAA;;AAAA;;AAAA,gCAAgC,IAAhC;AAAoC,SAApC;;AACxC;;AAAiD;AAAA;;AAAA;;AAAA,iBAAS,QAAAD,OAAA,UAAiB,eAAjB,EAAkCC,QAAlC,CAA2C,SAA3C,CAAT;AAA8D,SAA9D;;AAC/C;;AACE;;AACF;;AACA;;AAAkC;;AAAe;;AACnD;;AACF;;AACA;;AACE;;AACE;;AAAyB;AAAA;;AAAA;;AAAA,iBAAS,QAAAD,OAAA,UAAiB,eAAjB,EAAkCC,QAAlC,CAA2C,SAA3C,CAAT;AAA8D,SAA9D;;AACvB;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AAEF;;;;;;;;AAGA;;AACE;;AACE;;AACF;;AACA;;AAAuC;;AAAe;;AACtD;;AACE;;AACQ;AAAA;;AAAA;;AAAA;AAAA;;AACN;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AAEA;;AACA;;AACE;;AAAgF;AAAA;;AAAA;;AAAA,sCAAsB,kIAAtB,EAAiD,IAAjD;AAAqD,SAArD;;AAC9E;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAQ;;AACnB;;AACF;;AACF;;AACF;;AACF;;;;;;;;AAGA;;AACE;;AACE;;AACF;;AACA;;AAAuC;;AAAe;;AACtD;;AACE;;AACQ;AAAA;;AAAA;;AAAA;AAAA;;AACN;;AACF;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAK;;AAChB;;AACF;;AACF;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAQ;;AACnB;;AACF;;AACF;;AACF;;AACF;;;;;;AAiBE;;AACE;;AACF;;;;;;;;AACA;;AACE;;AACQ;AAAA;;AAAA;;AAAA,yCAAyB,KAAzB;AAA8B,SAA9B;;AACN;;AACF;;AACA;;AACQ;AAAA;;AAAA;;AAAA;AAAA;;AACN;;AACF;;AACF;;;;;;AAEA;;AACE;;AACF;;;;;;;;AAuBU;;AACsC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACpC;;AACF;;;;;;AADE;;AAAA;;;;;;;;AA2BE;;AAIE;;AAEK;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACH;;AACE;;AACF;;AACF;;AACA;;AACE;;AAAwB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACtB;;AAAU;;AAAiB;;AAC7B;;AACF;;AACF;;;;;;AARM;;AAAA;;;;;;AAiBpB;;AACE;;AACF;;;;;;;;AAuBY;;AAEE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AAAwB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACtB;;AAAU;;AAAM;;AAClB;;AACF;;AACF;;AACF;;;;;;AATQ;;AAAA;;;;;;;;AArBd;;AAEE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AAAwB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACtB;;AAAU;;AAAM;;AAClB;;AACF;;AACF;;AACA;;AACE;;AACE;;AAeF;;AACF;;AACF;;;;;;AA5BQ;;AAAA;;AAYE;;AAAA;;;;;;AAvBhB;;AAIE;;AACE;;AACE;;AAkCF;;AACF;;AACF;;;;;;AAnCU;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AArHZ;;AACE;;AACE;;AACF;;AAEA;;AACE;;AACE;;AACE;;AAAW;;AAAgB;;AAC3B;;AACF;;AACF;;AACF;;AAEA;;AAGA;;AAWA;;AAGA;;AAGE;;AAGE;;AACE;;AACE;;AAEE;;AAAW;;AAAa;;AACxB;;AACA;;AACE;;AAAoB;;AAAM;;AAC5B;;AACF;;AACF;;AACA;;AACE;;AAIE;;AAIF;;AAEA;;AAEA;;AAKE;;AACE;;AAAwB;AAAA;;AAAA;;AAAA;AAAA;;AACtB;;AAAU;;AAAc;;AAC1B;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AAAoC;;AAA6C;;AACjF;;AAAgD;;AAA4C;;AAC9F;;AACA;;AAAuC;AAAA;;AAAA;;AAAA;AAAA;;AACrC;;AAAU;;AAAiB;;AAC7B;;AACF;;AACA;;AAiBF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AAEA;;AAGA;;AA2CF;;;;;;AA3IO;;AAAA;;AAGA;;AAAA;;AAWA;;AAAA;;AAIH;;AAAA,0JAAgC,SAAhC,EAAgC,sEAAhC;;AAGG;;AAAA,0JAAgC,SAAhC,EAAgC,yGAAhC;;AAKK;;AAAA;;AASG;;AAAA;;AACA;;AAIE;;AAAA;;AAKwB;;AAAA;;AAAlB;;AAGR;;AAAA;;AAAqB;;AACrB;;AAYyC;;AAAA;;AACY;;AAAA;;AAQhD;;AAAA;;AAuBb;;AAAA;;AAIA;;AAAA;;;;;;AAmEG;;AACE;;AACF;;;;;;AAFuC;;AACrC;;AAAA;;;;;;AAmBN;;AACE;;AAAW;;AAAI;;AACf;;AACF;;;;;;AAKA;;AACE;;AAAW;;AAAoB;;AAC/B;;AACF;;;;;;AAIA;;AACE;;AAAW;;AAAkB;;AAC7B;;AACF;;;;;;AA5DN;;AACE;;AACE;;AACF;;AAEA;;AACE;;AACE;;AACE;;AAAW;;AAAsB;;AACjC;;AACE;;AACE;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAgB;;AAC3B;;AACE;;AAGF;;AACF;;AACA;;AACE;;AAAW;;AAA8D;;AACzE;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAG;;AACd;;AACF;;AACA;;AACE;;AAAW;;AAAG;;AACd;;AACF;;AACF;;AAEA;;AAIA;;AACE;;AAAW;;AAAyD;;AACpE;;AACF;;AACA;;AAIA;;AACE;;AAAwE;;AAAmB;;AAC7F;;AACA;;AAIF;;AACF;;AACF;;;;;;;;;;AApDY;;AAAA;;AAWU;;AAAA;;AAMH;;AAAA;;AAcG;;AAAA;;AAKH;;AAAA;;AAGG;;AAAA;;AAOA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAStB;;AACE;;AACE;;AACF;;AAEA;;AACE;;AACF;;AACA;;AACE;;AAC8E;AAAA;;AAAA;;AAAA;AAAA;;AAC5E;;AAEE;;AACE;;AAA0D;;AAAc;;AACxE;;AACE;;AACF;;AACA;;AACA;;AACE;;AACF;;AACF;;AACF;;AACA;;AAEE;;AACE;;AAA0D;;AAAiB;;AAC3E;;AACE;;AACF;;AACA;;AACA;;AACE;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACc;AAAA;;AAAA;;AAAA;AAAA,WAA6B,QAA7B,EAA6B;AAAA;;AAAA;;AAAA;AAAA,SAA7B;;AACZ;;AACE;;AAAqC;;AAA+B;;AACpE;;AACE;;AAGF;;AACA;;AACA;;AACE;;AACF;;AACF;;AACF;;AACF;;AAEF;;;;;;AAhDwB;;AAAA,yJAAkC,SAAlC,EAAkC,sEAAlC;;AAGmC;;AAAA,0JAAkC,SAAlC,EAAkC,sEAAlC;;AAUnC;;AAAA,0JAAkC,SAAlC,EAAkC,sEAAlC;;AAGmC;;AAAA,0JAAkC,SAAlC,EAAkC,sEAAlC;;AAgBzC;;AAAA;;;;;;AAmBlB;;AACE;;AACE;;AACF;;AAEA;;AACE;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAoC;;AAAe;;AACnD;;AACE;;AACF;;AACA;;AACE;;AAA6B;;AAAQ;;AACrC;;AAAoC;;AAAsC;;AAC5E;;AACA;;AACE;;AAA6B;;AAAG;;AAChC;;AACE;;AACF;;AACF;;AACA;;AACE;;AAA6B;;AAAQ;;AACrC;;AAAoC;;AAAiD;;AACvF;;AACA;;AACE;;AACE;;AAA6B;;AAAK;;AACpC;;AACA;;AACE;;AAA6B;;AAAqB;;AACpD;;AACF;;AACA;;AACE;;AACE;;AAAoC;;AAAwC;;AAC9E;;AACA;;AACE;;AAAoC;;AAAuC;;AAC7E;;AACF;;AACA;;AACE;;AAA6B;;AAAM;;AACnC;;AACE;;AACE;;AAAI;;AAAmF;;AACvF;;AAAI;;AAAO;;AACX;;AAAI;;AAAO;;AACb;;AACF;;AACF;;AACA;;AACE;;AACE;;AAA6B;;AAAa;;AAC5C;;AACA;;AACE;;AAA6B;;AAAgB;;AAC/C;;AACF;;AACA;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AAAqC;;AAA0E;;AACjH;;AACF;;AACA;;AACE;;AAA6B;;AAAiB;;AAC9C;;AAAoC;;AAAuC;;AAC7E;;AACA;;AACF;;AACA;;AACA;;AACA;;AACE;;AAAoC;;AAAkB;;AACtD;;AACE;;AAA6B;;AAAG;;AAChC;;AAAoC;;AAAsC;;AAC5E;;AACA;;AACE;;AAA6B;;AAAe;;AAC5C;;AAAoC;;AAAsC;;AAC5E;;AACA;;AACE;;AACE;;AAA6B;;AAAG;;AAChC;;AAAoC;;AAAqC;;AAC3E;;AACA;;AACE;;AAA6B;;AAAG;;AAChC;;AAAoC;;AAAqC;;AAC3E;;AACF;;AACA;;AACE;;AAA6B;;AAAI;;AACjC;;AAAoC;;AAAsC;;AAC5E;;AACA;;AACE;;AAA6B;;AAAK;;AAClC;;AAAoC;;AAAyC;;AAC/E;;AACA;;AACE;;AAA6B;;AAAG;;AAChC;;AAAoC;;AAAsC;;AAC5E;;AACF;;AACF;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AAAwD;;AAAQ;;AAClE;;AACF;;;;;;AA5G8C;;AAAA;;AAKlC;;AAAA;;AAKkC;;AAAA;;AAYE;;AAAA;;AAGA;;AAAA;;AAwBlC;;AAAA;;AAImC;;AAAA;;AAKH;;AAAA;;AAUA;;AAAA;;AAIA;;AAAA;;AAKE;;AAAA;;AAIA;;AAAA;;AAKF;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAS1C;;AAAA;;;;;;;;AAWF;;AAEQ;AAAA;;AAAA;;AAAA;AAAA;;AACN;;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QD7lBKC,Y;;;AAcX,4BACSC,MADT,EAEUC,UAFV,EAGUC,UAHV,EAIUpB,IAJV,EAKUqB,SALV,EAKgC;AAAA;;AAJvB,aAAAH,MAAA,GAAAA,MAAA;AACC,aAAAC,UAAA,GAAAA,UAAA;AACA,aAAAC,UAAA,GAAAA,UAAA;AACA,aAAApB,IAAA,GAAAA,IAAA;AACA,aAAAqB,SAAA,GAAAA,SAAA;AAVV,aAAAC,KAAA,GAAgB,CACd;AAACC,eAAK,EAAE,IAAR;AAAcC,mBAAS,EAAE;AAAzB,SADc,EAEd;AAACD,eAAK,EAAE,IAAR;AAAcC,mBAAS,EAAE;AAAzB,SAFc,CAAhB,CAUgC,CAGhC;;AACO,aAAAC,WAAA,GAAc,EAAd;AACC,aAAAC,SAAA,GAAY,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,OAAzB,EAAkC,SAAlC,EAA6C,QAA7C,EAAuD,SAAvD,EAAkE,MAAlE,CAAZ;AACD,aAAAC,SAAA,GAAY,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,CAAZ;AACC,aAAAC,YAAA,GAAe,CAAf;AACD,aAAAC,aAAA,GAAgB,IAAhB;AACA,aAAAC,OAAA,GAAU,KAAV;AACA,aAAAC,aAAA,GAAgB,IAAhB;AACA,aAAAC,WAAA,GAAc,IAAd;AACA,aAAAC,eAAA,GAAkB,IAAlB;AACC,aAAAC,QAAA,GAAW,KAAX;AAED,aAAAC,OAAA,GAAU,CAAC,QAAD,EAAW,MAAX,CAAV;AACP,aAAAC,eAAA,GAAkB,KAAlB;AAfK;;;;mCAgBG;AAAA;;AACN,eAAK/B,IAAL,GAAY,KAAKc,UAAL,CAAgBb,OAAhB,GAA0BC,SAA1B,CAAoC,UAAA8B,OAAO,EAAI;AACzD,kBAAI,CAACL,WAAL,GAAmBK,OAAnB;AACD,WAFW,EAGV,UAAAzB,KAAK,EAAI;AACTnB,mBAAO,CAACC,GAAR,CAAYkB,KAAZ;;AACA,gBAAIA,KAAK,CAAC0B,MAAN,KAAiB,GAArB,EAA0B;AACxB,oBAAI,CAACtC,IAAL,CAAUa,MAAV;AACD;AACA,WARS,CAAZ;AASA,eAAKE,OAAL,GAAe,IAAI,wDAAJ,CAAc;AAC3BwB,yBAAa,EAAG,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,CAAC,0DAAWC,QAAZ,CAAtB,CADW;AAE3BC,yBAAa,EAAG,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,CAAC,0DAAWD,QAAZ,CAAtB,CAFW;AAG3BE,yBAAa,EAAG,IAAI,0DAAJ,CAAgB,IAAhB,CAHW;AAI3BC,oCAAwB,EAAG,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,CAAC,0DAAWH,QAAZ,CAAtB,CAJA;AAK3BI,2BAAe,EAAG,IAAI,0DAAJ,CAAgB,IAAhB,CALS;AAM3BC,0BAAc,EAAG,IAAI,0DAAJ,CAAgB,IAAhB,CANU;AAO3BC,0BAAc,EAAG,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,CAAC,0DAAWN,QAAZ,CAAtB,CAPU;AAQ3BO,4BAAgB,EAAG,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWP,QAAZ,CAApB,CARQ;AAS3BQ,uBAAW,EAAG,IAAI,0DAAJ,CAAgB,IAAhB,CATa;AAU3BC,yBAAa,EAAG,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,CAAC,0DAAWT,QAAZ,CAAtB,CAVW;AAW3BU,yBAAa,EAAG,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,CAAC,0DAAWV,QAAZ,CAAtB,CAXW;AAY3BW,wBAAY,EAAG,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,CAAC,0DAAWX,QAAZ,CAAtB,CAZY;AAa3BY,wBAAY,EAAG,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,CAAC,0DAAWZ,QAAZ,CAAtB,CAbY;AAc3Ba,yBAAa,EAAG,IAAI,0DAAJ,CAAgB,IAAhB,CAdW;AAe3BC,4BAAgB,EAAG,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,CAAC,0DAAWd,QAAZ,CAAtB,CAfQ;AAgB3Be,yBAAa,EAAG,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,CAAC,0DAAWf,QAAZ,CAAtB,CAhBW;AAiB3BgB,4BAAgB,EAAG,IAAI,0DAAJ,CAAgB,KAAhB,CAjBQ;AAkB3BC,+BAAmB,EAAG,IAAI,0DAAJ,CAAgB,IAAhB,CAlBK;AAmB3BC,2BAAe,EAAG,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,CAAC,0DAAWlB,QAAZ,CAAtB,CAnBS;AAoB3BmB,0BAAc,EAAG,IAAI,0DAAJ,CAAgB,CAAhB,EAAmB,CAAC,0DAAWnB,QAAZ,CAAnB,CApBU;AAqB3BoB,4BAAgB,EAAG,IAAI,0DAAJ,CAAgB,CAAhB,EAAmB,CAAC,0DAAWpB,QAAZ,CAAnB,CArBQ;AAsB3BqB,kCAAsB,EAAG,IAAI,0DAAJ,CAAgB,KAAhB,EAAuB,CAAC,0DAAWrB,QAAZ,CAAvB;AAtBE,WAAd,CAAf;AAwBA,eAAKf,WAAL,GAAmB,KAAKC,SAAL,CAAe,KAAKE,YAApB,CAAnB,CAlCM,CAmCN;AACD;;;uCAEc;AACb,cAAIkC,OAAO,GAAG,IAAd;AACA,cAAIC,WAAW,GAAG,EAAlB,CAFa,CAGb;AACA;;AACA,kBAAQ,KAAKnC,YAAb;AACE,iBAAK,CAAL;AACEkC,qBAAO,GAAG,CAAC,KAAK/C,OAAL,CAAalB,GAAb,CAAiB,eAAjB,EAAkCmE,OAA7C;AACAD,yBAAW,GAAG,4BAAd;AACA;;AACF,iBAAK,CAAL;AACED,qBAAO,GAAG,CAAC,KAAK/C,OAAL,CAAalB,GAAb,CAAiB,eAAjB,EAAkCmE,OAA7C;AACAD,yBAAW,GAAG,wBAAd;AACA;;AACF,iBAAK,CAAL;AACE;;AACF,iBAAK,CAAL;AACE;;AACF,iBAAK,CAAL;AACE,kBAAI,KAAKhD,OAAL,CAAalB,GAAb,CAAiB,kBAAjB,EAAqC0B,KAArC,CAA2C0C,MAA3C,KAAsD,CAA1D,EAA6D;AAC3DH,uBAAO,GAAG,KAAV;AACAC,2BAAW,GAAG,uCAAd;AACD;;AACD,kBAAI,KAAKhD,OAAL,CAAalB,GAAb,CAAiB,gBAAjB,EAAmCmE,OAAvC,EAAgD;AAC9CF,uBAAO,GAAG,KAAV;AACAC,2BAAW,GAAG,uCAAd;AACD;;AACD,kBAAI,KAAKhD,OAAL,CAAalB,GAAb,CAAiB,kBAAjB,EAAqC0B,KAArC,CAA2C0C,MAA3C,KAAsD,CAAtD,IAA2D,KAAKlD,OAAL,CAAalB,GAAb,CAAiB,gBAAjB,EAAmCmE,OAAlG,EAA2G;AACzGF,uBAAO,GAAG,KAAV;AACAC,2BAAW,GAAG,oEAAd;AACD;;AACD;;AACF,iBAAK,CAAL;AACEA,yBAAW,GAAG,qCAAd;;AACA,kBAAI,KAAKhD,OAAL,CAAalB,GAAb,CAAiB,eAAjB,EAAkCmE,OAAtC,EAA+C;AAC7CF,uBAAO,GAAG,KAAV;AACD;;AACD,kBAAI,KAAK/C,OAAL,CAAalB,GAAb,CAAiB,eAAjB,EAAkCmE,OAAtC,EAA+C;AAC7CF,uBAAO,GAAG,KAAV;AACD;;AACD,kBAAI,KAAK/C,OAAL,CAAalB,GAAb,CAAiB,cAAjB,EAAiCmE,OAArC,EAA8C;AAC5CF,uBAAO,GAAG,KAAV;AACD;;AACD,kBAAI,KAAK/C,OAAL,CAAalB,GAAb,CAAiB,cAAjB,EAAiCmE,OAArC,EAA8C;AAC5CF,uBAAO,GAAG,KAAV;AACD;;AACD,kBAAI,KAAK/C,OAAL,CAAalB,GAAb,CAAiB,eAAjB,EAAkC0B,KAAlC,KAA4C,IAAhD,EAAsD;AACpD,oBAAI,KAAKR,OAAL,CAAalB,GAAb,CAAiB,eAAjB,EAAkCmE,OAAtC,EAA+C;AAC7CF,yBAAO,GAAG,KAAV;AACD;AACF;;AACD,kBAAI,KAAK/C,OAAL,CAAalB,GAAb,CAAiB,eAAjB,EAAkC0B,KAAlC,KAA4C,IAAhD,EAAsD;AACpD,oBAAI,KAAKR,OAAL,CAAalB,GAAb,CAAiB,eAAjB,EAAkCmE,OAAtC,EAA+C;AAC7CF,yBAAO,GAAG,KAAV;AACD;AACF;;AACD,kBAAI,KAAK/C,OAAL,CAAalB,GAAb,CAAiB,kBAAjB,EAAqC0B,KAAzC,EAAgD;AAC9C,oBAAI,KAAKR,OAAL,CAAalB,GAAb,CAAiB,qBAAjB,EAAwCmE,OAA5C,EAAqD;AACnDF,yBAAO,GAAG,KAAV;AACD;AACF;;AACD;;AACF,iBAAK,CAAL;AACEA,qBAAO,GAAG,CAAC,KAAK/C,OAAL,CAAalB,GAAb,CAAiB,iBAAjB,EAAoCmE,OAA/C;AACAD,yBAAW,GAAG,sCAAd;AACA;AA5DJ;;AA+DA,cAAID,OAAJ,EAAa;AACX,gBAAI,KAAKlC,YAAL,GAAoB,CAAxB,EAA2B;AAEzB,mBAAKD,SAAL,CAAe,KAAKC,YAApB,IAAoC,IAApC;AACA,mBAAKA,YAAL;AACA,mBAAKH,WAAL,GAAmB,KAAKC,SAAL,CAAe,KAAKE,YAApB,CAAnB;AAED,aAND,MAMO;AACL;AACA,mBAAKsC,OAAL;AACA,mBAAKhD,MAAL,CAAYiD,QAAZ,CAAqB,CAAC,eAAD,CAArB;AACD;AACF,WAZD,MAYO;AACL,iBAAKC,YAAL,CAAkBL,WAAlB,EAA+B,IAA/B;AACD;AAGF;;;uCAEc;AACbM,gBAAM,CAACC,MAAP,CAAc,CAAd,EAAiB,CAAjB;;AACA,cAAI,KAAK1C,YAAL,GAAoB,CAAxB,EAA2B;AACzB,iBAAKA,YAAL;AACA,iBAAKH,WAAL,GAAmB,KAAKC,SAAL,CAAe,KAAKE,YAApB,CAAnB;AACD,WAHD,MAGO,CAEN;AACF;;;qCAEY,CAEZ;;;6CAEoB;AACnB,eAAKC,aAAL,GAAqB,KAArB;AACD;;;oCAEW5C,E,EAAYsF,S,EAAkB;AAAA;;AACxC,eAAKC,SAAL,GAAiB,KAAKrD,UAAL,CAAgBsD,WAAhB,CAA4BxF,EAA5B,EAAgCsB,SAAhC,CAA0C,UAAA8B,OAAO,EAAI;AACpE;AACA,kBAAI,CAACJ,eAAL,GAAuBI,OAAvB;AACD,WAHgB,CAAjB;AAIA,eAAKP,OAAL,GAAe,IAAf,CALwC,CAMxC;;AACA,eAAKC,aAAL,GAAqBwC,SAArB,CAPwC,CAQxC;AACD;;;sCAIU;AAET,cAAI,KAAKlE,IAAT,EAAe,KAAKA,IAAL,CAAUS,WAAV;AACf,cAAI,KAAK0D,SAAT,EAAoB,KAAKA,SAAL,CAAe1D,WAAf;AACpB,cAAI,KAAK4D,UAAT,EAAqB,KAAKA,UAAL,CAAgB5D,WAAhB;AACtB;;;mCAEU;AAAA;;AACT,cAAI,KAAKiB,aAAL,CAAmB4C,QAAnB,KAAgC,GAApC,EAAyC;AACvC,iBAAK7C,OAAL,GAAe,KAAf;AACA,iBAAKC,aAAL,GAAqB,IAArB;AACD,WAHD,MAGO;AACL,gBAAM6C,QAAQ,GAAG,KAAK7C,aAAL,CAAmB4C,QAApC;AACAlF,mBAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BkF,QAA1B;AACA,iBAAKF,UAAL,GAAkB,KAAKvD,UAAL,CAAgB0D,OAAhB,CAAwBD,QAAxB,EACfrE,SADe,CACL,UAAAuE,GAAG,EAAI;AAChB,oBAAI,CAAC/C,aAAL,GAAqB+C,GAArB;AACD,aAHe,CAAlB;AAIArF,mBAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,KAAKqC,aAAL,CAAmB4C,QAA7C;AACA,iBAAKH,SAAL,GAAiB,KAAKrD,UAAL,CAAgB4D,KAAhB,CAAsB,KAAKhD,aAAL,CAAmB4C,QAAzC,EAAmDpE,SAAnD,CAA6D,UAAA8B,OAAO,EAAI;AACvF,oBAAI,CAACJ,eAAL,GAAuBI,OAAvB;AACD,aAFgB,CAAjB;AAGD;AAEA;;;sCAEW;AACZ,cAAMG,QAAQ,GAAG,KAAKzB,OAAL,CAAalB,GAAb,CAAiB,iBAAjB,EAAoC0B,KAApC,KAA8C,OAA9C,GAAwD,GAAxD,GAA8D,IAA/E;;AACA,cAAIiB,QAAQ,KAAK,GAAjB,EAAsB;AACpB,iBAAKN,QAAL,GAAgB,IAAhB;AACA,iBAAK8C,UAAL;AACD;;AACD,cAAMC,MAAM,GAAG,KAAKlE,OAAL,CAAalB,GAAb,CAAiB,wBAAjB,EAA2C0B,KAA3C,GAAmD,IAAnD,GAA0D,CAAzE;AACA,eAAKR,OAAL,CAAamE,QAAb,CAAsB,kBAAtB,EAA0ClE,QAA1C,CAAmDwB,QAAQ,GAAGyC,MAA9D;AACD;;;qCACY;AACX,cAAM5C,OAAO,GAAG,KAAKtB,OAAL,CAAalB,GAAb,CAAiB,kBAAjB,EAAqC0B,KAArC,CAA2C0C,MAA3D;;AACA,cAAI5B,OAAO,GAAG,CAAd,EAAiB;AACf,gBAAI8C,QAAQ,GAAG,QAAQ9C,OAAO,GAAG,CAAV,GAAc,CAAd,GAAkB,CAACA,OAAO,GAAG,CAAX,IAAgB,IAAlC,GAAyC,CAAjD,CAAf;AACA,gBAAI+C,QAAQ,GAAG,QAAU/C,OAAO,GAAG,IAAnC;AACA,gBAAIgD,QAAQ,GAAG,SAAShD,OAAO,GAAG,CAAV,GAAc,CAAd,GAAkB,CAACA,OAAO,GAAG,CAAX,IAAgB,IAAlC,GAAyC,CAAlD,CAAf;AACA,gBAAIiD,QAAQ,GAAG,IAAf;;AACA,gBAAI,KAAKpD,QAAT,EAAmB;AACjBiD,sBAAQ,GAAGA,QAAQ,GAAG,GAAtB;AACAC,sBAAQ,GAAGA,QAAQ,GAAG,GAAtB;AACAC,sBAAQ,GAAGA,QAAQ,GAAG,GAAtB;AACAC,sBAAQ,GAAGA,QAAQ,GAAG,GAAtB;AACD;;AACD,iBAAKvE,OAAL,CAAamE,QAAb,CAAsB,gBAAtB,EAAwClE,QAAxC,CAAiDmE,QAAQ,GAAGC,QAAX,GAAsBC,QAAtB,GAAiCC,QAAlF;AACD;AAGF;;;iCAEQC,Q,EAAiB;AACxB;AACA,cAAIA,QAAQ,CAACC,WAAT,KAAyB,GAA7B,EAAkC;AAChC,gBAAMC,eAAe,GAAG,KAAK1E,OAAL,CAAamE,QAAb,CAAsB,kBAAtB,EAA0C3D,KAA1C,CAAgDmE,IAAhD,CAAqD,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACC,EAAF,KAASL,QAAQ,CAACM,OAAtB;AAAA,aAAtD,CAAxB,CADgC,CAEhC;;AACA,gBAAI,CAACJ,eAAL,EAAsB;AACpB,kBAAMK,MAAM,GAAoB;AAC9BF,kBAAE,EAAEL,QAAQ,CAACM,OADiB;AAE9BE,sBAAM,EAAER,QAAQ,CAACQ,MAFa;AAG9BC,uBAAO,EAAE;AAHqB,eAAhC;AAKA,mBAAKjF,OAAL,CAAamE,QAAb,CAAsB,kBAAtB,EAA0C3D,KAA1C,CAAgD0E,IAAhD,CAAqDH,MAArD;AACD;AACF,WAXD,MAWO;AACL;AACA,gBAAMI,SAAS,GAAG,KAAKnF,OAAL,CAAamE,QAAb,CAAsB,kBAAtB,EAA0C3D,KAA1C,CAAgDmE,IAAhD,CAAqD,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACC,EAAF,KAASL,QAAQ,CAACC,WAAtB;AAAA,aAAtD,CAAlB;;AACA,gBAAIU,SAAJ,EAAe;AACb;AACA,kBAAIA,SAAS,CAACF,OAAV,CAAkB/B,MAAlB,GAA2B,CAA/B,EAAkC;AAChC;AACA,oBAAI,CAACiC,SAAS,CAACF,OAAV,CAAkBN,IAAlB,CAAuB,UAAAS,CAAC;AAAA,yBAAIA,CAAC,CAACN,OAAF,KAAcN,QAAQ,CAACM,OAA3B;AAAA,iBAAxB,CAAL,EAAkE;AAChEK,2BAAS,CAACF,OAAV,CAAkBC,IAAlB,CAAuBV,QAAvB;AACD;AACF;AACF,aARD,MAQO;AACL;AACA;AACA,kBAAMO,OAAM,GAAoB;AAC9BF,kBAAE,EAAEL,QAAQ,CAACC,WADiB;AAE9BO,sBAAM,EAAE,EAFsB;AAG9BC,uBAAO,EAAE,CAACT,QAAD;AAHqB,eAAhC,CAHK,CAQL;;AACA,mBAAKb,UAAL,GAAkB,KAAKvD,UAAL,CAAgB0D,OAAhB,CAAwBU,QAAQ,CAACC,WAAjC,EACfjF,SADe,CACL,UAAAuE,GAAG,EAAI;AAChBgB,uBAAM,CAACC,MAAP,GAAgBjB,GAAG,CAACiB,MAApB;AACD,eAHe,CAAlB,CATK,CAaL;;AACA,mBAAKhF,OAAL,CAAamE,QAAb,CAAsB,kBAAtB,EAA0C3D,KAA1C,CAAgD0E,IAAhD,CAAqDH,OAArD;AACD;AACF;;AACD,eAAKd,UAAL;AACAvF,iBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,KAAKqB,OAAL,CAAamE,QAAb,CAAsB,kBAAtB,EAA0C3D,KAArE;AACD;;;oCACWgE,Q,EAAiB;AAC3B;AACA;AACA;AACA;AACA,eAAKP,UAAL;AACD;;;qCACYoB,O,EAAiBC,M,EAAgB;AAC5C,eAAKhF,SAAL,CAAeiF,IAAf,CAAoBF,OAApB,EAA6BC,MAA7B,EAAqC;AACnCE,oBAAQ,EAAE;AADyB,WAArC;AAGD;;;kCACS;AACR;AACA,eAAKC,OAAL,GAAe,KAAKpF,UAAL,CAAgBqF,mBAAhB,CAAoC,KAAK1F,OAAL,CAAaQ,KAAjD,EAAwDhB,SAAxD,CACb,YAAM,CACL,CAFY,EAEV,UAAAK,KAAK,EAAI;AACVnB,mBAAO,CAACC,GAAR,CAAY,oBAAZ;AACD,WAJY,CAAf;AAMD;;;;;;;uBAtTUuB,Y,EAAY,uH,EAAA,4H,EAAA,gI,EAAA,0H,EAAA,wI;AAAA,K;;;YAAZA,Y;AAAY,8B;AAAA,e;AAAA,e;AAAA,6tV;AAAA;AAAA;ACpBzB;;AACE;;AAOE;;AACE;;AAAU;;AAAU;;AACtB;;AACF;;AACA;;AACE;;AACE;;AAAsC;;AAAgB;;AACtD;;AAAqC;;AAAgD;;AACvF;;AACA;;AACE;;AAAqC;;AAAkB;;AACvD;;AAAqC;;AAA2C;;AAClF;;AACA;;AACE;;AAAqC;;AAAgB;;AACrD;;AAAqC;;AAA6C;;AACpF;;AACF;;AAEA;;AACE;;AAEE;;AAiBA;;AAiFA;;AAyCA;;AAoCA;;AA4JA;;AAkEA;;AA+DA;;AAgIF;;AACA;;AACE;;AACE;;AAKF;;AACA;;AACE;;AAQE;;AAAgE;;AAAQ;;AAC1E;;AACA;;AAMA;;AAQE;;AAAgE;;AAAG;;AACrE;;AACA;;AAOA;;AAQE;;AAAgE;;AAAO;;AACzE;;AACA;;AAMA;;AAQE;;AAAgE;;AAAa;;AAC/E;;AACA;;AAMA;;AAQE;;AAAgE;;AAAM;;AACxE;;AACA;;AAMA;;AAQE;;AAAgE;;AAAS;;AAC3E;;AACA;;AAMA;;AAQE;;AAAgE;;AAAK;;AACvE;;AACA;;AAMA;;AAOE;;AAAgE;;AAAM;;AACxE;;AACF;;AACA;;AACE;;AAEQ;AAAA,mBAAS,IAAAyF,YAAA,EAAT;AAAuB,WAAvB;;AACN;;AACF;;AACF;;AACF;;AACF;;AACF;;;;AAtvBI;;AAAA,sJAEE,eAFF,EAEE,sEAFF;;AAMwB;;AAAA;;AAI4B;;AAAA;;AAGb;;AAAA;;AAEL;;AAAA;;AAEK;;AAAA;;AAEL;;AAAA;;AAEK;;AAAA;;AAInC;;AAAA;;AAGG;;AAAA;;AAiBA;;AAAA;;AAiFA;;AAAA;;AAyCA;;AAAA;;AAoCA;;AAAA;;AA4JA;;AAAA;;AAkEA;;AAAA;;AA+DA;;AAAA;;AAmIK;;AAAA;;AAQA;;AAAA,yKAEI,eAFJ,EAEI,qHAFJ;;AAUK;;AAAA;;AAML;;AAAA,yKAEI,eAFJ,EAEI,qHAFJ;;AAUK;;AAAA;;AAOL;;AAAA,yKAEI,eAFJ,EAEI,qHAFJ;;AAUK;;AAAA;;AAML;;AAAA,yKAEI,eAFJ,EAEI,sHAFJ;;AAUK;;AAAA;;AAML;;AAAA,yKAEI,eAFJ,EAEI,wHAFJ;;AAUK;;AAAA;;AAML;;AAAA,yKAEI,eAFJ,EAEI,uHAFJ;;AAUK;;AAAA;;AAML;;AAAA,yKAEI,eAFJ,EAEI,wHAFJ;;AAUK;;AAAA;;AAML;;AAAA,0KAEI,eAFJ,EAEI,oGAFJ;;AAaN;;AAAA;;;;;;;;;sED/tBGzF,Y,EAAY;cALxB,uDAKwB;eALd;AACT9B,kBAAQ,EAAE,SADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEpBzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAeA,QAAMsH,MAAM,GAAW,CACrB;AAAEC,UAAI,EAAE,EAAR;AAAYC,eAAS,EAAE;AAAvB,KADqB,EAErB;AAAED,UAAI,EAAE,UAAR;AAAoBC,eAAS,EAAE;AAA/B,KAFqB,EAGrB;AAAED,UAAI,EAAE,OAAR;AAAiBC,eAAS,EAAE;AAA5B,KAHqB,EAIrB;AAAED,UAAI,EAAE,SAAR;AAAmBC,eAAS,EAAE,2EAA9B;AAAgDC,iBAAW,EAAE,CAAC,qDAAD;AAA7D,KAJqB,EAKrB;AAAEF,UAAI,EAAG,OAAT;AAAkBC,eAAS,EAAE;AAA7B,KALqB,EAMrB;AAAED,UAAI,EAAG,KAAT;AAAgBC,eAAS,EAAE,+DAA3B;AAAyCC,iBAAW,EAAE,CAAC,qDAAD;AAAtD,KANqB,EAOrB;AAAEF,UAAI,EAAG,cAAT;AAAyBC,eAAS,EAAE,0FAApC;AAA2DC,iBAAW,EAAE,CAAC,qDAAD;AAAxE,KAPqB,EAQrB;AAAEF,UAAI,EAAG,UAAT;AAAqBC,eAAS,EAAE,+EAAhC;AAAmDC,iBAAW,EAAE,CAAC,qDAAD;AAAhE,KARqB,EASrB;AAAEF,UAAI,EAAG,SAAT;AAAoBC,eAAS,EAAE,4EAA/B;AAAiDC,iBAAW,EAAE,CAAC,qDAAD;AAA9D,KATqB,EAUrB;AAAEF,UAAI,EAAG,OAAT;AAAkBC,eAAS,EAAE;AAA7B,KAVqB,EAWrB;AAAED,UAAI,EAAG,UAAT;AAAqBC,eAAS,EAAE;AAAhC,KAXqB,EAYrB;AAAED,UAAI,EAAG,IAAT;AAAeG,gBAAU,EAAE;AAA3B,KAZqB,CAAvB;;QAoBaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAJlB,CAAC,6DAAaC,OAAb,CAAqBN,MAArB,CAAD,CAIkB,EAHjB,4DAGiB;;;;0HAAhBK,gB,EAAgB;AAAA;AAAA,kBAHjB,4DAGiB;AAAA,O;AAHL,K;;;;;sEAGXA,gB,EAAgB;cAL5B,sDAK4B;eALnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBN,MAArB,CAAD,CADD;AAER3H,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAKmB,Q;;;;;;;;;;;;;;;;;;ACnC7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACOQ;;;;;;;;;;AAWF;;AAAgH;;AAAW;;;;AAAnH;;;;;;;;AACR;;AAAyF;AAAA;;AAAA;;AAAA;AAAA;;AAAsB;;AAAK;;;;;;;;;;AACpH;;AAA8G;;;;AAAwE;;;;;;AAA9K;;AAAsG;;AAAA;;;;;;;;AAC9G;;AAAuF;AAAA;;AAAA;;AAAA;AAAA;;AAAmB;;AAAK;;;;;;AANjH;;AAGE;;AACA;;AACA;;AACA;;AACF;;;;;;AAJkF;;AAAA;;AACvB;;AAAA;;AACsB;;AAAA;;AACvB;;AAAA;;;;;;;;;;;;;;;;;;;;AAOtD;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AAAiG;AAAA;;AAAA;;AAAA;;AAAA,iBAAS,YAAT;AAAyB,SAAzB;;AAC/F;;AACA;;AAAiC;;AAAO;;AAC1C;;AACA;;AAAuG;AAAA;;AAAA;;AAAA;;AAAA,iBAAS,YAAT;AAAyB,SAAzB;;AACrG;;AACA;;AAAiC;;AAAM;;AACzC;;AACF;;AACA;;AACE;;AAAmG;AAAA;;AAAA;;AAAA;;AAAA,iBAAS,YAAT;AAAyB,SAAzB;;AACjG;;AACA;;AAAiC;;AAAa;;AAChD;;AACA;;AAAkG;AAAA;;AAAA;;AAAA;;AAAA,iBAAS,YAAT;AAAyB,SAAzB;;AAChG;;AACA;;AAAiC;;AAAY;;AAC/C;;AACF;;AACF;;;;;;AAtBI;;AAAA;;AAGK;;AAAA;;AAIA;;AAAA;;AAMA;;AAAA;;AAIA;;AAAA;;;;;;;;;;;;;;;;AAsBX;;AAIE;;AAGE;;AAAU;;AAAa;;AACvB;;AAAiC;;AAAO;;AAC1C;;AACA;;AAGE;;AAAU;;AAAa;;AACvB;;AAAiC;;AAAM;;AACzC;;AACA;;AAGE;;AAAU;;AAAW;;AACrB;;AAAiC;;AAAa;;AAChD;;AACA;;AAGE;;AAAU;;AAAQ;;AAClB;;AAAiC;;AAAY;;AAC/C;;AACF;;;;AAxBO;;AAAA,sJAA2B,yBAA3B,EAA2B,qEAA3B;;AAMA;;AAAA;;AAMA;;AAAA;;AAMA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;QDrFAmI,Y;;;AACX,4BACSjG,MADT,EAESlB,IAFT,EAE0B;AAAA;;AADjB,aAAAkB,MAAA,GAAAA,MAAA;AACA,aAAAlB,IAAA,GAAAA,IAAA;AAGT,aAAAoH,KAAA,GAAQ,uBAAR;AACA,aAAAC,MAAA,GAAU,KAAV;AACO,aAAAnH,QAAA,GAAW,MAAX;AAHN;;;;mCAKO;AACN,cAAMoH,cAAc,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAvB;AACA,cAAMC,aAAa,GAAGF,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAtB;;AACA,cAAIF,cAAc,KAAK,IAAvB,EAA6B;AAC3B,iBAAKtH,IAAL,CAAU0H,QAAV,CAAmBJ,cAAnB;AACA,iBAAKtH,IAAL,CAAU2H,OAAV,CAAkBF,aAAlB;AACA,iBAAKvH,QAAL,GAAgBuH,aAAa,CAAC/G,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CAAhB;AACD;AACF;;;oCAEW;AACV,eAAKQ,MAAL,CAAYiD,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACD;;;iCAEQ;AACP,eAAKnE,IAAL,CAAUa,MAAV;AACA,eAAKK,MAAL,CAAYiD,QAAZ,CAAqB,CAAC,GAAD,CAArB;AACD;;;;;;;uBA3BUgD,Y,EAAY,uH,EAAA,0H;AAAA,K;;;YAAZA,Y;AAAY,+B;AAAA,e;AAAA,c;AAAA,8pF;AAAA;AAAA;;;ACTzB;;AAAK;AAAA;;AAAA;;AAAA,mBAAiB,WAAjB;AAAgC,WAAhC,EAAgC,KAAhC,EAAgC,6DAAhC;;AACH;;AACE;;AACE;;AAA0D;AAAA;;AAAA;;AAAA,mBAAS,YAAT;AAAyB,WAAzB;;AACxD;;AAAU;;AAAI;;AAChB;;AACA;;AACE;;AACA;;AAAiC;;AAAO;;AAC1C;;AACF;;AACA;;AACE;;AAAiD;;AAAiC;;AAAK;;AAAO;;AAC9F;;AAAoD;;AAAiC;;AAAQ;;AAAO;;AACtG;;AACA;;AAQF;;AACA;;AAEE;;AACE;;AACE;;AA4BA;;AACE;;AACE;;AAAgG;AAAA;;AAAA;;AAAA,mBAAS,YAAT;AAAyB,WAAzB;;AAC9F;;AACA;;AAAiC;;AAAK;;AACxC;;AACA;;AAAkG;AAAA;;AAAA;;AAAA,mBAAS,YAAT;AAAyB,WAAzB;;AAChG;;AACA;;AAAiC;;AAAQ;;AAC3C;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AA6BA;;AACA;;AACF;;AACF;;AAGF;;;;AArG6B;;AAAA;;AAC+C;;AAAA;;AAK/C;;AAAA;;AACA;;AAAA;;AAGvB;;AAAA;;AAYO;;AAAA;;AA8BI;;AAAA;;AAIA;;AAAA;;AAWT;;AAAA;;;;;;;;;;sEDhEKA,Y,EAAY;cALxB,uDAKwB;eALd;AACThI,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;;;;;AETzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,2E,CAuCA;;;QAkDauI,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBATT,CACT;AACEC,eAAO,EAAE,uEADX;AAEEC,aAAK,EAAE,IAFT;AAGEC,gBAAQ,EAAE;AAHZ,OADS,C;AAMV,gBA7BQ,CACP,uEADO,EAEP,2DAFO,EAGP,mEAHO,EAIP,sEAJO,EAKP,qEALO,EAMP,6FANO,EAOP,sEAPO,EAQP,yEARO,EASP,2EATO,EAUP,qEAVO,EAWP,qEAXO,EAYP,2EAZO,EAaP,uEAbO,EAcP,2EAdO,EAeP,uEAfO,EAgBP,qEAhBO,EAiBP,yEAjBO,EAkBP,6EAlBO,EAmBP,8EAnBO,EAoBP,8EApBO,CAqBP;AArBO,OA6BR;;;;0HAGUH,S,EAAS;AAAA,uBA9ClB,2DA8CkB,EA7ClB,qEA6CkB,EA5ClB,8EA4CkB,EA3ClB,2EA2CkB,EA1ClB,kEA0CkB,EAzClB,sEAyCkB,EAxClB,wEAwCkB,EAvClB,+DAuCkB,EAtClB,qEAsCkB,EArClB,+EAqCkB,EApClB,2FAoCkB,EAnClB,+EAmCkB,EAlClB,4EAkCkB;AAlCF,kBAGhB,uEAHgB,EAIhB,2DAJgB,EAKhB,mEALgB,EAMhB,sEANgB,EAOhB,qEAPgB,EAQhB,6FARgB,EAShB,sEATgB,EAUhB,yEAVgB,EAWhB,2EAXgB,EAYhB,qEAZgB,EAahB,qEAbgB,EAchB,2EAdgB,EAehB,uEAfgB,EAgBhB,2EAhBgB,EAiBhB,uEAjBgB,EAkBhB,qEAlBgB,EAmBhB,yEAnBgB,EAoBhB,6EApBgB,EAqBhB,8EArBgB,EAsBhB,8EAtBgB,CAuBhB;AAvBgB;AAkCE,O;;;;;;sEAATA,S,EAAS;cAhDrB,sDAgDqB;eAhDZ;AACRI,sBAAY,EAAE,CACZ,2DADY,EAEZ,qEAFY,EAGZ,8EAHY,EAIZ,2EAJY,EAKZ,kEALY,EAMZ,sEANY,EAOZ,wEAPY,EAQZ,+DARY,EASZ,qEATY,EAUZ,+EAVY,EAWZ,2FAXY,EAYZ,+EAZY,EAaZ,4EAbY,CADN;AAgBRd,iBAAO,EAAE,CACP,uEADO,EAEP,2DAFO,EAGP,mEAHO,EAIP,sEAJO,EAKP,qEALO,EAMP,6FANO,EAOP,sEAPO,EAQP,yEARO,EASP,2EATO,EAUP,qEAVO,EAWP,qEAXO,EAYP,2EAZO,EAaP,uEAbO,EAcP,2EAdO,EAeP,uEAfO,EAgBP,qEAhBO,EAiBP,yEAjBO,EAkBP,6EAlBO,EAmBP,8EAnBO,EAoBP,8EApBO,CAqBP;AArBO,WAhBD;AAuCRe,mBAAS,EAAE,CACT;AACEJ,mBAAO,EAAE,uEADX;AAEEC,iBAAK,EAAE,IAFT;AAGEC,oBAAQ,EAAE;AAHZ,WADS,CAvCH;AA8CRG,mBAAS,EAAE,CAAC,2DAAD;AA9CH,S;AAgDY,Q;;;;;;;;;;;;;;;;;;ACzFtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACmBM;;AACE;;AAIF;;;;;;AACA;;AACE;;AAIF;;;;;;AAEE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACE;;AACF;;AACA;;AACE;;;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACA;;AACE;;AAAuC;;AAAG;;AAC1C;;AACE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACA;;AACE;;AAAuC;;AAAS;;AAChD;;AAA8C;;AAAsB;;AACtE;;AACF;;AACA;;AACA;;AACE;;AACE;;AACF;;AACA;;AACE;;AAAuC;;AAAM;;AAC7C;;AAA8C;;AAAc;;AAC9D;;AACF;;AACF;;AACF;;AACF;;;;;;AA3Ce;;AAAA;;AAIH;;AAAA;;AAGA;;AAAA;;AAWA;;AAAA;;AAU4C;;AAAA;;AAUA;;AAAA;;;;;;;;;;;;;;QD/DnDC,qB;;;AAQX,qCACUlI,OADV,EAEUD,IAFV,EAE2B;AAAA;;AADjB,aAAAC,OAAA,GAAAA,OAAA;AACA,aAAAD,IAAA,GAAAA,IAAA;AAGV,aAAAI,MAAA,GAAS,KAAT;AAFK;;;;mCAIG;AAAA;;AACN,eAAKgI,UAAL;AACA,eAAK/H,IAAL,GAAY,KAAKJ,OAAL,CAAaoI,kBAAb,GAAkC9H,SAAlC,CAA4C,UAAAI,IAAI,EAAI;AAC9DlB,mBAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBiB,IAApB;AACA,kBAAI,CAAC2H,QAAL,GAAgB3H,IAAhB;AACA,kBAAI,CAACP,MAAL,GAAc,IAAd;AACD,WAJW,EAIT,UAAAQ,KAAK,EAAI;AACV,gBAAIA,KAAK,CAAC0B,MAAN,KAAiB,GAArB,EAA0B;AACxB,oBAAI,CAACtC,IAAL,CAAUa,MAAV;AACD;AACF,WARW,CAAZ;AASD;;;qCAEY;AACX,eAAK0H,OAAL,GAAgBlE,MAAM,CAACmE,UAAP,GAAoB,GAArB,GAA4B,GAA5B,IAAmC,CAAlD;AACA/I,iBAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B,KAAK6I,OAAlC,EAA2ClE,MAAM,CAACmE,UAAlD,EAFW,CAEmD;AAC/D;;;;;;;uBA/BUL,qB,EAAqB,gI,EAAA,0H;AAAA,K;;;YAArBA,qB;AAAqB,uC;AAAA;AAAA;;;;;;;;;;;;;;;ACZlC;;AACE;;AACA;;AACE;;AACE;;AACF;;AACA;;AAAiF;AAAA,mBAAiB,IAAAC,UAAA,EAAjB;AAA6B,WAA7B,EAA6B,KAA7B,EAA6B,6DAA7B;;AAC/E;;AACE;;AACE;;AACE;;AACA;;AACE;;AACF;;AACF;;AAEF;;AAEF;;AACA;;AAMA;;AAMA;;AACE;;AAiDF;;AAEF;;AAEF;;AACA;;AACF;;;;AAjFyC;;AAAA;;AACpB;;AAAA;;AACH;;AAAA;;AACH;;AAAA;;AAUM;;AAAA;;AAMA;;AAAA;;AAOiB;;AAAA;;;;;;;;;;sEDpBzBD,qB,EAAqB;cANjC,uDAMiC;eANvB;AACThJ,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAMuB,Q;;;;;;;;gBAE/B,uD;iBAAU,M,EAAQ;AAAC,sBAAQ;AAAT,W;;;;;;;;;;;;;;;;;;;;AEbrB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaoJ,S;;;AAEX,yBACUzI,IADV,EAEUkB,MAFV,EAE0B;AAAA;;AADhB,aAAAlB,IAAA,GAAAA,IAAA;AACA,aAAAkB,MAAA,GAAAA,MAAA;AACT;;;;oCAEWwH,K,EAA+BC,K,EAA0B;AACnE,cAAI,KAAK3I,IAAL,CAAU4I,eAAV,EAAJ,EAAiC;AAC/B,mBAAO,gDAAG,IAAH,CAAP;AACD,WAFD,MAGK;AACH,iBAAK1H,MAAL,CAAYiD,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACA,mBAAO,gDAAG,KAAH,CAAP;AACD;AACF;;;yCACgBuE,K,EAA+BC,K,EAA0B;AACxE,iBAAO,KAAK7B,WAAL,CAAiB4B,KAAjB,EAAwBC,KAAxB,CAAP;AACD;;;;;;;uBAlBUF,S,EAAS,iH,EAAA,8G;AAAA,K;;;aAATA,S;AAAS,eAATA,SAAS,K;AAAA,kBAHR;;;;;sEAGDA,S,EAAS;cAJrB,wDAIqB;eAJV;AACV3I,oBAAU,EAAE;AADF,S;AAIU,Q;;;;;;;;;;;;;;;;;;;;;;;;ACVtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASa+I,W;;;AAKX,2BAAoBtJ,IAApB,EAAoC;AAAA;;AAAhB,aAAAA,IAAA,GAAAA,IAAA;AAHZ,aAAAuJ,KAAA,GAAQ,IAAR;AACA,aAAAC,QAAA,GAAW,IAAX;AAGP;;;;iCACQC,I,EAAa;AACpB,iBAAO,KAAKzJ,IAAL,CAAUI,IAAV,CAAwB,oBAAxB,EAA8CqJ,IAA9C,CAAP;AACD;;;8BAEKA,I,EAAU;AAAA;;AACd,iBAAO,KAAKzJ,IAAL,CAAUI,IAAV,CAA8C,iBAA9C,EAAiEqJ,IAAjE,EACJC,IADI,CAEH,2DAAI,gBAAmB;AAAA,gBAAjBH,KAAiB,QAAjBA,KAAiB;AAAA,gBAAVrI,IAAU,QAAVA,IAAU;AACrB8G,wBAAY,CAAC2B,OAAb,CAAqB,YAArB,EAAmCJ,KAAnC;AACAvB,wBAAY,CAAC2B,OAAb,CAAqB,UAArB,EAAiCzI,IAAjC;;AACA,kBAAI,CAACiH,QAAL,CAAcoB,KAAd;;AACA,kBAAI,CAACnB,OAAL,CAAalH,IAAb;AACD,WALD,CAFG,CAAP;AASD;;;iCAEQqI,K,EAAe;AACtB,eAAKA,KAAL,GAAaA,KAAb;AACD;;;mCACO;AACN,iBAAO,KAAKA,KAAZ;AACD;;;gCACOrI,I,EAAc;AACpB,eAAKsI,QAAL,GAAgBtI,IAAhB;AACD;;;kCACM;AACL,iBAAO,KAAKsI,QAAZ;AACD;;;0CACc;AACb,iBAAO,CAAC,CAAC,KAAKD,KAAd;AACD;;;iCACQ;AACP,eAAKpB,QAAL,CAAc,IAAd;AACA,eAAKC,OAAL,CAAa,IAAb;AACAJ,sBAAY,CAAC4B,KAAb;AACD;;;;;;;uBA1CUN,W,EAAW,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACV/I,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;ACTxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUasJ,Y;;;AAEX;AAEA,4BACU7J,IADV,EAC0B;AAAA;;AAAhB,aAAAA,IAAA,GAAAA,IAAA;AAEP;;;;kCAEI;AACL,iBAAO,KAAKA,IAAL,CAAUM,GAAV,cAAP;AACD;;;oCACWZ,E,EAAU;AACpB,iBAAO,KAAKM,IAAL,CAAUM,GAAV,+BAA8CZ,EAA9C,EAAP;AACD;;;gCACOA,E,EAAU;AAChB,iBAAO,KAAKM,IAAL,CAAUM,GAAV,sBAAmCZ,EAAnC,EAAP;AACD;;;8BACKA,E,EAAU;AACd,iBAAO,KAAKM,IAAL,CAAUM,GAAV,yBAAwCZ,EAAxC,EAAP;AACD;;;;;;;uBApBUmK,Y,EAAY,uH;AAAA,K;;;aAAZA,Y;AAAY,eAAZA,YAAY,K;AAAA,kBAHX;;;;;sEAGDA,Y,EAAY;cAJxB,wDAIwB;eAJb;AACVtJ,oBAAU,EAAE;AADF,S;AAIa,Q;;;;;;;;;;;;;;;;;;;;;;ACVzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACIE;;AACE;;AACF;;;;QDCWuJ,iB;;;AAEX,mCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,iB;AAAiB,K;;;YAAjBA,iB;AAAiB,mC;AAAA,c;AAAA,a;AAAA,yL;AAAA;AAAA;ACP9B;;AACE;;AACE;;AACF;;AACA;;AAGF;;;;AAHO;;AAAA;;;;;;;;;sEDGMA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTlK,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;AEP9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;QAOaiK,c;;;AAEX,gCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,c;AAAc,K;;;YAAdA,c;AAAc,gC;AAAA,c;AAAA,a;AAAA,0T;AAAA;AAAA;ACP3B;;AACE;;AACE;;AACF;;AACA;;AACE;;AAAI;;AAA0B;;AAChC;;AACA;;AACE;;AAA2E;;AAAoB;;AACjG;;AACF;;;;AAFY;;AAAA;;;;;;;;;sEDDCA,c,EAAc;cAL1B,uDAK0B;eALhB;AACTnK,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;AEP3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOakK,e;;;AAEX,iCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,e;AAAe,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,a;AAAA,2d;AAAA;AAAA;ACP5B;;AACA;;AACE;;AACE;;AACE;;AAAO;;AAAqB;;AAC9B;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AAGF;;AAYF;;;;;;;;;sEDrBaA,e,EAAe;cAL3B,uDAK2B;eALjB;AACTpK,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;AEP5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACcQ;;AACE;;AACF;;;;;;AAKA;;AACE;;AACF;;;;;;AAKA;;AACE;;AACF;;;;;;;;QDnBKmK,a;;;AAKX,6BACUtI,MADV,EAEUlB,IAFV,EAE6B;AAAA;;AADnB,aAAAkB,MAAA,GAAAA,MAAA;AACA,aAAAlB,IAAA,GAAAA,IAAA;AACD,aAAAyJ,UAAA,GAAa,gDAAb;AADuB;;;;mCAGxB;AACN,cAAI,KAAKzJ,IAAL,CAAU4I,eAAV,EAAJ,EAAiC;AAC/BnJ,mBAAO,CAACC,GAAR,CAAY,IAAZ;AACA,iBAAKwB,MAAL,CAAYiD,QAAZ,CAAqB,CAAC,UAAD,CAArB;AACD,WAHD,MAGO;AACL,iBAAKuF,YAAL,GAAoB,IAAI,wDAAJ,CAAc;AAChCxJ,sBAAQ,EAAG,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,CAAC,0DAAWsC,QAAZ,CAAtB,CADqB;AAEhCmH,mBAAK,EAAM,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,CAAC,0DAAWnH,QAAZ,EAAsB,0DAAWmH,KAAjC,CAAtB,CAFqB;AAGhCC,sBAAQ,EAAG,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,CAAC,0DAAWpH,QAAZ,EAAsB,0DAAWqH,SAAX,CAAqB,CAArB,CAAtB,CAAtB;AAHqB,aAAd,CAApB;AAKApK,mBAAO,CAACC,GAAR,CAAY,KAAZ;AACD;AACF;;;sCAEU;AACT,cAAI,KAAKW,IAAT,EAAe;AACb,iBAAKA,IAAL,CAAUS,WAAV;AACD;AACF;;;iCAEQ;AAAA;;AACP,cAAI,KAAK4I,YAAL,CAAkB1F,OAAtB,EAA+B;AAC7BvE,mBAAO,CAACC,GAAR,CAAY,OAAZ,EAD6B,CACT;AACrB,WAFD,MAEO;AACL,iBAAKgK,YAAL,CAAkBI,OAAlB;AACA,iBAAKzJ,IAAL,GAAY,KAAKL,IAAL,CAAU+J,QAAV,CAAmB,KAAKL,YAAL,CAAkBnI,KAArC,EAA4ChB,SAA5C,CACV,YAAM;AACJ,oBAAI,CAACW,MAAL,CAAYiD,QAAZ,CAAqB,CAAC,QAAD,CAArB,EAAiC;AAC/B6F,2BAAW,EAAG;AACZC,4BAAU,EAAE;AADA;AADiB,eAAjC;AAKD,aAPS,EAQV,UAAArJ,KAAK,EAAI;AACP,oBAAI,CAACM,MAAL,CAAYiD,QAAZ,CAAqB,CAAC,WAAD,CAArB,EAAoC;AAClC6F,2BAAW,EAAG;AACZE,6BAAW,EAAE;AADD;AADoB,eAApC;;AAKA,oBAAI,CAACR,YAAL,CAAkBS,MAAlB;AACD,aAfS,CAAZ;AAiBD;AAEF;;;;;;;uBAtDUX,a,EAAa,uH,EAAA,0H;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,e;AAAA,a;AAAA,i5B;AAAA;AAAA;ACX1B;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AAAiC;AAAA,mBAAY,IAAAY,MAAA,EAAZ;AAAoB,WAApB;;AAC/B;;AACE;;AAAY;;AAAQ;;AACpB;;AACA;;AAGF;;AACA;;AACE;;AAAW;;AAAM;;AACjB;;AACA;;AAGF;;AACA;;AACE;;AAAW;;AAAM;;AACjB;;AACA;;AAGF;;AACA;;AAA+E;;AAAkB;;AACnG;;AACF;;AACA;;AAAkI;;AAAkB;;AACtJ;;;;AApCuB;;AAUb;;AAAA;;AAIS;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AAOT;;AAAA;;;;;;;;;sEDxBGZ,a,EAAa;cALzB,uDAKyB;eALf;AACTrK,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;;;AEX1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACSI;;AAAoG;;AAAyB;;;;;;AAC7H;;AAAkG;;AAA8B;;;;;;AAChI;;AAAmG;;AAA2B;;;;;;AAO1H;;AACE;;AACF;;;;;;AAKA;;AACE;;AACF;;;;;;ODtBR;;;QAOagL,c;;;AAQX,8BACUrK,IADV,EAEUkB,MAFV,EAGUwH,KAHV,EAGiC;AAAA;;AAFvB,aAAA1I,IAAA,GAAAA,IAAA;AACA,aAAAkB,MAAA,GAAAA,MAAA;AACA,aAAAwH,KAAA,GAAAA,KAAA;AAPV,aAAA4B,SAAA,GAAY,KAAZ;AACA,aAAAC,OAAA,GAAU,KAAV;AACA,aAAAC,QAAA,GAAW,KAAX;AAOC;;;;mCAEO;AAAA;;AACN,eAAKC,SAAL,GAAiB,IAAI,wDAAJ,CAAc;AAC7Bd,iBAAK,EAAM,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,CAAC,0DAAWnH,QAAZ,EAAsB,0DAAWmH,KAAjC,CAAtB,CADkB;AAE7BC,oBAAQ,EAAG,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,CAAC,0DAAWpH,QAAZ,EAAsB,0DAAWqH,SAAX,CAAqB,CAArB,CAAtB,CAAtB;AAFkB,WAAd,CAAjB;AAIA,eAAKnB,KAAL,CAAWsB,WAAX,CAAuBzJ,SAAvB,CAAiC,UAACmK,MAAD,EAAqB;AACpD,gBAAIA,MAAM,CAAC,YAAD,CAAV,EAA0B;AACxB,oBAAI,CAACF,QAAL,GAAgB,IAAhB;AACD;;AACD,gBAAIE,MAAM,CAAC,SAAD,CAAV,EAAuB;AACrB,oBAAI,CAACH,OAAL,GAAe,IAAf;AACD;;AACD,gBAAIG,MAAM,CAAC,WAAD,CAAV,EAAyB;AACvB,oBAAI,CAACJ,SAAL,GAAiB,IAAjB;AACD;AACF,WAVD;AAWD;;;sCACU;AACT7K,iBAAO,CAACC,GAAR,CAAY,KAAKW,IAAjB;;AACA,cAAI,KAAKA,IAAT,EAAe;AACb,iBAAKA,IAAL,CAAUS,WAAV;AACD;AACF;;;iCAEQ;AAAA;;AACP,eAAK2J,SAAL,CAAeX,OAAf;AACA,eAAKzJ,IAAL,GAAY,KAAKL,IAAL,CAAU2K,KAAV,CAAgB,KAAKF,SAAL,CAAelJ,KAA/B,EAAsChB,SAAtC,CACV,YAAM;AACJ,kBAAI,CAACW,MAAL,CAAYiD,QAAZ,CAAqB,CAAC,UAAD,CAArB;AACD,WAHS,EAIV,UAAAvD,KAAK,EAAI;AACPnB,mBAAO,CAACmL,IAAR,CAAahK,KAAb;;AACA,kBAAI,CAACM,MAAL,CAAYiD,QAAZ,CAAqB,CAAC,QAAD,CAArB,EAAiC;AAC/B6F,yBAAW,EAAE;AACXa,yBAAS,EAAE;AADA;AADkB,aAAjC,EAFO,CAOP;AACA;AACA;AACA;;;AACA,kBAAI,CAACJ,SAAL,CAAeN,MAAf;AACD,WAhBS,CAAZ;AAkBD;;;;;;;uBA3DUE,c,EAAc,0H,EAAA,uH,EAAA,+H;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,uyC;AAAA;AAAA;ACZ3B;;AACE;;AACE;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACA;;AACA;;AAEA;;AAA8B;AAAA,mBAAY,IAAAD,MAAA,EAAZ;AAAoB,WAApB;;AAC5B;;AACE;;AAAW;;AAAM;;AACjB;;AAEA;;AAGF;;AACA;;AACE;;AAAW;;AAAM;;AACjB;;AACA;;AAGF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACE;;AACF;;AACA;;AAA4H;;AAAK;;AACnI;;AAEF;;AACF;;AACF;;;;AAhCsF;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAE5E;;AAAA;;AAKS;;AAAA;;AAOA;;AAAA;;AAQ4B;;AAAA;;AAGgC;;AAAA;;;;;;;;;sEDxBlEC,c,EAAc;cAL1B,uDAK0B;eALhB;AACTlL,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEZ3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACOI;;AACE;;AACF;;;;QDFSyL,iB;;;AAEX,mCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,iB;AAAiB,K;;;YAAjBA,iB;AAAiB,mC;AAAA,c;AAAA,a;AAAA,8d;AAAA;AAAA;ACP9B;;AACE;;AACA;;AACE;;AACE;;AACF;;AAEA;;AAIA;;AACE;;AACF;;AACF;;AACA;;AACF;;;;AATS;;AAAA;;;;;;;;;sEDAIA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACT3L,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;AEP9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACMI;;AACE;;AACF;;;;QDDS0L,gB;;;AAEX,kCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,gB;AAAgB,K;;;YAAhBA,gB;AAAgB,kC;AAAA,c;AAAA,a;AAAA,8Y;AAAA;AAAA;ACP7B;;AACE;;AACA;;AACE;;AACE;;AACF;;AACA;;AAGF;;AACA;;AACF;;;;AALS;;AAAA;;;;;;;;;sEDCIA,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACT5L,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;AEP7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;QAWa2L,iB;;;AAKX,iCACUhL,IADV,EAEUkB,MAFV,EAGUwH,KAHV,EAG+B;AAAA;;AAFrB,aAAA1I,IAAA,GAAAA,IAAA;AACA,aAAAkB,MAAA,GAAAA,MAAA;AACA,aAAAwH,KAAA,GAAAA,KAAA;AACL;;;;mCAEG;AACN,eAAKgB,YAAL,GAAoB,IAAI,wDAAJ,CAAc;AAChCxJ,oBAAQ,EAAG,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,CAAC,0DAAWsC,QAAZ,CAAtB,CADqB;AAEhCmH,iBAAK,EAAM,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,CAAC,0DAAWnH,QAAZ,EAAsB,0DAAWmH,KAAjC,CAAtB,CAFqB;AAGhCC,oBAAQ,EAAG,IAAI,0DAAJ,CAAgB,IAAhB,EAAsB,CAAC,0DAAWpH,QAAZ,EAAsB,0DAAWqH,SAAX,CAAqB,CAArB,CAAtB,CAAtB;AAHqB,WAAd,CAApB;AAKA,eAAKnB,KAAL,CAAWsB,WAAX,CAAuBzJ,SAAvB,CAAiC,UAACmK,MAAD,EAAqB,CACpD;AACA;AACA;AACD,WAJD;AAKD;;;sCACU;AACT,cAAI,KAAKrK,IAAT,EAAe;AACb,iBAAKA,IAAL,CAAUS,WAAV;AACD;AAEF;;;iCAEQ;AAAA;;AACP,eAAK4I,YAAL,CAAkBI,OAAlB;AACA,eAAKzJ,IAAL,GAAY,KAAKL,IAAL,CAAU+J,QAAV,CAAmB,KAAKL,YAAL,CAAkBnI,KAArC,EAA4ChB,SAA5C,CACV,YAAM;AACJ,mBAAI,CAACW,MAAL,CAAYiD,QAAZ,CAAqB,CAAC,QAAD,CAArB,EAAiC;AAC/B6F,yBAAW,EAAG;AACZC,0BAAU,EAAE;AADA;AADiB,aAAjC;AAKD,WAPS,EAQV,UAAArJ,KAAK,EAAI;AACP,mBAAI,CAACM,MAAL,CAAYiD,QAAZ,CAAqB,CAAC,WAAD,CAArB,EAAoC;AAClC6F,yBAAW,EAAG;AACZE,2BAAW,EAAE;AADD;AADoB,aAApC;;AAKA,mBAAI,CAACR,YAAL,CAAkBS,MAAlB;AACD,WAfS,CAAZ;AAiBD;;;;;;;uBAjDUa,iB,EAAiB,0H,EAAA,uH,EAAA,+H;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA,e;AAAA,a;AAAA,+2C;AAAA;AAAA;ACX9B;;AACE;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AAAiC;AAAA,mBAAY,IAAAZ,MAAA,EAAZ;AAAoB,WAApB;;AAC/B;;AACE;;AACE;;AAAW;;AAAG;;AACd;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AACF;;AACF;;AACF;;AACE;;AACE;;AACF;;AACA;;AAAiI;;AAAO;;AAC1I;;AACA;;AACF;;AACA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACF;;AACF;;;;AApCY;;AAAA;;AAoBC;;AAAA;;AAGiE;;AAAA;;;;;;;;;sEDrBjEY,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACT7L,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEV9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQa4L,gB;;;AACX,gCACUjL,IADV,EAEUkB,MAFV,EAE0B;AAAA;;AADhB,aAAAlB,IAAA,GAAAA,IAAA;AACA,aAAAkB,MAAA,GAAAA,MAAA;AACT;;;;kCAES3C,G,EAAuB2M,I,EAAiB;AAAA;;AAChD,cAAI,KAAKlL,IAAL,CAAU4I,eAAV,EAAJ,EAAiC;AAC/BrK,eAAG,GAAGA,GAAG,CAAC4M,KAAJ,CAAU;AACdC,wBAAU,EAAE;AACVC,6BAAa,EAAE,KAAKrL,IAAL,CAAUsL,QAAV;AADL;AADE,aAAV,CAAN;AAKD;;AACD,iBAAOJ,IAAI,CAACK,MAAL,CAAYhN,GAAZ,EAAiB0K,IAAjB,CACL,kEAAW,UAACrI,KAAD;AAAA,mBAA8B,OAAI,CAAC4K,eAAL,CAAqB5K,KAArB,CAA9B;AAAA,WAAX,CADK,CAAP;AAGD;;;wCACuBA,K,EAAwB;AAC9C,cAAIA,KAAK,CAAC0B,MAAN,KAAiB,GAArB,EAA0B;AACxB,iBAAKpB,MAAL,CAAYiD,QAAZ,CAAqB,CAAC,QAAD,CAArB,EAAiC;AAC/B6F,yBAAW,EAAE;AACXO,uBAAO,EAAE;AADE;AADkB,aAAjC;AAKD;;AACD,iBAAO,wDAAW3J,KAAX,CAAP;AACD;;;;;;;uBA3BUqK,gB,EAAgB,iH,EAAA,8G;AAAA,K;;;aAAhBA,gB;AAAgB,eAAhBA,gBAAgB;;;;;sEAAhBA,gB,EAAgB;cAF5B;AAE4B,Q;;;;;;;;;;;;;;;;;;;;;;;;ACT7B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMQ,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAInM,OAAO,CAACmB,KAAR,CAAcgL,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"block-one\">\n  <div style=\"margin-top: 35px;text-align: center\" class=\"text-main header\">\n    О нас\n  </div>\n  <div *ngIf=\"true\" class=\"text-main subheader\">\n    Раздел находится в разработке, но это ненадолго\n  </div>\n</div>\n","import {Injectable} from '@angular/core';\r\nimport {AppData, Applicant, Application, Class, MainData, NewUser} from './interfaces';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n\r\nexport class AccountService {\r\n\r\n  constructor(private http: HttpClient ) {\r\n  }\r\n\r\n  registerApplication(application: Application): Observable<Application> {\r\n    console.log('posting app', application);\r\n    return this.http.post<Application>('/api/account', application);\r\n  }\r\n\r\n  registerApplicant(applicant: Applicant): Observable<Applicant> {\r\n    return this.http.post<Applicant>('/api/account', applicant);\r\n  }\r\n\r\n  getMain(): Observable<MainData> {\r\n    console.log('getting info...');\r\n    return this.http.get<MainData>(`/api/account`);\r\n  }\r\n\r\n  getAllApplications(): Observable<AppData[]> {\r\n    console.log('getting info...');\r\n    return this.http.get<AppData[]>(`/api/account/apps`);\r\n  }\r\n\r\n}\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {AuthService} from '../auth.service';\nimport {AccountService} from '../account.service';\nimport {tap, timeInterval} from 'rxjs/operators';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css']\n})\nexport class AccountComponent implements OnInit, OnDestroy {\n\n  aSub: Subscription;\n\n  constructor(\n    private auth: AuthService,\n    private account: AccountService\n  ) { }\n\n\n\n  username = 'пользователь';\n  appsCount = 0;\n  loaded = false;\n  ngOnInit(): void {\n    this.aSub = this.account.getMain().subscribe(main => {\n      this.username = main.name.split(' ')[0];\n      this.appsCount = main.apps;\n      // timeInterval(5000);\n      this.loaded = true;\n    }, error => {\n      if (error.code === 401) {\n        this.auth.logout();\n      }\n    })\n\n  }\n\n  ngOnDestroy(): void {\n    if (this.aSub) {\n      this.aSub.unsubscribe();\n    }\n  }\n\n}\n","<div class=\"block-one\">\n  <div fxFlex=\"20\" fxHide.lt-md=\"true\" fxFlex.lt-lg=\"30\" fxLayout=\"column\">\n  </div>\n  <div fxFlex=\"60\" fxFlex.lt-md=\"100\" fxFlex.lt-lg=\"55\">\n    <div class=\"content-header\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n      <div>\n        <img src=\"assets/images/user.png\" style=\"width: 120px; height: 120px\">\n      </div>\n      <div style=\"text-align: center; padding-top: 15px\" [ngClass]=\"{shine: !loaded }\">\n        <span class=\"text-main header\">Добро пожаловать, {{username | titlecase}}</span>\n      </div>\n    </div>\n    <div fxLayout=\"row\" fxLayout.lt-lg=\"column\" fxLayoutAlign=\"space-around center\">\n      <mat-card [ngClass]=\"{shine: !loaded }\" class=\"desktop\">\n        <div fxHide=\"{{!loaded}}\">\n          <div fxLayout=\"row\">\n            <div fxFlex=\"70\" >\n              <div class=\"card-header\">\n                Текущие заявки: {{appsCount}}\n              </div>\n              <div class=\"card-subtile\">\n                Узнайте о состоянии своих текущих заявок, их оплате\n              </div>\n            </div>\n            <div fxFlex=\"30\" fxLayoutAlign=\"end center\">\n              <img class=\"card-image\" src=\"assets/images/apps.png\">\n            </div>\n          </div>\n          <div style=\"height: 20px\"></div>\n          <mat-divider></mat-divider>\n          <mat-card-footer style=\"\" class=\"card-footer\" >\n            <div fxLayoutAlign=\"start center\" fxFlexFill [routerLink]=\"['/applications']\" class=\"button alternative-button card-link\">\n              Узнать о состоянии\n            </div>\n          </mat-card-footer>\n        </div>\n\n      </mat-card>\n      <mat-card [ngClass]=\"{shine: !loaded}\" class=\"desktop\">\n        <div fxHide=\"{{!loaded}}\">\n          <div fxLayout=\"row\">\n            <div fxFlex=\"70\" >\n              <div class=\"card-header\">\n                Новая заявка\n              </div>\n              <div class=\"card-subtile\">\n                Подайте новую заявку на товарный знак и укажите все необходимые данные\n              </div>\n            </div>\n            <div fxFlex=\"30\" fxLayoutAlign=\"end center\">\n              <img class=\"card-image\" src=\"assets/images/add-app.png\">\n            </div>\n          </div>\n          <mat-divider></mat-divider>\n          <mat-card-footer class=\"card-footer\" >\n            <div fxLayoutAlign=\"start center\" fxFlexFill [routerLink]=\"['/add']\" class=\"button alternative-button card-link\">\n              Подать заявку\n            </div>\n          </mat-card-footer>\n        </div>\n      </mat-card>\n    </div>\n  </div>\n  <div fxFlex=\"20\" fxHide.lt-md=\"true\" fxFlex.lt-lg=\"15\" >\n\n  </div>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Subscription} from 'rxjs';\nimport {ClassService} from '../class.service';\nimport {Class, SelectedClasses} from '../interfaces';\nimport {AccountService} from '../account.service';\nimport {AuthService} from '../auth.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\ninterface Food {\n  value: string;\n  viewValue: string;\n}\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.css']\n})\nexport class AddComponent implements OnInit, OnDestroy {\n\n  appForm: FormGroup;\n  aSub: Subscription;\n  searchSub: Subscription;\n  upClassSub: Subscription;\n  postSub: Subscription;\n\n\n  foods: Food[] = [\n    {value: 'IP', viewValue: 'Индивидуальный предприниматель'},\n    {value: 'UL', viewValue: 'Юридическое лицо'},\n  ];\n\n  constructor(\n    public router: Router,\n    private clsService: ClassService,\n    private accService: AccountService,\n    private auth: AuthService,\n    private _snackBar: MatSnackBar\n  ) { }\n\n  // public currentForm = '';\n  public currentPage = '';\n  private pageNames = ['name', 'type', 'logo', 'extra', 'classes', 'person', 'options', 'done'];\n  public donePages = [false, false, false, false, false, false, false, false];\n  private pagePosition = 0;\n  public knownCategory = true;\n  public canHide = false;\n  public selectedClass = null;\n  public mainClasses = null;\n  public selectedClasses = null;\n  private discount = false;\n\n  public persons = ['Работа', 'Дима'];\n  optionHelpState = false;\n  ngOnInit(): void {\n    this.aSub = this.clsService.getMain().subscribe(classes => {\n      this.mainClasses = classes;\n    },\n      error => {\n      console.log(error);\n      if (error.status === 401) {\n        this.auth.logout();\n      }\n      });\n    this.appForm = new FormGroup({\n      trademarkName : new FormControl(null, [Validators.required]),\n      trademarkType : new FormControl(null, [Validators.required]),\n      trademarkLogo : new FormControl(null),\n      trademarkLogoDescription : new FormControl(null, [Validators.required]),\n      trademarkColors : new FormControl(null),\n      trademarkUnsec : new FormControl(null),\n      trademarkField : new FormControl(null, [Validators.required]),\n      trademarkClasses : new FormControl([], [Validators.required]),\n      applicantId : new FormControl(null),\n      applicantType : new FormControl(null, [Validators.required]),\n      applicantName : new FormControl(null, [Validators.required]),\n      applicantInn : new FormControl(null, [Validators.required]),\n      applicantKpp : new FormControl(null, [Validators.required]),\n      applicantOgrn : new FormControl(null),\n      applicantAddress : new FormControl(null, [Validators.required]),\n      applicantHead : new FormControl(null, [Validators.required]),\n      applicantCanSave : new FormControl(false),\n      applicantSavingName : new FormControl(null),\n      applicationMode : new FormControl(null, [Validators.required]),\n      applicationTax : new FormControl(0, [Validators.required]),\n      applicationPrice : new FormControl(0, [Validators.required]),\n      applicationCheckOption : new FormControl(false, [Validators.required])\n    });\n    this.currentPage = this.pageNames[this.pagePosition];\n    // this.currentForm = 'trademarkName';\n  }\n\n  increasePage() {\n    let canMove = true;\n    let snackAction = '';\n    // window.scroll(0, 0);\n    // console.log('position', window.scrollX);\n    switch (this.pagePosition) {\n      case 0:\n        canMove = !this.appForm.get('trademarkName').invalid\n        snackAction = 'Необходимо ввести название'\n        break;\n      case 1:\n        canMove = !this.appForm.get('trademarkType').invalid\n        snackAction = 'Необходимо выбрать тип'\n        break;\n      case 2:\n        break;\n      case 3:\n        break;\n      case 4:\n        if (this.appForm.get('trademarkClasses').value.length === 0) {\n          canMove = false;\n          snackAction = 'Необходимо выбрать минимум один класс';\n        }\n        if (this.appForm.get('trademarkField').invalid) {\n          canMove = false;\n          snackAction = 'Необходимо указать сферу деятельности';\n        }\n        if (this.appForm.get('trademarkClasses').value.length === 0 && this.appForm.get('trademarkField').invalid) {\n          canMove = false;\n          snackAction = 'Необходимо выбрать минимум один класс и указать сферу деятельности';\n        }\n        break;\n      case 5:\n        snackAction = 'Заполните форму заявителя полностью';\n        if (this.appForm.get('applicantType').invalid) {\n          canMove = false;\n        }\n        if (this.appForm.get('applicantName').invalid) {\n          canMove = false;\n        }\n        if (this.appForm.get('applicantInn').invalid) {\n          canMove = false;\n        }\n        if (this.appForm.get('applicantKpp').invalid) {\n          canMove = false;\n        }\n        if (this.appForm.get('applicantType').value === 'UL') {\n          if (this.appForm.get('applicantOgrn').invalid) {\n            canMove = false;\n          }\n        }\n        if (this.appForm.get('applicantType').value === 'UL') {\n          if (this.appForm.get('applicantHead').invalid) {\n            canMove = false;\n          }\n        }\n        if (this.appForm.get('applicantCanSave').value) {\n          if (this.appForm.get('applicantSavingName').invalid) {\n            canMove = false;\n          }\n        }\n        break;\n      case 6:\n        canMove = !this.appForm.get('applicationMode').invalid;\n        snackAction = 'Необходимо выбрать способ публикации';\n        break;\n\n    }\n    if (canMove) {\n      if (this.pagePosition < 7) {\n\n        this.donePages[this.pagePosition] = true;\n        this.pagePosition++;\n        this.currentPage = this.pageNames[this.pagePosition];\n\n      } else {\n        // console.log('we are ready to post')\n        this.saveApp();\n        this.router.navigate(['/applications']);\n      }\n    } else {\n      this.openSnackBar(snackAction, 'OK')\n    }\n\n\n  }\n\n  decreasePage() {\n    window.scroll(0, 0);\n    if (this.pagePosition > 0) {\n      this.pagePosition--;\n      this.currentPage = this.pageNames[this.pagePosition];\n    } else {\n\n    }\n  }\n\n  selectType() {\n\n  }\n\n  addKnownCategories() {\n    this.knownCategory = false;\n  }\n\n  selectClass(id: string, mainClass: Class) {\n    this.searchSub = this.clsService.getChildren(id).subscribe(classes => {\n      //===== надо зайти в базу и скачать дочерние классы выбранного элемента\n      this.selectedClasses = classes;\n    });\n    this.canHide = true;\n    // console.log(index);\n    this.selectedClass = mainClass;\n    // console.log('selected class', this.selectedClass);\n  }\n\n\n\n  ngOnDestroy(): void {\n\n    if (this.aSub) this.aSub.unsubscribe()\n    if (this.searchSub) this.searchSub.unsubscribe()\n    if (this.upClassSub) this.upClassSub.unsubscribe()\n  }\n\n  stepBack() {\n    if (this.selectedClass.ParentId === '0') {\n      this.canHide = false;\n      this.selectedClass = null;\n    } else {\n      const parentId = this.selectedClass.ParentId;\n      console.log('old parent', parentId)\n      this.upClassSub = this.clsService.getById(parentId)\n        .subscribe(res => {\n          this.selectedClass = res;\n        });\n      console.log('old parent', this.selectedClass.ParentId);\n      this.searchSub = this.clsService.getUp(this.selectedClass.ParentId).subscribe(classes => {\n        this.selectedClasses = classes;\n      });\n    }\n\n    }\n\n  setAppPrice() {\n    const required = this.appForm.get('applicationMode').value === 'print' ? 300 : 3500;\n    if (required !== 300) {\n      this.discount = true;\n      this.calcAppTax();\n    }\n    const option = this.appForm.get('applicationCheckOption').value ? 7500 : 0;\n    this.appForm.controls['applicationPrice'].setValue(required + option);\n  }\n  calcAppTax() {\n    const classes = this.appForm.get('trademarkClasses').value.length;\n    if (classes > 0) {\n      let part_210 = 3500 + (classes - 5 > 0 ? (classes - 5) * 1000 : 0);\n      let part_240 = 11500 + ( classes * 2500);\n      let part_211 = 16000 + (classes - 5 > 0 ? (classes - 5) * 1000 : 0);\n      let part_214 = 2000;\n      if (this.discount) {\n        part_210 = part_210 * 0.7;\n        part_240 = part_240 * 0.7;\n        part_211 = part_211 * 0.7;\n        part_214 = part_214 * 0.7;\n      }\n      this.appForm.controls['applicationTax'].setValue(part_210 + part_240 + part_211 + part_214);\n    }\n\n\n  }\n\n  addClass(selected: Class) {\n    //===== Проверяем это основной класс или его подклассы\n    if (selected.MainclassId === '0') {\n      const masterCandidate = this.appForm.controls['trademarkClasses'].value.find(c => c.Id === selected.ClassId);\n      //===== если он основной и еще не добавлен, то надо добавлять\n      if (!masterCandidate) {\n        const sClass: SelectedClasses = {\n          Id: selected.ClassId,\n          Number: selected.Number,\n          Classes: []\n        };\n        this.appForm.controls['trademarkClasses'].value.push(sClass);\n      }\n    } else {\n      //===== проверяем, добавлен ли его основной класс уже\n      const candidate = this.appForm.controls['trademarkClasses'].value.find(c => c.Id === selected.MainclassId);\n      if (candidate) {\n        //===== проверяем, а выбрали ли мы до этого класс целиком или только подклассы\n        if (candidate.Classes.length > 0) {\n          //===== и если мы такой класс не добавляли, то можно добавить\n          if (!candidate.Classes.find(x => x.ClassId === selected.ClassId)) {\n            candidate.Classes.push(selected);\n          }\n        }\n      } else {\n        //===== значит основной  еще не добавлен и нам надо его создать, но пока без названия\n        //console.log('the parent class is new', selected)\n        const sClass: SelectedClasses = {\n          Id: selected.MainclassId,\n          Number: '',\n          Classes: [selected]\n        };\n        //===== а теперь нам нужно выяснить, как же звали основной класс\n        this.upClassSub = this.clsService.getById(selected.MainclassId)\n          .subscribe(res => {\n            sClass.Number = res.Number;\n          });\n        //===== и полноценно добавить вновь выбранный\n        this.appForm.controls['trademarkClasses'].value.push(sClass);\n      }\n    }\n    this.calcAppTax();\n    console.log('classes are', this.appForm.controls['trademarkClasses'].value)\n  }\n  removeClass(selected: Class) {\n    // const rrr = this.appForm.controls['trademarkClasses'].value.map(c =>c.Classes).flat().map(el => el._id)\n    // console.log('arr is', rrr)\n    // const bbb = rrr.map(el => el._id)\n    // console.log('new arr is', rrr)\n    this.calcAppTax();\n  }\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {\n      duration: 2000,\n    });\n  }\n  saveApp() {\n    //console.log(this.appForm.get('trademarkType').value)\n    this.postSub = this.accService.registerApplication(this.appForm.value).subscribe(\n      () => {\n      }, error => {\n        console.log('something go wrong')\n      }\n    )\n  }\n}\n","<div>\n  <div\n    [ngClass]=\"{\n      goback: true\n    }\"\n    [ngClass.lt-md]=\"{\n      gobackmobile: true\n    }\">\n    <button mat-icon-button [routerLink]=\"['/account']\">\n      <mat-icon>arrow_back</mat-icon>\n    </button>\n  </div>\n  <div class=\"checkout\" fxLayout=\"column\" fxHide=\"true\" fxShow=\"{{appForm.get('trademarkClasses').value.length !== 0}}\">\n    <div fxLayout=\"row\">\n      <div fxFlex=\"70\" class=\"popup-field\" >Выбрано классов:</div>\n      <div fxFlex=\"30\" class=\"popup-price\">{{appForm.get('trademarkClasses').value.length}}</div>\n    </div>\n    <div fxLayout=\"row\" fxHide=\"true\" fxShow=\"{{appForm.get('applicationTax').value !== 0}}\">\n      <div fxFlex=\"70\" class=\"popup-field\">Размер госпошлины:</div>\n      <div fxFlex=\"30\" class=\"popup-price\">{{appForm.get('applicationTax').value}} руб</div>\n    </div>\n    <div fxLayout=\"row\" fxHide=\"true\" fxShow=\"{{appForm.get('applicationPrice').value !== 0}}\">\n      <div fxFlex=\"70\" class=\"popup-field\">Стоимость услуг:</div>\n      <div fxFlex=\"30\" class=\"popup-price\">{{appForm.get('applicationPrice').value}} руб</div>\n    </div>\n  </div>\n\n  <form [formGroup]=\"appForm\"  class=\"block-one\" fxLayout=\"column\" ><!--  (submit)=\"saveApp()\"-->\n    <div class=\"stepper-content\" fxFlex=\"65\">\n\n      <div *ngIf=\"currentPage === 'name'\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n        <div class=\"text-main header step\">\n          Введите название товарного знака\n        </div>\n\n        <div class=\"step-content normal\" fxLayoutAlign=\"center center\">\n          <mat-card style=\"width: 100%\" fxLayoutAlign=\"center center\">\n            <mat-form-field appearance=\"outline\" class=\"step-input\" style=\"\">\n              <mat-label>Название</mat-label>\n              <input matInput placeholder=\"Название товарного знака\" required formControlName=\"trademarkName\">\n            </mat-form-field>\n          </mat-card>\n\n        </div>\n      </div>\n\n\n      <div *ngIf=\"currentPage === 'type'\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n        <div class=\"text-main header step\">\n          Выберите тип товарного знака\n        </div>\n\n        <div class=\"step-content wide\">\n          <mat-radio-group formControlName=\"trademarkType\"\n                           style=\"width: 100%\"\n                           fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutAlign=\"space-around center\">\n            <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n              <div fxHide.lt-md=\"true\" class=\"selector\" (click)=\"radioWord.checked = true\">\n                <mat-card class=\"radio-normal\" fxLayout=\"column\" (click)=\"appForm.controls['trademarkType'].setValue('word')\" >\n                  <div>\n                    <img src=\"assets/images/sign-os.png\" style=\"width: 200px; height: 200px\">\n                  </div>\n                  <div class=\"text-main card-label\">Словесный</div>\n                </mat-card>\n              </div>\n              <mat-radio-button #radioWord value=\"word\" >\n                <div class=\"radio-mini\" fxHide=\"true\" fxShow.lt-md=\"true\" >\n                  <mat-card fxLayout=\"row\" (click)=\"appForm.controls['trademarkType'].setValue('word')\" >\n                    <div>\n                      <img src=\"assets/images/sign-os-mini.png\" style=\"width: 80px; height: 80px\">\n                    </div>\n                    <div style=\"padding-left: 15px\" fxLayoutAlign=\"center center\" class=\"text-main card-label\">\n                      Словесный\n                    </div>\n                  </mat-card>\n                </div>\n              </mat-radio-button>\n            </div>\n            <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n              <div fxHide.lt-md=\"true\" class=\"selector\" (click)=\"radioImage.checked = true\">\n                <mat-card class=\"radio-normal\" fxLayout=\"column\" (click)=\"appForm.controls['trademarkType'].setValue('image')\" >\n                  <div>\n                    <img src=\"assets/images/sign.png\" style=\"width: 200px; height: 200px\">\n                  </div>\n                  <div class=\"text-main card-label\">Изобразительный</div>\n                </mat-card>\n              </div>\n              <mat-radio-button #radioImage value=\"image\">\n                <div class=\"radio-mini\" fxHide=\"true\" fxShow.lt-md=\"true\">\n                  <mat-card fxLayout=\"row\" (click)=\"appForm.controls['trademarkType'].setValue('image')\">\n                    <div>\n                      <img src=\"assets/images/sign-mini.png\" style=\"width: 80px; height: 80px\">\n                    </div>\n                    <div style=\"padding-left: 15px\" fxLayoutAlign=\"center center\" class=\"text-main card-label\">\n                      Изобразительный\n                    </div>\n                  </mat-card>\n                </div>\n              </mat-radio-button>\n            </div>\n            <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n              <div fxHide.lt-md=\"true\" class=\"selector\" (click)=\"radioComplex.checked = true\">\n                <mat-card class=\"radio-normal\" fxLayout=\"column\" (click)=\"appForm.controls['trademarkType'].setValue('complex')\" >\n                  <div>\n                    <img src=\"assets/images/sign-comb.png\" style=\"width: 200px; height: 200px\">\n                  </div>\n                  <div class=\"text-main card-label\">Комбинированный</div>\n                </mat-card>\n              </div>\n              <mat-radio-button #radioComplex  value=\"complex\" >\n                <div class=\"radio-mini\" fxHide=\"true\" fxShow.lt-md=\"true\" >\n                  <mat-card fxLayout=\"row\" (click)=\"appForm.controls['trademarkType'].setValue('complex')\" >\n                    <div>\n                      <img src=\"assets/images/sign-comb-mini.png\" style=\"width: 80px; height: 80px\">\n                    </div>\n                    <div style=\"padding-left: 15px\" fxLayoutAlign=\"center center\" class=\"text-main card-label\">\n                      Комбинированный\n                    </div>\n                  </mat-card>\n                </div>\n              </mat-radio-button>\n            </div>\n          </mat-radio-group>\n        </div>\n<!--        <div>{{appForm.get('trademarkType').value}}</div>-->\n      </div>\n\n\n      <div *ngIf=\"currentPage === 'logo'\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n        <div class=\"text-main header step\">\n          Загрузите логотип\n        </div>\n        <div class=\"text-alternative optional\">(необязательно)</div>\n        <div class=\"skip-content\" fxLayoutAlign=\"center center\">\n          <button mat-button class=\"button alternative-button\" type=\"button\"\n                  (click)=\"increasePage()\">\n            Пропустить\n          </button>\n        </div>\n        <div class=\"step-content normal\" fxLayoutAlign=\"center center\">\n          <mat-card style=\"width: 100%\">\n            <mat-card-content style=\"margin: 15px\">\n              <div style=\"height: 100px; width: 100px; border: 1px solid gray\">\n                <img>\n              </div>\n            </mat-card-content>\n\n            <mat-divider></mat-divider>\n            <mat-card-footer style=\"padding: 15px\">\n              <button style=\"margin-left: 15px\" mat-flat-button class=\"button primary-button\" (click)=\"openSnackBar('Пока загрузка отключена', 'OK')\">\n                Загрузить\n              </button>\n            </mat-card-footer>\n          </mat-card>\n        </div>\n        <div class=\"text-main subheader\">\n          Опишите логотип\n        </div>\n        <div class=\"step-content normal\" fxLayoutAlign=\"center center\">\n          <mat-card style=\"width: 100%\" fxLayoutAlign=\"center center\">\n            <mat-form-field appearance=\"outline\" class=\"step-input\">\n              <mat-label>Описание</mat-label>\n              <input matInput placeholder=\"Описание логотипа\" required formControlName=\"trademarkLogoDescription\">\n            </mat-form-field>\n          </mat-card>\n        </div>\n      </div>\n\n\n      <div *ngIf=\"currentPage === 'extra'\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n        <div class=\"text-main header step\">\n          Укажите цвета и неохраняемые элементы\n        </div>\n        <div class=\"text-alternative optional\">(необязательно)</div>\n        <div class=\"skip-content\" fxLayoutAlign=\"center center\">\n          <button mat-button class=\"button alternative-button\" type=\"button\"\n                  (click)=\"increasePage()\">\n            Пропустить\n          </button>\n        </div>\n        <div class=\"text-main subheader\">\n          Заявляемые цвета\n        </div>\n        <div class=\"step-content normal\" fxLayoutAlign=\"center center\">\n          <mat-card style=\"width: 100%\" fxLayoutAlign=\"center center\">\n            <mat-form-field appearance=\"outline\" class=\"step-input\">\n              <mat-label>Цвета</mat-label>\n              <input matInput placeholder=\"Цвета\" required formControlName=\"trademarkColors\">\n            </mat-form-field>\n          </mat-card>\n        </div>\n        <div class=\"text-main subheader\">\n          Неохраняемые элементы\n        </div>\n        <div class=\"step-content normal\" fxLayoutAlign=\"center center\">\n          <mat-card style=\"width: 100%\" fxLayoutAlign=\"center center\">\n            <mat-form-field appearance=\"outline\" class=\"step-input\">\n              <mat-label>Элементы</mat-label>\n              <input matInput placeholder=\"Элементы\" required formControlName=\"trademarkUnsec\">\n            </mat-form-field>\n          </mat-card>\n        </div>\n      </div>\n\n\n      <div *ngIf=\"currentPage === 'classes'\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n        <div class=\"text-main header step\">\n          Укажите сферу деятельности\n        </div>\n\n        <div class=\"step-content normal\" fxLayoutAlign=\"center center\">\n          <mat-card style=\"width: 100%\" fxLayoutAlign=\"center center\">\n            <mat-form-field appearance=\"outline\" class=\"step-input\" style=\"\">\n              <mat-label>Род деятельности</mat-label>\n              <input matInput placeholder=\"Род деятельности\" required formControlName=\"trademarkField\">\n            </mat-form-field>\n          </mat-card>\n        </div>\n\n        <div *ngIf=\"knownCategory\" class=\"text-main subheader\">\n          Найдены подходящие для этой сферы классы. Выбрать их?\n        </div>\n        <div *ngIf=\"knownCategory\" class=\"skip-content\" fxLayoutAlign=\"center center\">\n          <button mat-button class=\"button alternative-button\" type=\"button\"\n                  (click)=\"knownCategory = false\">\n            Отказаться\n          </button>\n          <button mat-button class=\"button primary-button\" type=\"button\"\n                  (click)=\"addKnownCategories()\">\n            Выбрать\n          </button>\n        </div>\n\n        <div *ngIf=\"true\" class=\"text-main subheader\">\n          Выберите классы\n        </div>\n        <div class=\"step-content\" fxLayoutAlign=\"center center\"\n          [ngClass.lt-md]=\"{normal: true}\"\n          [ngClass]=\"{wide: true}\">\n          <mat-card class=\"test\"\n             [ngClass.lt-md]=\"{normal: true}\"\n             [ngClass]=\"{wide: canHide, normal: !canHide}\">\n            <div fxLayout=\"column\" fxLayoutAlign=\"center start\">\n              <div fxLayoutAlign=\"center\" style=\"width: 100%;\">\n                <mat-form-field appearance=\"outline\"\n                  fxFlex=\"{{canHide ? 100 : 90}}\">\n                  <mat-label>Поиск классов</mat-label>\n                  <input matInput placeholder=\"Поиск\" required>\n                  <button mat-icon-button matSuffix>\n                    <mat-icon matSuffix>search</mat-icon>\n                  </button>\n                </mat-form-field>\n              </div>\n              <div style=\"width: 100%\"  fxLayout=\"row\" fxLayoutAlign=\"center\">\n                <div fxFlex=\"{{canHide ? 35 : 90}}\"\n                     fxHide.lt-md=\"{{canHide}}\"\n                     fxLayout=\"row wrap\" fxLayoutAlign=\"center start\">\n\n                  <div style=\"border: 1px solid lightgray\" class=\"main-class text-alternative\" fxFlex=\"20\"\n                       *ngFor=\"let main of mainClasses\" (click)=\"selectClass(main.ClassId, main)\">\n                    {{main.Number.split(' ')[1]}}\n                  </div>\n                </div>\n\n                <mat-divider [vertical]=\"true\" fxShow=\"{{canHide}}\" fxHide.lt-md=\"true\" style=\"margin-right: 25px; margin-left: 25px\"></mat-divider>\n\n                <div style=\"width: 100%; height: 400px\"\n                     fxShow=\"{{canHide}}\" fxFlex=\"{{canHide ? 60 : 0}}\"\n                     fxFlex.lt-md=\"{{canHide ? 100 : 0}}\"\n                     fxLayout=\"column\" fxLayoutAlign=\"center center\">\n\n                  <div fxFlex=\"15\" style=\"background: #f5f5f5; width: 100%; padding-left: 0px\" fxLayoutAlign=\"start\">\n                    <button mat-icon-button (click)=\"stepBack()\">\n                      <mat-icon>arrow_back_ios</mat-icon>\n                    </button>\n                  </div>\n                  <div fxFlex=\"85\" style=\"width: 100%; height: 100%; overflow-y: scroll; \">\n                    <ul style=\"list-style: none;  padding: 0;margin: 0\">\n                      <li style=\"background: #f5f5f5; width: 100%\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n                        <div fxLayout=\"column\" fxLayoutAlign=\"start\">\n                          <div class=\"text-main class-header\">{{selectedClass ? selectedClass.Number : ''}}</div>\n                          <div class=\"text-alternative class-description\">{{selectedClass ? selectedClass.Title : ''}}</div>\n                        </div>\n                        <button mat-icon-button fxHide=\"false\" (click)=\"addClass(selectedClass)\">\n                          <mat-icon>system_update_alt</mat-icon>\n                        </button>\n                      </li>\n                      <li style=\"width: 100%; ; margin-left: 0; border-bottom: 2px solid #f5f5f5\"\n                          fxLayout=\"row\" fxLayoutAlign=\"space-between center\"\n                          *ngFor=\"let selected of selectedClasses\"\n                          >\n                        <div fxFlex=\"90\" fxLayout=\"column\"\n                             style=\"text-align: left\"\n                             (click)=\"selectClass(selected.ClassId, selected)\">\n                          <div class=\"text-main element-header\" >\n                            {{selected.Title}}\n                          </div>\n                        </div>\n                        <div fxFlex=\"10\" fxLayoutAlign=\"center center\">\n                          <button mat-icon-button (click)=\"addClass(selected)\">\n                            <mat-icon>system_update_alt</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </mat-card>\n        </div>\n\n        <div *ngIf=\"appForm.get('trademarkClasses').value.length > 0\" class=\"text-main subheader\">\n          Выбранные классы\n        </div>\n        <div class=\"step-content normal\"\n             *ngIf=\"appForm.get('trademarkClasses').value.length > 0\"\n             fxLayoutAlign=\"center center\">\n\n          <mat-card style=\"width: 100%\">\n            <ul style=\"list-style: none;  padding: 0;margin: 0\">\n              <li style=\"width: 100%;  margin-left: 0\"\n                  *ngFor=\"let list of appForm.get('trademarkClasses').value\">\n                <div style=\"text-align: left; background: #f5f5f5\">\n                  <div fxFlex=\"90\" >\n                    <div class=\"text-main element-header\" >\n                      {{list.Number}}\n                    </div>\n                  </div>\n                  <div fxFlex=\"10\">\n                    <button mat-icon-button (click)=\"removeClass(list)\">\n                      <mat-icon>delete</mat-icon>\n                    </button>\n                  </div>\n                </div>\n                <div>\n                  <ul style=\"list-style: none;margin: 0; padding: 0\">\n                    <li style=\"width: 100%; margin-left: 0; border-bottom: 2px solid #f5f5f5\"\n                        *ngFor=\"let child of list.Classes\">\n                      <div>\n                        <div fxFlex=\"90\">\n                          <div style=\"padding-left: 40px\" class=\"text-alternative element-header\" >\n                            {{child.Title}}\n                          </div>\n                        </div>\n                        <div fxFlex=\"10\">\n                          <button mat-icon-button (click)=\"removeClass(child)\">\n                            <mat-icon>delete</mat-icon>\n                          </button>\n                        </div>\n                      </div>\n                    </li>\n                  </ul>\n                </div>\n              </li>\n            </ul>\n          </mat-card>\n        </div>\n      </div>\n\n\n      <div *ngIf=\"currentPage === 'person'\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n        <div class=\"text-main header step\">\n          Заявитель\n        </div>\n\n        <div class=\"step-content normal\">\n          <mat-card fxLayout=\"column\" fxLayoutAlign=\"center center\">\n            <mat-form-field style=\"width: 90%; max-width: 360px\" appearance=\"outline\">\n              <mat-label>Выбрать из сохраненных</mat-label>\n              <mat-select>\n                <mat-option >\n                  {{'Пока нет'}}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n          </mat-card>\n        </div>\n        <div class=\"step-content normal\">\n          <mat-card fxLayout=\"column\" fxLayoutAlign=\"center center\" >\n            <mat-form-field style=\"width: 90%; max-width: 360px\" appearance=\"outline\">\n              <mat-label>Статус заявителя</mat-label>\n              <mat-select #appMode formControlName=\"applicantType\">\n                <mat-option *ngFor=\"let food of foods\" [value]=\"food.value\">\n                  {{food.viewValue}}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\" style=\"width: 90%; max-width: 360px\">\n              <mat-label>{{appMode.value === 'UL'? 'Наименование организации' : 'ФИО'}}</mat-label>\n              <input matInput placeholder=\"Наименование организации\" required formControlName=\"applicantName\">\n            </mat-form-field>\n            <div style=\"width: 90%; max-width: 360px\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\" >\n              <mat-form-field appearance=\"outline\" style=\"width: 45%; max-width: 150px\">\n                <mat-label>ИНН</mat-label>\n                <input matInput placeholder=\"ИНН\" required formControlName=\"applicantInn\">\n              </mat-form-field>\n              <mat-form-field appearance=\"outline\" style=\"width: 45%; max-width: 150px\">\n                <mat-label>КПП</mat-label>\n                <input matInput placeholder=\"КПП\" required formControlName=\"applicantKpp\">\n              </mat-form-field>\n            </div>\n\n            <mat-form-field *ngIf=\"appMode.value === 'UL'\" appearance=\"outline\" style=\"width: 90%; max-width: 360px\">\n              <mat-label>ОГРН</mat-label>\n              <input matInput placeholder=\"ОГРН\" required formControlName=\"applicantOgrn\">\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\" style=\"width: 90%; max-width: 360px\">\n              <mat-label>{{appMode.value === 'UL'? 'Юридический адрес' : 'Адрес'}}</mat-label>\n              <input matInput placeholder=\"Юридический адрес\" required formControlName=\"applicantAddress\">\n            </mat-form-field>\n            <mat-form-field *ngIf=\"appMode.value === 'UL'\" appearance=\"outline\" style=\"width: 90%; max-width: 360px\">\n              <mat-label>Генеральный директор</mat-label>\n              <input matInput placeholder=\"Генеральный директор\" required formControlName=\"applicantHead\">\n            </mat-form-field>\n            <div style=\"width: 90%; max-width: 360px; margin-bottom: 15px\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n              <mat-checkbox required formControlName=\"applicantCanSave\" #saveForLater>Сохранить заявителя</mat-checkbox>\n            </div>\n            <mat-form-field *ngIf=\"saveForLater.checked\" appearance=\"outline\" style=\"width: 90%; max-width: 360px\">\n              <mat-label>Имя при сохранении</mat-label>\n              <input matInput placeholder=\"Имя при сохранении\" required formControlName=\"applicantSavingName\">\n            </mat-form-field>\n          </mat-card>\n        </div>\n      </div>\n\n\n      <div *ngIf=\"currentPage === 'options'\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n        <div class=\"text-main header step\">\n          Опции\n        </div>\n\n        <div class=\"text-main subheader\">\n          Способ подачи\n        </div>\n        <div class=\"step-content ultrawide\" fxLayoutAlign=\"center\">\n          <mat-radio-group formControlName=\"applicationMode\" fxLayout=\"row\"\n                           fxLayout.lt-md=\"column\" fxLayoutAlign=\"space-between center\" (change)=\"setAppPrice()\">\n            <mat-radio-button value=\"print\"\n                              [ngClass.lt-md]=\"{vertical: true}\" [ngClass]=\"{horizontal: true}\">\n              <mat-card style=\"width: 70vw; max-width: 360px; padding-bottom: 0\">\n                <div style=\"height: 25px\" class=\"text-main option-header\">Самостоятельно</div>\n                <div class=\"text-alternative option-description\" [ngClass.lt-md]=\"{flexible: true}\" [ngClass]=\"{fixed: true}\">\n                  Мы подготовим для вас необходимые документы и квитанции. Вам останется лишь распечатать и подать их самостоятельно в ФИПС\n                </div>\n                <mat-divider></mat-divider>\n                <div fxLayoutAlign=\"start center\" style=\"height: 40px\" class=\"text-main option-price\">\n                  300 руб\n                </div>\n              </mat-card>\n            </mat-radio-button>\n            <mat-radio-button value=\"electric\"\n                              [ngClass.lt-md]=\"{vertical: true}\" [ngClass]=\"{horizontal: true}\">\n              <mat-card style=\"width: 70vw; max-width: 360px; padding-bottom: 0\">\n                <div style=\"height: 25px\" class=\"text-main option-header\">Электронная форма</div>\n                <div class=\"text-alternative option-description\" [ngClass.lt-md]=\"{flexible: true}\" [ngClass]=\"{fixed: true}\">\n                  Мы подготовим для вас необходимые документы и квитанции. Вам останется лишь распечатать и подать их самостоятельно в ФИПС\n                </div>\n                <mat-divider></mat-divider>\n                <div fxLayoutAlign=\"start center\" style=\"height: 40px\"  class=\"text-main option-price\">\n                  3500 руб\n                </div>\n              </mat-card>\n            </mat-radio-button>\n          </mat-radio-group>\n        </div>\n        <div class=\"text-main subheader\">\n          Услуги\n        </div>\n        <div class=\"step-content wide\" fxLayoutAlign=\"center\">\n          <mat-checkbox formControlName=\"applicationCheckOption\"\n                        [(ngModel)]=\"optionHelpState\" (change)=\"setAppPrice()\">\n            <mat-card style=\"width: 70vw; max-width: 360px; padding-bottom: 0\">\n              <div class=\"text-main option-header\">Полная проверка товарного знака</div>\n              <div class=\"text-alternative option-description\">\n                Проведение экспертизы на предмет наличия возможных препятствий к регистрации\n                (тождественные или сходные товарные знаки и заявки на ТЗ, международные ТЗ,\n                 нарушение ГК РФ)\n              </div>\n              <mat-divider></mat-divider>\n              <div fxLayoutAlign=\"start center\" style=\"height: 40px\" class=\"text-main option-price\">\n                7500 руб\n              </div>\n            </mat-card>\n          </mat-checkbox>\n        </div>\n\n      </div>\n\n\n      <div *ngIf=\"currentPage === 'done'\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n        <div class=\"text-main header step\">\n          Все готово!\n        </div>\n\n        <div class=\"text-main subheader wide\">\n          Заявка на товарный знак сформирована. Все данные будут доступны в личном кабинете после оплаты\n        </div>\n        <div class=\"step-content wide\" fxLayoutAlign=\"center\">\n          <mat-card style=\"width: 100%\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutAlign=\"space-between start\">\n            <div fxFlex=\"42\" fxFlex.lt-md=\"100\" fxLayout=\"column\" fxLayoutAlign=\"center center\" style=\"width: 100%;padding: 15px\">\n              <div class=\"text-main class-header\">Данные о заявке</div>\n              <div class=\"summary-row\">\n                <img style=\"height: 75px; width: 75px; border: 1px solid lightgray\">\n              </div>\n              <div fxLayout=\"column\" fxLayoutAlign=\"start start\" class=\"summary-row\">\n                <div class=\"text-main label\">Название</div>\n                <div class=\"text-alternative value\">{{appForm.get('trademarkName').value}}</div>\n              </div>\n              <div fxLayout=\"column\" fxLayoutAlign=\"start start\" class=\"summary-row\">\n                <div class=\"text-main label\">Тип</div>\n                <div class=\"text-alternative value\">\n                  {{appForm.get('trademarkType').value === 'word' ? 'Словесный' : (appForm.get('trademarkType').value === 'image' ? 'Изобразительный' : 'Комбинированный')}}\n                </div>\n              </div>\n              <div  fxLayout=\"column\" fxLayoutAlign=\"start start\" class=\"summary-row\">\n                <div class=\"text-main label\">Описание</div>\n                <div class=\"text-alternative value\">{{appForm.get('trademarkLogoDescription').value}}</div>\n              </div>\n              <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\" class=\"summary-row\">\n                <div fxFlex=\"45\"  fxLayout=\"column\" fxLayoutAlign=\"start start\" style=\"width: 100%\">\n                  <div class=\"text-main label\">Цвета</div>\n                </div>\n                <div fxFlex=\"45\"  fxLayout=\"column\" fxLayoutAlign=\"start start\" style=\"width: 100%\">\n                  <div class=\"text-main label\">Неохраняемые элементы</div>\n                </div>\n              </div>\n              <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\" style=\"width: 100%\">\n                <div fxFlex=\"45\"  fxLayout=\"column\" fxLayoutAlign=\"start start\" style=\"width: 100%\">\n                  <div class=\"text-alternative value\">{{appForm.get('trademarkColors').value}}</div>\n                </div>\n                <div fxFlex=\"45\"  fxLayout=\"column\" fxLayoutAlign=\"start start\" style=\"width: 100%\">\n                  <div class=\"text-alternative value\">{{appForm.get('trademarkUnsec').value}}</div>\n                </div>\n              </div>\n              <div  fxLayout=\"column\" fxLayoutAlign=\"start start\" class=\"summary-row\">\n                <div class=\"text-main label\">Классы</div>\n                <div class=\"text-alternative value\">\n                  <ul style=\"padding: 15px;margin: 0\">\n                    <li>Класс 1. Химические соединения, причиняющие острые ожоги и нечеловеческие страдания</li>\n                    <li>Класс 2</li>\n                    <li>Класс 3</li>\n                  </ul>\n                </div>\n              </div>\n              <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"summary-row\">\n                <div fxFlex=\"45\"  fxLayout=\"column\" fxLayoutAlign=\"start start\" style=\"width: 100%\">\n                  <div class=\"text-main label\">Способ подачи</div>\n                </div>\n                <div fxFlex=\"45\"  fxLayout=\"column\" fxLayoutAlign=\"end bottom\" style=\"width: 100%\">\n                  <div class=\"text-main label\">Выбранные услуги</div>\n                </div>\n              </div>\n              <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" style=\"width: 100%\">\n                <div fxFlex=\"45\"  fxLayout=\"column\" fxLayoutAlign=\"start start\" style=\"width: 100%\">\n                  <div class=\"text-alternative value\">\n                    {{appForm.get('applicationMode').value === 'print' ? 'Самостоятельно' : 'Электронный способ'}}\n                  </div>\n                </div>\n                <div fxFlex=\"45\"  fxLayout=\"column\" fxLayoutAlign=\"end bottom\" style=\"width: 100%\">\n                  <div class=\"text-alternative value\" >{{appForm.get('applicationCheckOption').value ? 'Полная проверка': 'нет'}}</div>\n                </div>\n              </div>\n              <div fxLayout=\"column\" fxLayoutAlign=\"start start\" class=\"summary-row\">\n                <div class=\"text-main label\">Размер госпошлины</div>\n                <div class=\"text-alternative value\">{{appForm.get('applicationTax').value}}</div>\n              </div>\n              <div></div>\n            </div>\n            <div style=\"background: lightgray; width: 1px; height: 100%\" fxHide.lt-md=\"true\" fxShow=\"true\"></div>\n            <div style=\"background: lightgray; height: 1px; width: 100%\" fxShow.lt-md=\"true\" fxHide=\"true\"></div>\n            <div fxFlex=\"42\" fxFlex.lt-md=\"100\" fxLayout=\"column\" fxLayoutAlign=\"center center\" style=\"width: 100%;padding: 15px\">\n              <div class=\"text-main class-header\">Данные о заявителе</div>\n              <div fxLayout=\"column\" fxLayoutAlign=\"start start\" style=\"width: 100%\">\n                <div class=\"text-main label\">Тип</div>\n                <div class=\"text-alternative value\">{{appForm.get('applicantType').value}}</div>\n              </div>\n              <div fxLayout=\"column\" fxLayoutAlign=\"start start\" style=\"width: 100%\">\n                <div class=\"text-main label\">Полное название</div>\n                <div class=\"text-alternative value\">{{appForm.get('applicantName').value}}</div>\n              </div>\n              <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" style=\"width: 100%\">\n                <div fxFlex=\"45\" fxLayout=\"column\" fxLayoutAlign=\"start start\" style=\"width: 100%\">\n                  <div class=\"text-main label\">ИНН</div>\n                  <div class=\"text-alternative value\">{{appForm.get('applicantInn').value}}</div>\n                </div>\n                <div fxFlex=\"45\" fxLayout=\"column\" fxLayoutAlign=\"start start\" style=\"width: 100%\">\n                  <div class=\"text-main label\">КПП</div>\n                  <div class=\"text-alternative value\">{{appForm.get('applicantKpp').value}}</div>\n                </div>\n              </div>\n              <div fxLayout=\"column\" fxLayoutAlign=\"start start\" style=\"width: 100%\">\n                <div class=\"text-main label\">ОГРН</div>\n                <div class=\"text-alternative value\">{{appForm.get('applicantOgrn').value}}</div>\n              </div>\n              <div fxLayout=\"column\" fxLayoutAlign=\"start start\" style=\"width: 100%\">\n                <div class=\"text-main label\">Адрес</div>\n                <div class=\"text-alternative value\">{{appForm.get('applicantAddress').value}}</div>\n              </div>\n              <div fxLayout=\"column\" fxLayoutAlign=\"start start\" style=\"width: 100%\">\n                <div class=\"text-main label\">ФИО</div>\n                <div class=\"text-alternative value\">{{appForm.get('applicantHead').value}}</div>\n              </div>\n            </div>\n          </mat-card>\n        </div>\n        <div class=\"text-main subheader\">\n          К оплате:\n        </div>\n        <div class=\"text-main subheader\">\n          {{appForm.get('applicationPrice').value}}\n        </div>\n        <div class=\"text-main subheader\">\n          <button mat-raised-button class=\"button payment-button\">Оплатить</button>\n        </div>\n      </div>\n\n\n    </div>\n    <div class=\"stepper-control\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n      <div fxFlex=\"25\" fxFlex.lt-md=\"30\" style=\"padding-left: 15px\">\n        <button *ngIf=\"currentPage !== 'name'\"\n                mat-button class=\"button alternative-button\" type=\"button\"\n                (click)=\"decreasePage()\">\n          Назад\n        </button>\n      </div>\n      <div fxFlex=\"50\" fxFlex.lt-md=\"40\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n        <button class=\"mini-page\" fxLayoutAlign=\"center center\"  mat-mini-fab\n                [ngClass]=\"{\n                  done: donePages[0]\n                  }\"\n                [ngClass.lt-md]=\"{\n                  micropage: currentPage !== 'name',\n                  done: donePages[0]\n                  }\">\n          <div fxHide.lt-md=\"true\" class=\"text-alternative stepper-label\">Название</div>\n        </button>\n        <mat-divider fxHide.lt-md=\"true\" class=\"page-divider done\"\n                     [ngClass]=\"{\n                  done: donePages[0],\n                  waiting: !donePages[0]\n                  }\">\n        </mat-divider>\n        <button class=\"mini-page\" fxLayoutAlign=\"center center\"  mat-mini-fab\n                [ngClass]=\"{\n                  done: donePages[1]\n                  }\"\n                [ngClass.lt-md]=\"{\n                  micropage: currentPage !== 'type',\n                  done: donePages[1]\n                  }\">\n          <div fxHide.lt-md=\"true\" class=\"text-alternative stepper-label\">Тип</div>\n        </button>\n        <mat-divider fxHide.lt-md=\"true\" class=\"page-divider\"\n                     [ngClass]=\"{\n                  done: donePages[1],\n                  waiting: !donePages[1]\n                  }\">\n\n        </mat-divider>\n        <button class=\"mini-page\" fxLayoutAlign=\"center center\" mat-mini-fab\n                [ngClass]=\"{\n                  done: donePages[2]\n                  }\"\n                [ngClass.lt-md]=\"{\n                  micropage: currentPage !== 'logo',\n                  done: donePages[2]\n                  }\">\n          <div fxHide.lt-md=\"true\" class=\"text-alternative stepper-label\">Логотип</div>\n        </button>\n        <mat-divider fxHide.lt-md=\"true\" class=\"page-divider\"\n                     [ngClass]=\"{\n                  done: donePages[2],\n                  waiting: !donePages[2]\n                  }\">\n        </mat-divider>\n        <button class=\"mini-page\" fxLayoutAlign=\"center center\" mat-mini-fab\n                [ngClass]=\"{\n                  done: donePages[3]\n                  }\"\n                [ngClass.lt-md]=\"{\n                  micropage: currentPage !== 'extra',\n                  done: donePages[3]\n                  }\">\n          <div fxHide.lt-md=\"true\" class=\"text-alternative stepper-label\">Дополнительно</div>\n        </button>\n        <mat-divider fxHide.lt-md=\"true\" class=\"page-divider\"\n                     [ngClass]=\"{\n                  done: donePages[3],\n                  waiting: !donePages[3]\n                  }\">\n        </mat-divider>\n        <button class=\"mini-page\" fxLayoutAlign=\"center center\" mat-mini-fab\n                [ngClass]=\"{\n                  done: donePages[4]\n                  }\"\n                [ngClass.lt-md]=\"{\n                  micropage: currentPage !== 'classes',\n                  done: donePages[4]\n                  }\">\n          <div fxHide.lt-md=\"true\" class=\"text-alternative stepper-label\">Классы</div>\n        </button>\n        <mat-divider fxHide.lt-md=\"true\" class=\"page-divider\"\n                     [ngClass]=\"{\n                  done: donePages[4],\n                  waiting: !donePages[4]\n                  }\">\n        </mat-divider>\n        <button class=\"mini-page\" fxLayoutAlign=\"center center\" mat-mini-fab\n                [ngClass]=\"{\n                  done: donePages[5]\n                  }\"\n                [ngClass.lt-md]=\"{\n                  micropage: currentPage !== 'person',\n                  done: donePages[5]\n                  }\">\n          <div fxHide.lt-md=\"true\" class=\"text-alternative stepper-label\">Заявитель</div>\n        </button>\n        <mat-divider fxHide.lt-md=\"true\" class=\"page-divider\"\n                     [ngClass]=\"{\n                  done: donePages[5],\n                  waiting: !donePages[5]\n                  }\">\n        </mat-divider>\n        <button class=\"mini-page\" fxLayoutAlign=\"center center\" mat-mini-fab\n                [ngClass]=\"{\n                  done: donePages[6]\n                  }\"\n                [ngClass.lt-md]=\"{\n                  micropage: currentPage !== 'options',\n                  done: donePages[6]\n                  }\">\n          <div fxHide.lt-md=\"true\" class=\"text-alternative stepper-label\">Опции</div>\n        </button>\n        <mat-divider fxHide.lt-md=\"true\" class=\"page-divider\"\n                     [ngClass]=\"{\n                  done: donePages[6],\n                  waiting: !donePages[6]\n                  }\">\n        </mat-divider>\n        <button class=\"mini-page\" color=\"primary\" fxLayoutAlign=\"center center\" mat-mini-fab\n                [ngClass]=\"{\n                  done: donePages[7]\n                  }\"\n                [ngClass.lt-md]=\"{\n                  micropage: currentPage !== 'done'\n                  }\">\n          <div fxHide.lt-md=\"true\" class=\"text-alternative stepper-label\">Готово</div>\n        </button>\n      </div>\n      <div fxFlex=\"25\" fxFlex.lt-md=\"30\" fxLayoutAlign=\"end center\" style=\"padding-right: 15px\">\n        <button\n          mat-raised-button class=\"button primary-button\" type=\"button\"\n                (click)=\"increasePage()\">\n          {{currentPage === 'done' ? 'Готово' : 'Далее'}}\n        </button>\n      </div>\n    </div>\n  </form>\n</div>\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {HomeComponent} from './home/home.component';\r\nimport {RegisterComponent} from './register/register.component';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {AccountComponent} from './account/account.component';\r\nimport {ErrorComponent} from './error/error.component';\r\nimport {AddComponent} from './add/add.component';\r\nimport {AuthGuard} from './auth.guard';\r\nimport {ApplicationsComponent} from './applications/applications.component';\r\nimport {PersonalComponent} from './personal/personal.component';\r\nimport {PrivacyComponent} from './privacy/privacy.component';\r\nimport {AboutComponent} from './about/about.component';\r\nimport {ContactsComponent} from './contacts/contacts.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  { path: 'register', component: RegisterComponent},\r\n  { path: 'login', component: LoginComponent},\r\n  { path: 'account', component: AccountComponent, canActivate: [AuthGuard]},\r\n  { path:  'error', component: ErrorComponent},\r\n  { path:  'add', component: AddComponent, canActivate: [AuthGuard]},\r\n  { path:  'applications', component: ApplicationsComponent, canActivate: [AuthGuard]},\r\n  { path:  'personal', component: PersonalComponent, canActivate: [AuthGuard]},\r\n  { path:  'privacy', component: PrivacyComponent, canActivate: [AuthGuard]},\r\n  { path:  'about', component: AboutComponent},\r\n  { path:  'contacts', component: ContactsComponent},\r\n  { path:  '**', redirectTo: '/error'}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule {\r\n\r\n}\r\n","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {AuthService} from './auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  constructor(\n    public router: Router,\n    public auth: AuthService\n    ) {\n  }\n  title = 'self-register-mark-II';\n  opened =  false;\n  public username = 'user'\n\n  ngOnInit(): void {\n    const potentialToken = localStorage.getItem('auth-token')\n    const potentialName = localStorage.getItem('username')\n    if (potentialToken !== null) {\n      this.auth.setToken(potentialToken)\n      this.auth.setName(potentialName)\n      this.username = potentialName.split(' ')[0]\n    }\n  }\n\n  goToLogin() {\n    this.router.navigate(['/login'])\n  }\n\n  logout() {\n    this.auth.logout()\n    this.router.navigate(['/'])\n  }\n}\n","<div (window:resize)=\"sidenav.close()\">\n  <mat-toolbar style=\"width: 100%; position: fixed; top: 0; z-index: 10\" fxLayout=\"row\">\n    <div fxLayout=\"row\" fxFlex=\"10\">\n      <button style=\"height: 40px; width: 40px\" mat-icon-button (click)=\"sidenav.toggle()\" fxHide=\"true\" fxShow.lt-md=\"true\" >\n        <mat-icon>menu</mat-icon>\n      </button>\n      <div class=\"nav-block\" [routerLink]=\"['/']\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n        <img src=\"assets/images/logo.png\" style=\"width: 45px; height: 45px\" *ngIf=\"router.url != '/login'\">\n        <span class=\"text-main nav-item\">Selfreg</span>\n      </div>\n    </div>\n    <div fxFlex=\"70\" style=\"margin-left: 25px\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxShow=\"true\" fxHide.lt-md=\"true\">\n      <div class=\"nav-block\" [routerLink]=\"['/about']\"><span class=\"text-main nav-item\">О нас</span></div>\n      <div class=\"nav-block\" [routerLink]=\"['/contacts']\"><span class=\"text-main nav-item\">Контакты</span></div>\n    </div>\n    <div\n      *ngIf=\"!['/login?authError=true', '/login?expired=true', '/login?registered=true', '/login'].includes(router.url)\"\n      fxLayout=\"row\" fxLayoutAlign=\"end center\" fxFlex=\"20\" fxFlex.lt-md=\"80\">\n      <button [routerLink]=\"['/register']\" class=\"button\" mat-button fxHide.xs=\"true\" *ngIf=\"!auth.isAuthenticated()\">Регистрация</button>\n      <button  mat-raised-button class=\"button primary-button\" *ngIf=\"!auth.isAuthenticated()\" (click)=\"goToLogin()\">Войти</button>\n      <button [routerLink]=\"['/account']\" class=\"button\" mat-button fxHide.xs=\"true\" *ngIf=\"auth.isAuthenticated()\">{{(auth.getName() ? auth.getName().split(' ')[0] : 'user') | titlecase}}</button>\n      <button mat-raised-button class=\"button primary-button\" *ngIf=\"auth.isAuthenticated()\" (click)=\"logout()\">Выйти</button>\n    </div>\n  </mat-toolbar>\n  <mat-sidenav-container style=\"margin-top: 55px; height: auto; min-height: 100vh\">\n\n    <mat-sidenav #sidenav mode=\"over\" fixedInViewport=\"true\" style=\"margin-top: 55px; height: 100vh; width: 100vw\">\n      <div fxLayout=\"column\" fxHide=\"true\" fxShow.lt-md=\"true\">\n        <div *ngIf=\"auth.isAuthenticated()\">\n          <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n            <img class=\"side-image\" src=\"assets/images/user.png\">\n          </div>\n          <div class=\"text-main header\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n            {{username}}\n          </div>\n          <div  fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\n            <div [routerLink]=\"['/account']\" fxLayout=\"column\" fxLayoutAlign=\"end center\" class=\"side-block\" (click)=\"sidenav.toggle()\">\n              <img src=\"assets/images/homepage.png\" class=\"side-block-image\">\n              <div class=\"text-main side-item\">Главная</div>\n            </div>\n            <div [routerLink]=\"['/applications']\"  fxLayout=\"column\" fxLayoutAlign=\"end center\" class=\"side-block\" (click)=\"sidenav.toggle()\">\n              <img src=\"assets/images/document.png\" class=\"side-block-image\">\n              <div class=\"text-main side-item\">Заявки</div>\n            </div>\n          </div>\n          <div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\n            <div [routerLink]=\"['/personal']\"  fxLayout=\"column\" fxLayoutAlign=\"end center\" class=\"side-block\" (click)=\"sidenav.toggle()\">\n              <img src=\"assets/images/id-card.png\" class=\"side-block-image\">\n              <div class=\"text-main side-item\">Личные данные</div>\n            </div>\n            <div [routerLink]=\"['/security']\" fxLayout=\"column\" fxLayoutAlign=\"end center\" class=\"side-block\" (click)=\"sidenav.toggle()\">\n              <img src=\"assets/images/shield.png\" class=\"side-block-image\">\n              <div class=\"text-main side-item\">Безопасность</div>\n            </div>\n          </div>\n        </div>\n        <div>\n          <div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\n            <div [routerLink]=\"['/about']\"  fxLayout=\"column\" fxLayoutAlign=\"end center\" class=\"side-block\" (click)=\"sidenav.toggle()\">\n              <img src=\"assets/images/signs.png\" class=\"side-block-image\">\n              <div class=\"text-main side-item\">О нас</div>\n            </div>\n            <div [routerLink]=\"['/contacts']\" fxLayout=\"column\" fxLayoutAlign=\"end center\" class=\"side-block\" (click)=\"sidenav.toggle()\">\n              <img src=\"assets/images/contacts.png\" class=\"side-block-image\">\n              <div class=\"text-main side-item\">Контакты</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </mat-sidenav>\n\n    <mat-sidenav-content>\n      <div\n        *ngIf=\"['/account', '/applications', '/personal', '/privacy'].includes(router.url)\"\n        fxHide.lt-md=\"true\"\n        class=\"content-navigator\" fxLayout=\"column\">\n        <div [routerLink]=\"['/account']\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact:true}\"\n             fxLayout=\"row\" fxLayoutAlign=\"start center\"\n             class=\"content-navigator-item \">\n          <mat-icon>perm_identity</mat-icon>\n          <span class=\"text-main nav-text\">Главная</span>\n        </div>\n        <div [routerLink]=\"['/applications']\" routerLinkActive=\"active\"\n             fxLayout=\"row\" fxLayoutAlign=\"start center\"\n             class=\"content-navigator-item\">\n          <mat-icon>library_books</mat-icon>\n          <span class=\"text-main nav-text\">Заявки</span>\n        </div>\n        <div [routerLink]=\"['/personal']\" routerLinkActive=\"active\"\n             fxLayout=\"row\" fxLayoutAlign=\"start center\"\n             class=\"content-navigator-item\">\n          <mat-icon>account_box</mat-icon>\n          <span class=\"text-main nav-text\">Личные данные</span>\n        </div>\n        <div [routerLink]=\"['/privacy']\" routerLinkActive=\"active\"\n             fxLayout=\"row\" fxLayoutAlign=\"start center\"\n             class=\"content-navigator-item\">\n          <mat-icon>security</mat-icon>\n          <span class=\"text-main nav-text\">Безопасность</span>\n        </div>\n      </div>\n      <router-outlet></router-outlet>\n      <app-footer></app-footer>\n    </mat-sidenav-content>\n  </mat-sidenav-container>\n\n\n</div>\n\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AccountComponent } from './account/account.component';\nimport { HomeComponent } from './home/home.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { AddComponent } from './add/add.component';\nimport { AboutComponent } from './about/about.component';\nimport { ContactsComponent } from './contacts/contacts.component';\nimport { ApplicationsComponent } from './applications/applications.component';\nimport { PersonalComponent } from './personal/personal.component';\nimport { PrivacyComponent } from './privacy/privacy.component';\nimport { ErrorComponent } from './error/error.component';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {TokenInterceptor} from './token.interceptor';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\n\n\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatRadioModule, MAT_RADIO_DEFAULT_OPTIONS} from '@angular/material/radio';\nimport {MatTreeModule} from '@angular/material/tree';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatGridListModule} from '@angular/material/grid-list';\n// import {MatGridListModule} from '@angular/material/grid-list';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    AccountComponent,\n    HomeComponent,\n    ErrorComponent,\n    FooterComponent,\n    AddComponent,\n    AboutComponent,\n    ContactsComponent,\n    ApplicationsComponent,\n    PersonalComponent,\n    PrivacyComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatInputModule,\n    MatDividerModule,\n    MatRadioModule,\n    MatTreeModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatSnackBarModule,\n    MatGridListModule\n    // MatGridListModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      multi: true,\n      useClass: TokenInterceptor\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {AccountService} from '../account.service';\nimport {Subscription} from 'rxjs';\nimport {AuthService} from '../auth.service';\nimport {AppData} from '../interfaces';\n\n@Component({\n  selector: 'app-applications',\n  templateUrl: './applications.component.html',\n  styleUrls: ['./applications.component.css']\n})\n\nexport class ApplicationsComponent implements OnInit {\n\n  @ViewChild('grid', {static: false}) gridRef: ElementRef;\n\n  aSub: Subscription;\n  userApps: AppData[];\n  columns: number;\n\n  constructor(\n    private account: AccountService,\n    private auth: AuthService\n  ) { }\n\n  loaded = false;\n\n  ngOnInit(): void {\n    this.adjustGrid();\n    this.aSub = this.account.getAllApplications().subscribe(apps => {\n      console.log('apps', apps);\n      this.userApps = apps;\n      this.loaded = true;\n    }, error => {\n      if (error.status === 401) {\n        this.auth.logout();\n      }\n    });\n  }\n\n  adjustGrid() {\n    this.columns = (window.innerWidth * 0.7) / 320 >> 0;\n    console.log('here is width', this.columns, window.innerWidth);// = '100px';\n  }\n}\n","<div class=\"block-one\">\n  <div fxFlex=\"20\" fxHide.lt-md=\"true\" fxFlex.lt-lg=\"30\" fxLayout=\"column\"></div>\n  <div style=\"\" fxFlex=\"70\" fxFlex.lt-md=\"100\" fxFlex.lt-lg=\"55\" fxLayout=\"column\" fxLayoutAlign=\"start center\">\n    <div style=\"margin-top: 35px; margin-bottom: 25px; text-align: center\" class=\"text-main header\">\n      Заявки\n    </div>\n    <mat-grid-list style=\"width: 100%; \" cols=\"{{columns}}\" rowHeight=\"450px\"  #grid (window:resize)=\"adjustGrid()\">\n      <mat-grid-tile [routerLink]=\"['/add']\" class=\"shadow\" >\n        <mat-card [ngClass]=\"{shine: !loaded }\" style=\"padding: 0;height: 385px; width: 300px; margin: 50px 8px 15px;\">\n          <div fxHide=\"{{!loaded}}\" class=\"content\" style=\"height: 100%\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n            <img src=\"assets/images/plus%20(1).png\" style=\"height: 120px; width: 120px\">\n            <div style=\"margin-top: 35px;text-align: center\" class=\"text-main subheader\">\n              Создать новую заявку\n            </div>\n          </div>\n\n        </mat-card>\n\n      </mat-grid-tile>\n      <mat-grid-tile *ngIf=\"!loaded\">\n        <mat-card class=\"shine\" style=\"padding: 0;height: 385px; width: 300px; margin: 50px 8px 15px;\">\n\n        </mat-card>\n\n      </mat-grid-tile>\n      <mat-grid-tile *ngIf=\"!loaded\">\n        <mat-card class=\"shine\" style=\"padding: 0;height: 385px; width: 300px; margin: 50px 8px 15px;\">\n\n        </mat-card>\n\n      </mat-grid-tile>\n      <ng-container>\n        <mat-grid-tile class=\"shadow\" *ngFor=\"let app of userApps\">\n          <mat-card style=\"padding: 0;height: 385px; width: 300px; margin: 50px 8px 15px;\" >\n            <div class=\"content\">\n              <div class=\"trademark-header-background\" style=\"\" fxLayout=\"column\" fxLayoutAlign=\"start center\">\n                <div fxLayoutAlign=\"center center\" class=\"trademark-header-logo\">\n                  <img src=\"{{app.logoUrl ? app.logoUrl : 'assets/images/logo-empty.png'}}\" style=\" height: 50px; width: 50px;\">\n                </div>\n                <div fxLayout=\"column\" fxLayoutAlign=\"center start\" class=\"trademark-header-content\">\n                  <div class=\"text-main trademark-header\" >\n                    {{app.name}}\n                  </div>\n                  <div class=\"text-main\">\n                    {{app.date | date}}\n                  </div>\n                </div>\n              </div>\n              <div fxLayout=\"row\" class=\"trademark-block element\" style=\"\">\n                <div fxLayoutAlign=\"center center\" style=\"width: 50px\">\n                  <img src=\"assets/images/type.png\" style=\"height: 35px; width: 35px\">\n                </div>\n                <div fxLayout=\"column\" style=\"width: 100%; padding-left: 5px\">\n                  <div class=\"text-main trademark-field\">Тип</div>\n                  <div class=\"text-alternative trademark-value\">\n                    {{app.type === 'word' ? 'Словесный' : (app.type === 'image' ? 'Изобразительный' : 'Комбинированный')}}\n                  </div>\n                </div>\n              </div>\n              <div fxLayout=\"row\" class=\"trademark-block element end\">\n                <div fxLayoutAlign=\"center center\" style=\"width: 50px\">\n                  <img src=\"assets/images/user-card.png\" style=\"height: 25px; width: 25px\">\n                </div>\n                <div fxLayout=\"column\" style=\"width: 100%; padding-left: 5px\">\n                  <div class=\"text-main trademark-field\">Заявитель</div>\n                  <div class=\"text-alternative trademark-value\">{{app.applicant.name}}</div>\n                </div>\n              </div>\n              <mat-divider></mat-divider>\n              <div fxLayout=\"row\" class=\"trademark-block element footer\">\n                <div fxLayoutAlign=\"center center\" style=\"width: 50px\">\n                  <img src=\"assets/images/progress.png\" style=\"height: 35px; width: 35px\">\n                </div>\n                <div fxLayout=\"column\" style=\"width: 100%; padding-left: 5px\">\n                  <div class=\"text-main trademark-field\">Статус</div>\n                  <div class=\"text-alternative trademark-value\">{{app.status}}</div>\n                </div>\n              </div>\n            </div>\n          </mat-card>\n        </mat-grid-tile>\n      </ng-container>\n\n    </mat-grid-list>\n\n  </div>\n  <div fxFlex=\"10\" fxHide.lt-md=\"true\" fxFlex.lt-lg=\"15\" ></div>\n</div>\n","import {ActivatedRouteSnapshot, CanActivate, CanActivateChild, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {Observable, of} from 'rxjs';\r\nimport {Injectable} from '@angular/core';\r\nimport {AuthService} from './auth.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AuthGuard implements CanActivate, CanActivateChild {\r\n\r\n  constructor(\r\n    private auth: AuthService,\r\n    private router: Router) {\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n    if (this.auth.isAuthenticated()) {\r\n      return of(true)\r\n    }\r\n    else {\r\n      this.router.navigate(['/login'])\r\n      return of(false)\r\n    }\r\n  }\r\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n    return this.canActivate(route, state)\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {NewUser, User} from './interfaces';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {tap} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  private token = null;\r\n  private userName = null;\r\n\r\n  constructor(private http: HttpClient ) {\r\n  }\r\n  register(user: NewUser): Observable<NewUser> {\r\n    return this.http.post<NewUser>('/api/auth/register', user);\r\n  }\r\n\r\n  login(user: User): Observable<{token: string, name: string}> {\r\n    return this.http.post<{token: string, name: string}>('/api/auth/login', user)\r\n      .pipe(\r\n        tap(({token, name}) => {\r\n          localStorage.setItem('auth-token', token);\r\n          localStorage.setItem('username', name);\r\n          this.setToken(token);\r\n          this.setName(name);\r\n        })\r\n      );\r\n  }\r\n\r\n  setToken(token: string) {\r\n    this.token = token;\r\n  }\r\n  getToken(): string {\r\n    return this.token;\r\n  }\r\n  setName(name: string) {\r\n    this.userName = name;\r\n  }\r\n  getName(): string {\r\n    return this.userName;\r\n  }\r\n  isAuthenticated(): boolean {\r\n    return !!this.token;\r\n  }\r\n  logout() {\r\n    this.setToken(null);\r\n    this.setName(null);\r\n    localStorage.clear();\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Class} from './interfaces';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {tap} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ClassService {\r\n\r\n  // private mainclesses = null;\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n              )\r\n  { }\r\n\r\n  getMain(): Observable<Class[]> {\r\n    return this.http.get<Class[]>(`/api/class`);\r\n  }\r\n  getChildren(id: string): Observable<Class[]> {\r\n    return this.http.get<Class[]>(`/api/class/children/${id}`);\r\n  }\r\n  getById(id: string): Observable<Class> {\r\n    return this.http.get<Class>(`/api/class/${id}`);\r\n  }\r\n  getUp(id: string): Observable<Class[]> {\r\n    return this.http.get<Class[]>(`/api/class/up/${id}`);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contacts',\n  templateUrl: './contacts.component.html',\n  styleUrls: ['./contacts.component.css']\n})\nexport class ContactsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"block-one\">\n  <div style=\"margin-top: 35px;text-align: center\" class=\"text-main header\">\n    Контакты\n  </div>\n  <div *ngIf=\"true\" class=\"text-main subheader\">\n    Раздел находится в разработке, но это ненадолго\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"block-one\" div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n  <div class=\"error\"  fxLayoutAlign=\"center\">\n    <img src=\"assets/images/emoji.svg\">\n  </div>\n  <div class=\"text-main header error\"  fxLayoutAlign=\"center\">\n    <h1>Ой... а такой страницы нет</h1>\n  </div>\n  <div class=\"error\"  fxLayoutAlign=\"center\">\n    <button [routerLink]=\"['/']\" class=\"button\" mat-raised-button color=\"warn\">Вернуться на главную</button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-divider style=\"margin: 25px\"></mat-divider>\n<div  fxLayout=\"row\" fxLayout.xs=\"column\" style=\"margin-right: 25px; margin-left: 25px; margin-bottom: 25px\">\n  <div fxFlex=\"50\" fxLayoutAlign=\"start\" fxLayoutAlign.xs=\"center\">\n    <div fxLayout=\"row\" fxFlexAlign=\"center center\">\n      <small>© Created by .digital</small>\n    </div>\n  </div>\n  <div fxFlex=\"50\" fxLayoutAlign=\"center\">\n    <div fxLayout=\"row\" fxFlexAlign=\"center center\">\n      <img src=\"assets/images/inst.png\" style=\"width: 25px; height: 25px\">\n    </div>\n  </div>\n  <div fxFlex=\"50\" fxLayoutAlign=\"end\" fxLayoutAlign.xs=\"center\" >\n    <div fxLayout=\"row\" fxFlexAlign=\"center center\">\n\n    </div>\n  </div>\n<!--  <div fxFlex=\"50\"  style=\"margin: auto;position: center\" fxLayout=\"row\" fxFlexAlign=\"center center\">-->\n<!--    Created by .digital-->\n<!--  </div>-->\n<!--  <div fxFlex=\"50\"  fxLayout=\"row\" fxFlexAlign=\"center center\">-->\n<!--    <img src=\"assets/images/inst.png\" style=\"margin: auto;position: center;width: 25px; height: 25px\">-->\n<!--  </div>-->\n<!--  <div fxFlex=\"50\"  style=\"margin: auto;position: center\" fxLayout=\"row\" fxFlexAlign=\"center center\">-->\n<!--    Created by .digital-->\n<!--  </div>-->\n<!--  <img fxFlexAlign=\"center end\" src=\"assets/images/inst.png\" style=\"width: 25px; height: 25px\">-->\n<!--  <div fxFlexAlign=\"end center\">Москва, 2020 г. Created by .digital</div>-->\n</div>\n<!--  <div style=\"margin-bottom: 25px; background: red\" fxLayoutAlign=\"center center\" fxFlex=\"20\"></div>-->\n<!--  <div style=\"margin-bottom: 25px; background: green\" fxLayoutAlign=\"center center\" fxFlex=\"20\">-->\n<!--    <span></span>-->\n<!--    <img src=\"assets/images/inst.png\" style=\"width: 25px; height: 25px\">-->\n<!--    <div>Москва, 2020 г. Created by</div>-->\n<!--  </div>-->\n<!--  <div style=\"margin-bottom: 25px; background: blue\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxFlex=\"20\">-->\n<!--    Москва, 2020 г. Created by-->\n<!--    <a>.digital</a>-->\n<!--  </div>-->\n\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../auth.service';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n\n  registerForm: FormGroup\n  aSub: Subscription\n\n  constructor(\n    private router: Router,\n    private auth: AuthService) { }\n    public background = 'url(assets/images/background-1080-blurry1.png)'\n\n  ngOnInit(): void {\n    if (this.auth.isAuthenticated()) {\n      console.log(true)\n      this.router.navigate(['/account'])\n    } else {\n      this.registerForm = new FormGroup({\n        username : new FormControl(null, [Validators.required]),\n        email    : new FormControl(null, [Validators.required, Validators.email]),\n        password : new FormControl(null, [Validators.required, Validators.minLength(8)])\n      })\n      console.log(false)\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.aSub) {\n      this.aSub.unsubscribe()\n    }\n  }\n\n  submit() {\n    if (this.registerForm.invalid) {\n      console.log('wrong')//this.router.navigate(['/register'])\n    } else {\n      this.registerForm.disable()\n      this.aSub = this.auth.register(this.registerForm.value).subscribe(\n        () => {\n          this.router.navigate(['/login'], {\n            queryParams : {\n              registered: true\n            }\n          })\n        },\n        error => {\n          this.router.navigate(['/register'], {\n            queryParams : {\n              emailExists: true\n            }\n          })\n          this.registerForm.enable()\n        }\n      )\n    }\n\n  }\n}\n","<div class=\"block-one\" style=\"background-image: {{background}}\" fxLayout.lt-md=\"column\" fxLayout.gt-sm=\"row\" fxLayoutAlign=\"space-evenly center\">\n  <div class=\"description\">\n    <div class=\"text-main greetings-header\">\n      Регистрируй самостоятельно\n    </div>\n    <div class=\"text-alternative greetings-text\">\n      SelfReg это сервис, позволяющий тебе самостоятельно регистрировать товарные знаки без мам, пап и кредитов\n    </div>\n  </div>\n  <mat-card class=\"register-card\" fxHide.lt-md=\"true\" fxShow=\"true\">\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"submit()\">\n      <mat-form-field appearance=\"outline\" class=\"text-main\">\n        <mat-label >Ваше имя</mat-label>\n        <input formControlName=\"username\" matInput placeholder=\"Имя\" fxLayoutAlign=\"center\">\n        <mat-error *ngIf=\"registerForm.get('username').invalid && registerForm.get('username').touched\">\n          Поле 'Имя' является обязательным\n        </mat-error>\n      </mat-form-field>\n      <mat-form-field appearance=\"outline\" class=\"text-main\">\n        <mat-label>e-mail</mat-label>\n        <input formControlName=\"email\" type=\"email\" matInput placeholder=\"email\">\n        <mat-error *ngIf=\"registerForm.get('email').invalid && registerForm.get('email').touched\">\n          Введите корректный email\n        </mat-error>\n      </mat-form-field>\n      <mat-form-field appearance=\"outline\" class=\"text-main\">\n        <mat-label>Пароль</mat-label>\n        <input formControlName=\"password\" type=\"password\" matInput placeholder=\"Пароль\">\n        <mat-error *ngIf=\"registerForm.get('password').invalid && registerForm.get('password').touched\">\n          Введите корректный пароль не менее 8 символов\n        </mat-error>\n      </mat-form-field>\n      <button type=\"submit\" class=\"primary-button register-button\" mat-raised-button>Зарегистрироваться</button>\n    </form>\n  </mat-card>\n  <button [routerLink]=\"['/register']\" class=\"primary-button register-button-alt\" mat-flat-button fxHide=\"true\" fxShow.lt-md=\"true\">Зарегистрироваться</button>\n</div>\n","import {Component, ElementRef, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AuthService} from '../auth.service';\nimport {Subscription} from 'rxjs';\nimport {ActivatedRoute, Params, Router} from '@angular/router';\n//\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n\n  loginForm: FormGroup\n  aSub: Subscription\n  wrongAuth = false\n  expired = false\n  canLogin = false\n\n  constructor(\n    private auth: AuthService,\n    private router: Router,\n    private route: ActivatedRoute) {\n\n  }\n\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      email    : new FormControl(null, [Validators.required, Validators.email]),\n      password : new FormControl(null, [Validators.required, Validators.minLength(8)])\n    })\n    this.route.queryParams.subscribe((params: Params ) => {\n      if (params['registered']) {\n        this.canLogin = true\n      }\n      if (params['expired']) {\n        this.expired = true\n      }\n      if (params['authError']) {\n        this.wrongAuth = true\n      }\n    })\n  }\n  ngOnDestroy(): void {\n    console.log(this.aSub)\n    if (this.aSub) {\n      this.aSub.unsubscribe()\n    }\n  }\n\n  submit() {\n    this.loginForm.disable()\n    this.aSub = this.auth.login(this.loginForm.value).subscribe(\n      () => {\n        this.router.navigate(['/account'])\n      },\n      error => {\n        console.warn(error)\n        this.router.navigate(['/login'], {\n          queryParams: {\n            authError: true\n          }\n        })\n        // this.snackBar.open('message', 'OK', {\n        //   duration: 2000,\n        // });\n        // SnackbarService.snack('Неверный логин')  //this.wrongAuth = true// this.openSnackBar('Message archived');\n        this.loginForm.enable()\n      }\n      )\n  }\n\n}\n","<div class=\"block-one\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <mat-card class=\"login-window\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n    <img src=\"assets/images/logo.png\" style=\"height: 45px; width: 45px; margin-bottom: 10px\">\n    <div class=\"card-header\">\n      Вход\n    </div>\n    <div class=\"text-alternative description\">\n      Используйте свою учетную запись для входа\n    </div>\n    <div class=\"text-alternative announcement-negative\" fxLayoutAlign=\"center center\" *ngIf=\"wrongAuth\">Неверный логин или пароль</div>\n    <div class=\"text-alternative announcement-negative\" fxLayoutAlign=\"center center\" *ngIf=\"expired\">Сеанс закончен, войдите заново</div>\n    <div class=\"text-alternative announcement-positive\" fxLayoutAlign=\"center center\" *ngIf=\"canLogin\">Ура! Теперь вы можете войти</div>\n<!--    <h3 style=\"color: white; background: #c73934; width: 100%; text-align: center\" ></h3>-->\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"submit()\">\n      <mat-form-field  class=\"form-filed text-main\" appearance=\"outline\">\n        <mat-label>e-mail</mat-label>\n        <input formControlName=\"email\" type=\"email\" matInput placeholder=\"email\">\n<!--        <mat-hint style=\"color: white\" *ngIf=\"wrongAuth\">Неверный логин или пароль</mat-hint>-->\n        <mat-error *ngIf=\"loginForm.get('email').invalid && loginForm.get('email').touched\">\n          Введите корректный email\n        </mat-error>\n      </mat-form-field>\n      <mat-form-field  class=\"form-filed text-main\"  appearance=\"outline\">\n        <mat-label>Пароль</mat-label>\n        <input formControlName=\"password\" type=\"password\" matInput placeholder=\"Пароль\">\n        <mat-error *ngIf=\"loginForm.get('password').invalid && loginForm.get('password').touched\">\n          Введите корректный пароль не менее 8 символов\n        </mat-error>\n      </mat-form-field>\n      <div class=\"form-filed button alternative-button\" style=\"margin-bottom: 15%; margin-top: 0\">\n        Забыли пароль?\n      </div>\n      <div class=\"form-filed\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n        <div CLASS=\"button alternative-button\" [routerLink]=\"['/register']\">\n          Создать аккаунт\n        </div>\n        <button type=\"submit\" class=\"button primary-button\" mat-raised-button  [disabled]=\"loginForm.invalid || loginForm.disabled\">Войти</button>\n      </div>\n\n    </form>\n  </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-personal',\n  templateUrl: './personal.component.html',\n  styleUrls: ['./personal.component.css']\n})\nexport class PersonalComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"block-one\">\n  <div fxFlex=\"20\" fxHide.lt-md=\"true\" fxFlex.lt-lg=\"30\" fxLayout=\"column\"></div>\n  <div fxFlex=\"60\" fxFlex.lt-md=\"100\" fxFlex.lt-lg=\"55\">\n    <div style=\"margin-top: 35px;text-align: center\" class=\"text-main header\">\n      Данные пользователя\n    </div>\n    \n    <div *ngIf=\"true\" class=\"text-main subheader\">\n      Раздел находится в разработке, но это ненадолго\n    </div>\n\n    <div style=\"margin-top: 35px;text-align: center\" class=\"text-main subheader\">\n      Заявители\n    </div>\n  </div>\n  <div fxFlex=\"20\" fxHide.lt-md=\"true\" fxFlex.lt-lg=\"15\" ></div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-privacy',\n  templateUrl: './privacy.component.html',\n  styleUrls: ['./privacy.component.css']\n})\nexport class PrivacyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"block-one\">\n  <div fxFlex=\"20\" fxHide.lt-md=\"true\" fxFlex.lt-lg=\"30\" fxLayout=\"column\"></div>\n  <div fxFlex=\"60\" fxFlex.lt-md=\"100\" fxFlex.lt-lg=\"55\">\n    <div style=\"margin-top: 35px;text-align: center\" class=\"text-main header\">\n      Изменить пароль\n    </div>\n    <div *ngIf=\"true\" class=\"text-main subheader\">\n      Раздел находится в разработке, но это ненадолго\n    </div>\n  </div>\n  <div fxFlex=\"20\" fxHide.lt-md=\"true\" fxFlex.lt-lg=\"15\" ></div>\n</div>\n\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Subscription} from 'rxjs';\nimport {AuthService} from '../auth.service';\nimport {ActivatedRoute, Params, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit, OnDestroy {\n\n  registerForm: FormGroup\n  aSub: Subscription\n\n  constructor(\n    private auth: AuthService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    this.registerForm = new FormGroup({\n      username : new FormControl(null, [Validators.required]),\n      email    : new FormControl(null, [Validators.required, Validators.email]),\n      password : new FormControl(null, [Validators.required, Validators.minLength(8)])\n    })\n    this.route.queryParams.subscribe((params: Params ) => {\n      // if (params['registered']) {\n      //\n      // }\n    })\n  }\n  ngOnDestroy(): void {\n    if (this.aSub) {\n      this.aSub.unsubscribe()\n    }\n\n  }\n\n  submit() {\n    this.registerForm.disable()\n    this.aSub = this.auth.register(this.registerForm.value).subscribe(\n      () => {\n        this.router.navigate(['/login'], {\n          queryParams : {\n            registered: true\n          }\n        })\n      },\n      error => {\n        this.router.navigate(['/register'], {\n          queryParams : {\n            emailExists: true\n          }\n        })\n        this.registerForm.enable()\n      }\n    )\n  }\n\n}\n","<div class=\"block-one\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <mat-card class=\"register-window\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <div fxFlex.lt-md=\"100\" style=\"width: 350px;\" fxLayout=\"column\" fxLayoutAlign=\"start center\">\n      <div class=\"register-block\">\n        <img src=\"assets/images/logo.png\" style=\"height: 45px; width: 45px; margin-bottom: 10px\">\n      </div>\n      <div class=\"card-header register-header\">\n        Создайте новый аккаунт\n      </div>\n      <form [formGroup]=\"registerForm\" (ngSubmit)=\"submit()\" class=\"register-block\">\n        <div fxLayout=\"row\">\n          <mat-form-field style=\"width: 100%\" appearance=\"outline\" class=\"text-main\">\n            <mat-label>Имя</mat-label>\n            <input formControlName=\"username\" matInput placeholder=\"Имя\">\n          </mat-form-field>\n        </div>\n        <div>\n          <mat-form-field appearance=\"outline\" class=\"text-main\">\n            <mat-label>e-mail</mat-label>\n            <input formControlName=\"email\" type=\"email\" matInput placeholder=\"email\">\n          </mat-form-field>\n        </div>\n        <div>\n          <mat-form-field class=\"form-filed\" appearance=\"outline\" class=\"text-main\">\n            <mat-label>Пароль</mat-label>\n            <input formControlName=\"password\" type=\"password\"  matInput placeholder=\"Пароль\">\n          </mat-form-field>\n        </div>\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n        <div [routerLink]=\"['/login']\" class=\"button alternative-button\">\n          Войти\n        </div>\n        <button class=\"button primary-button\" type=\"submit\" mat-raised-button [disabled]=\"registerForm.invalid || registerForm.disabled\">Создать</button>\n      </div>\n      </form>\n    </div>\n    <div fxHide.lt-md=\"true\" style=\"width: 350px;\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n      <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n        <img src=\"assets/images/register-logo.png\" style=\"height: 50%; width: 50%\">\n      </div>\n      <div class=\"text-alternative card-description\">\n        Создай аккаунт. Подавай заявки отовсюду. Получай результат\n      </div>\n    </div>\n  </mat-card>\n</div>\n","import {AuthService} from './auth.service';\r\nimport {Injectable} from '@angular/core';\r\nimport {HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\r\nimport {Observable, throwError} from 'rxjs';\r\nimport {catchError} from 'rxjs/operators';\r\nimport {Router} from '@angular/router';\r\n\r\n@Injectable()\r\n\r\nexport class TokenInterceptor implements HttpInterceptor{\r\n  constructor(\r\n    private auth: AuthService,\r\n    private router: Router) {\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    if (this.auth.isAuthenticated()) {\r\n      req = req.clone({\r\n        setHeaders: {\r\n          Authorization: this.auth.getToken()\r\n        }\r\n      })\r\n    }\r\n    return next.handle(req).pipe(\r\n      catchError((error: HttpErrorResponse) => this.handleAuthError(error))\r\n    )\r\n  }\r\n  private handleAuthError(error: HttpErrorResponse): Observable<any> {\r\n    if (error.status === 401) {\r\n      this.router.navigate(['/login'], {\r\n        queryParams: {\r\n          expired: true\r\n        }\r\n      })\r\n    }\r\n    return throwError(error)\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}